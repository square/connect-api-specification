#!/usr/bin/env bash
#
# Generated by: https://github.com/swagger-api/swagger-codegen.git

frameworkVersion={{targetFrameworkNuget}}
netfx=${frameworkVersion#net}

echo "[INFO] Target framework: ${frameworkVersion}"

echo "[INFO] Download nuget and packages"
if ! which wget
then
    echo "wget is either not installed on thie system or is"\
    "unavailable through the \$PATH."
	while true; do
	    printf "Install it by [ curl -sSL https://dist.nuget.org/win-x86-commandline/latest/nuget.exe ]? [y/N] "
	    read -r  yn
	    case "$yn" in
	        [Yy]* ) break;;
	        [Nn]* ) exit;;
	        '' ) exit;;
	    esac
	done
	curl -sSL https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -o nuget.exe;
else
	wget -nc https://dist.nuget.org/win-x86-commandline/latest/nuget.exe;
fi

mozroots --import --sync
mono nuget.exe install {{sourceFolder}}/{{packageName}}/packages.config -o packages;

echo "[INFO] Copy DLLs to the 'bin' folder"
mkdir -p bin;
cp packages/Newtonsoft.Json.8.0.3/lib/{{targetFrameworkNuget}}/Newtonsoft.Json.dll bin/Newtonsoft.Json.dll;
cp packages/RestSharp.105.1.0/lib/{{targetFrameworkNuget}}/RestSharp.dll bin/RestSharp.dll;

echo "[INFO] Run 'mcs' to build bin/{{{packageName}}}.dll"

mcs -sdk:${netfx} -r:bin/Newtonsoft.Json.dll,\
bin/RestSharp.dll,\
System.ComponentModel.DataAnnotations.dll,\
System.Runtime.Serialization.dll \
-target:library \
-out:bin/{{packageName}}.dll \
-recurse:"{{sourceFolder}}/{{packageName}}/*.cs" \
-doc:bin/{{packageName}}.xml \
-platform:anycpu

if [ $? -ne 0 ]
then
  echo "[ERROR] Compilation failed with exit code $?"
  exit 1
else
  echo "[INFO] bin/{{{packageName}}}.dll was created successfully"
fi
