{
    "swagger": "2.0",
    "info": {
        "version": "3.0",
        "title": "Square Connect API",
        "description": "Client library for accessing the Square Connect APIs",
        "termsOfService": "https://connect.squareup.com/tos",
        "contact": {
            "name": "Square Developer Platform",
            "email": "developers@squareup.com",
            "url": "https://squareup.com/developers"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/"
    },
    "host": "connect.squareup.com",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "personal_access_token": {
            "type": "apiKey",
            "description": "Access token for accessing a single Square Account",
            "name": "Authorization",
            "in": "header"
        },
        "oauth2": {
            "type": "oauth2",
            "authorizationUrl": "https://connect.squareup.com/oauth2/authorize?<PARAMETERS>",
            "flow": "accessCode",
            "tokenUrl": "https://connect.squareup.com/oauth2/token",
            "scopes": {
                "MERCHANT_PROFILE_READ": "GET endpoints related to a merchant's business and location entities. Almost all Connect API applications need this permission in order to obtain a merchant's location IDs.",
                "PAYMENTS_READ": "GET endpoints related to transactions and refunds.",
                "PAYMENTS_WRITE": " POST, PUT, and DELETE endpoints related to transactions and refunds. E-commerce applications must request this permission.",
                "CUSTOMERS_READ": " GET endpoints related to customer management.",
                "CUSTOMERS_WRITE": "POST, PUT, and DELETE endpoints related to customer management.",
                "SETTLEMENTS_READ": "GET endpoints related to settlements (deposits).",
                "BANK_ACCOUNTS_READ": "GET endpoints related to a merchant's bank accounts.",
                "ITEMS_READ": "GET endpoints related to a merchant's item library.",
                "ITEMS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant's item library.",
                "ORDERS_READ": "GET endpoints related to a merchant's Square online store.",
                "ORDERS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant's Square online store.",
                "EMPLOYEES_READ": "GET endpoints related to employee management.",
                "EMPLOYEES_WRITE": "POST, PUT, and DELETE endpoints related to employee management.",
                "TIMECARDS_READ": "GET endpoints related to employee timecards.",
                "TIMECARDS_WRITE": "POST, PUT, and DELETE endpoints related to employee timecards."
            }
        }
    },
    "paths": {
        "/oauth2/token": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Exchange an Authorization code for an Access Token ",
                "operationId": "GetToken",
                "description": "Exchange an Authorization code for an Access Token ",
                "parameters": [{
                    "name": "OauthObtainTokenRequest",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/OauthObtainTokenRequest"
                    }
                }],
                "security": [],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/oauth/#exchangecodefortoken"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OauthAccessToken"
                        },
                        "headers": {}
                    }
                }
            }
        },
        "/oauth2/clients/{application_id}/access-token/renew": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Renew your Access Token.",
                "operationId": "RenewToken",
                "description": "Renew your Access Token.",
                "parameters": [{
                    "name": "application_id",
                    "description": "Your Application ID.",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "OauthRenewRequest",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/OauthRenewRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["MERCHANT_PROFILE_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/oauth/#oauthflowrenewtoken"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OauthAccessToken"
                        },
                        "headers": {}
                    }
                }
            }
        },
        "/oauth2/revoke": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Revoke your Access Token.",
                "operationId": "RenewToken",
                "description": "You can use this endpoint to revoke an access token generated with the OAuth flow.",
                "parameters": [{
                    "name": "OauthRevokeRequest",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/OauthRevokeRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["MERCHANT_PROFILE_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/oauth/#post-revoke"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OauthRevokeResponse"
                        },
                        "headers": {}
                    }
                }
            }
        },
        "/v1/me": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a business's information.",
                "operationId": "v1RetrieveBusiness",
                "description": "Get a business's information.",
                "parameters": [],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["MERCHANT_PROFILE_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-merchantid"
                },
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/v1Merchant"
                        },
                        "headers": {}
                    }
                }
            }
        },
        "/v1/me/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Provides details for a business's locations, including their IDs.",
                "operationId": "v1ListLocations",
                "description": "Provides details for a business's locations, including their IDs.",
                "parameters": [],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["MERCHANT_PROFILE_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-locations"
                },
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Merchant"
                            }
                        }
                    }
                }
            }
        },
        "/v1/me/employees": {
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Creates an employee for a business.",
                "operationId": "v1CreateEmployee",
                "description": "Creates an employee for a business.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Employee"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-employees"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Employee"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides summary information for all of a business's employees.",
                "operationId": "v1ListEmployees",
                "description": "Provides summary information for all of a business's employees.",
                "parameters": [{
                    "name": "order",
                    "in": "query",
                    "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC ",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ]
                }, {
                    "name": "begin_updated_at",
                    "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_updated_at",
                    "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "begin_created_at",
                    "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_created_at",
                    "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).",
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                }, {
                    "name": "external_id",
                    "in": "query",
                    "description": "If provided, the endpoint returns only employee entities with the specified external_id.",
                    "type": "string"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
                    "type": "integer",
                    "maximum": 200
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-employees"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Employee"
                            }
                        }
                    }
                }
            }
        },
        "/v1/me/employees/{employee_id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides the details for a single employee.",
                "operationId": "v1RetrieveEmployee",
                "description": "Provides the details for a single employee.",
                "parameters": [{
                    "name": "employee_id",
                    "in": "path",
                    "description": "The employee's ID.",
                    "type": "string",
                    "required": true
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-employeeid"
                },
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_READ"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Employee"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "v1UpdateEmployee",
                "operationId": "v1UpdateEmployee",
                "parameters": [{
                    "name": "employee_id",
                    "in": "path",
                    "description": "The ID of the role to modify.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Employee"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-employeeid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Employee"
                        }
                    }
                }
            }
        },
        "/v1/me/roles": {
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Creates an employee role you can then assign to employees.",
                "operationId": "v1CreateEmployeeRole",
                "description": "Creates an employee role you can then assign to employees.",
                "parameters": [{
                    "name": "EmployeeRole",
                    "in": "body",
                    "required": true,
                    "description": "An EmployeeRole object with a name and permissions, and an optional owner flag.",
                    "schema": {
                        "$ref": "#/definitions/v1EmployeeRole"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-roles"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1EmployeeRole"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides summary information for all of a business's employee roles.",
                "operationId": "v1ListEmployeeRoles",
                "description": "Provides summary information for all of a business's employee roles.",
                "parameters": [{
                    "name": "order",
                    "in": "query",
                    "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC ",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ]
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
                    "type": "integer",
                    "maximum": 200
                }, {
                    "name": "cursor",
                    "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-roles"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1EmployeeRole"
                            }
                        }
                    }
                }
            }
        },
        "/v1/me/roles/{role_id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides the details for a single employee role.",
                "operationId": "v1RetrieveEmployeeRole",
                "description": "Provides the details for a single employee role.",
                "parameters": [{
                    "name": "role_id",
                    "in": "path",
                    "description": "The role's ID.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-roleid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1EmployeeRole"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Modifies the details of an employee role.",
                "operationId": "v1UpdateEmployeeRole",
                "description": "Modifies the details of an employee role.",
                "parameters": [{
                    "name": "role_id",
                    "in": "path",
                    "description": "The ID of the role to modify.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1EmployeeRole"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["EMPLOYEES_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-roleid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1EmployeeRole"
                        }
                    }
                }
            }
        },
        "/v1/me/timecards": {
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Creates a timecard for an employee. Each timecard corresponds to a single shift.",
                "operationId": "v1CreateTimecard",
                "description": "Creates a timecard for an employee. Each timecard corresponds to a single shift.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Timecard"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["TIMECARDS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-timecards"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Timecard"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides summary information for all of a business's employee timecards.",
                "operationId": "v1ListTimecards",
                "description": "Provides summary information for all of a business's employee timecards.",
                "parameters": [{
                    "name": "order",
                    "in": "query",
                    "description": "The order in which timecards are listed in the response, based on their created_at field.",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ],
                    "required": false
                }, {
                    "name": "employee_id",
                    "description": "If provided, the endpoint returns only timecards for the employee with the specified ID.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "begin_clockin_time",
                    "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_clockin_time",
                    "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "begin_clockout_time",
                    "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_clockout_time",
                    "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "begin_updated_at",
                    "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_updated_at",
                    "description": "If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "deleted",
                    "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don't provide this parameter, both valid and deleted timecards are returned.",
                    "type": "boolean",
                    "in": "query",
                    "required": false
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
                    "type": "integer",
                    "maximum": 200
                }, {
                    "name": "cursor",
                    "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["TIMECARDS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-timecards"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Timecard"
                            }
                        }
                    }
                }
            }
        },
        "/v1/me/timecards/{timecard_id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides the details for a single timecard.",
                "operationId": "v1RetrieveTimecard",
                "description": "Provides the details for a single timecard.",
                "parameters": [{
                    "name": "timecard_id",
                    "in": "path",
                    "description": "The timecard's ID.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["TIMECARDS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-timecardid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Timecard"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Modifies a timecard's details. This creates an API_EDIT event for the timecard. You can view a timecard's event history with the List Timecard Events endpoint.",
                "operationId": "v1UpdateTimecard",
                "description": "Modifies a timecard's details. This creates an API_EDIT event for the timecard. You can view a timecard's event history with the List Timecard Events endpoint.",
                "parameters": [{
                    "name": "timecard_id",
                    "in": "path",
                    "description": "TThe ID of the timecard to modify.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Timecard"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["TIMECARDS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-timecardid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Timecard"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.",
                "operationId": "v1DeleteTimecard",
                "description": "Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.",
                "parameters": [{
                    "name": "timecard_id",
                    "in": "path",
                    "description": "The ID of the timecard to delete.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["TIMECARDS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-timecardid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/me/timecards/{timecard_id}/events": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides summary information for all events associated with a particular timecard.",
                "operationId": "v1ListTimecardEvents",
                "description": "Provides summary information for all events associated with a particular timecard.",
                "parameters": [{
                    "name": "timecard_id",
                    "in": "path",
                    "description": "The ID of the timecard to list events for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["TIMECARDS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-events"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1TimecardEvent"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/cash-drawer-shifts": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides the details for all of a location's cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
                "operationId": "v1ListCashDrawerShifts",
                "description": "Provides the details for all of a location's cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list cash drawer shifts for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ],
                    "required": false
                }, {
                    "name": "begin_time",
                    "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_time",
                    "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1CashDrawerShift"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/cash-drawer-shifts/{shift_id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
                "operationId": "v1RetrieveCashDrawerShift",
                "description": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list cash drawer shifts for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "shift_id",
                    "in": "path",
                    "description": "The shift's ID.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["TIMECARDS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershiftid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1CashDrawerShift"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/payments": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides summary information for all payments taken by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length. See Date ranges for details of inclusive and exclusive dates.",
                "operationId": "v1ListPayments",
                "description": "Provides summary information for all payments taken by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length. See Date ranges for details of inclusive and exclusive dates.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business's locations.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The order in which payments are listed in the response.",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ],
                    "required": false
                }, {
                    "name": "begin_time",
                    "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_time",
                    "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
                    "type": "integer",
                    "maximum": 200
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-payments"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Payment"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/payments/{payment_id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides comprehensive information for a single payment.",
                "operationId": "v1RetrievePayment",
                "description": "Provides comprehensive information for a single payment.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the payment's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "payment_id",
                    "in": "path",
                    "description": "The payment's Square-issued ID. You obtain this value from Payment objects returned by the List Payments endpoint, or Settlement objects returned by the List Settlements endpoint.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-paymentid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Payment"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/settlements": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides summary information for all deposits and withdrawals initiated by Square to a merchant's bank account during a date range. Date ranges cannot exceed one year in length.",
                "operationId": "v1ListSettlements",
                "description": "Provides summary information for all deposits and withdrawals initiated by Square to a merchant's bank account during a date range. Date ranges cannot exceed one year in length. ",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list settlements for. If you specify me, this endpoint returns payments aggregated from all of the business's locations.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "TThe order in which payments are listed in the response.",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ],
                    "required": false
                }, {
                    "name": "begin_time",
                    "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_time",
                    "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
                    "type": "integer",
                    "maximum": 200,
                    "required": false

                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).",
                    "type": "string",
                    "enum": [
                        "SENT",
                        "FAILED"
                    ],
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["SETTLEMENTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-settlements"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Settlement"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/settlements/{settlement_id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides comprehensive information for a single settlement, including the entries that contribute to the settlement's total.",
                "operationId": "v1RetrieveSettlement",
                "description": "Provides comprehensive information for a single settlement, including the entries that contribute to the settlement's total.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the settlements's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "settlement_id",
                    "in": "path",
                    "description": "The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["SETTLEMENTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-settlementid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Settlement"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/refunds": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length.",
                "operationId": "v1ListRefunds",
                "description": "Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list refunds for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "TThe order in which payments are listed in the response.",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ],
                    "required": false
                }, {
                    "name": "begin_time",
                    "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_time",
                    "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
                    "type": "integer",
                    "maximum": 200,
                    "required": false

                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-refunds"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Refund"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Issues a refund for a previously processed payment. You must issue a refund within 60 days of the associated payment.",
                "operationId": "v1CreateRefund",
                "description": "Issues a refund for a previously processed payment. You must issue a refund within 60 days of the associated payment.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the original payment's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1CreateRefundRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-refunds"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Refund"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/orders": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides summary information for a merchant's online store orders.",
                "operationId": "v1ListOrders",
                "description": "Provides summary information for a merchant's online store orders.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list online store orders for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "TThe order in which payments are listed in the response.",
                    "type": "string",
                    "enum": [
                        "ASC",
                        "DESC"
                    ],
                    "required": false
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
                    "type": "integer",
                    "maximum": 200,
                    "required": false

                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ORDERS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-ordrers"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Order"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/orders/{order_id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides comprehensive information for a single online store order, including the order's history.",
                "operationId": "v1RetrieveOrder",
                "description": "Provides comprehensive information for a single online store order, including the order's history.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the order's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "order_id",
                    "in": "path",
                    "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ORDERS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-orderid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Order"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
                "operationId": "v1UpdateOrder",
                "description": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the order's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "order_id",
                    "in": "path",
                    "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1UpdateOrderRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ORDERS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-orderid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Order"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/bank-accounts": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides non-confidential details for all of a location's associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
                "operationId": "v1ListBankAccounts",
                "description": "Provides non-confidential details for all of a location's associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list bank accounts for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["BANK_ACCOUNTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-bankaccounts"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1BankAccount"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/bank-accounts/{bank_account_id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Provides non-confidential details for a merchant's associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
                "operationId": "v1RetrieveBankAccount",
                "description": "Provides non-confidential details for a merchant's associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the bank account's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "bank_account_id",
                    "in": "path",
                    "description": "The bank account's Square-issued ID. You obtain this value from Settlement objects returned.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["BANK_ACCOUNTS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-bankaccountid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1BankAccount"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/items": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates an item and at least one variation for it.",
                "operationId": "v1CreateItem",
                "description": "Creates an item and at least one variation for it.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to create an item for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Item"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-items"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Provides summary information for all of a location's items.",
                "operationId": "v1ListItems",
                "description": "Provides summary information for all of a location's items.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list items for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-items"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Item"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/items/{item_id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Provides the details for a single item, including associated modifier lists and fees.",
                "operationId": "v1RetrieveItem",
                "description": "Provides the details for a single item, including associated modifier lists and fees.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The item's ID.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-itemid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the core details of an existing item.",
                "operationId": "v1UpdateItem",
                "description": "Modifies the core details of an existing item.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to modify.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Item"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing item and all item variations associated with it.",
                "operationId": "v1DeleteItem",
                "description": "Deletes an existing item and all item variations associated with it.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to modify.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/items/{item_id}/variations": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates an item variation for an existing item.",
                "operationId": "v1CreateVariation",
                "description": "Creates an item variation for an existing item.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The item's ID.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Variation"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-variations"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Variation"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/items/{item_id}/variations/{variation_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the details of an existing item variation.",
                "operationId": "v1UpdateVariation",
                "description": "Modifies the details of an existing item variation.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to modify.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "variation_id",
                    "in": "path",
                    "description": "The ID of the variation to modify.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Variation"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-variationid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Variation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing item variation from an item.",
                "operationId": "v1DeleteVariation",
                "description": "Deletes an existing item variation from an item.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to delete.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "variation_id",
                    "in": "path",
                    "description": "The ID of the variation to delete.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-variationid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Variation"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/inventory": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Provides inventory information for all of a merchant's inventory-enabled item variations.",
                "operationId": "v1ListInventory",
                "description": "Provides inventory information for all of a merchant's inventory-enabled item variations.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "limit",
                    "description": "The maximum number of inventory entries to return in a single response. This value cannot exceed 1000.",
                    "type": "integer",
                    "maximum": 1000,
                    "in": "query",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-inventory"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1InventoryEntry"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/inventory/{variation_id}": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Adjusts an item variation's current available inventory.",
                "operationId": "v1AdjustInventory",
                "description": "Adjusts an item variation's current available inventory.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "variation_id",
                    "in": "path",
                    "description": "The ID of the variation to adjust inventory information for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1AdjustInventoryRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-inventory-variationid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1InventoryEntry"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/modifier-lists": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates an item modifier list and at least one modifier option for it.",
                "operationId": "v1CreateModifierList",
                "description": "Creates an item modifier list and at least one modifier option for it.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to create a modifier list for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1ModifierList"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-modifierlists"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1ModifierList"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Lists all of a location's modifier lists.",
                "operationId": "v1ListModifierLists",
                "description": "Lists all of a location's modifier lists.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list modifier lists for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-modifierlists"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1ModifierList"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/modifier-lists/{modifier_list_id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Provides the details for a single modifier list.",
                "operationId": "v1RetrieveModifierList",
                "description": "Provides the details for a single modifier list.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The modifier list's ID.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-modifierlistid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1ModifierList"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the details of an existing item modifier list.",
                "operationId": "v1UpdateModifierList",
                "description": "Modifies the details of an existing item modifier list.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The ID of the modifier list to edit.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1UpdateModifierListRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-modifierlistid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1ModifierList"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing item modifier list and all modifier options associated with it.",
                "operationId": "v1DeleteModifierList",
                "description": "Deletes an existing item modifier list and all modifier options associated with it.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The ID of the modifier list to delete.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-modifierlistid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1ModifierList"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
                "operationId": "v1ApplyModifierList",
                "description": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The ID of the modifier list to apply.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to add the modifier list to.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid-modifierlistid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
                "operationId": "v1RemoveModifierList",
                "description": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The ID of the modifier list to remove.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to remove the modifier list from.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-modifierlistid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates an item modifier option and adds it to a modifier list.",
                "operationId": "v1CreateModifierOption",
                "description": "Creates an item modifier option and adds it to a modifier list.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The ID of the modifier list to edit.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1ModifierOption"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-modifieroptions"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1ModifierOption"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the details of an existing item modifier option.",
                "operationId": "v1UpdateModifierOption",
                "description": "Modifies the details of an existing item modifier option.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The ID of the modifier list to edit.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_option_id",
                    "in": "path",
                    "description": "The ID of the modifier list to edit.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1ModifierOption"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-modifieroptionid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1ModifierOption"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing item modifier option from a modifier list.",
                "operationId": "v1DeleteModifierOption",
                "description": "Deletes an existing item modifier option from a modifier list.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_list_id",
                    "in": "path",
                    "description": "The ID of the modifier list to delete.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "modifier_option_id",
                    "in": "path",
                    "description": "The ID of the modifier list to edit.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-modifieroptionid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1ModifierOption"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/categories": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates an item category.",
                "operationId": "v1CreateCategory",
                "description": "Creates an item category.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to create an item for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Category"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-categories"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Category"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Lists all of a location's item categories.",
                "operationId": "v1ListCategories",
                "description": "Lists all of a location's item categories.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list categories for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-categories"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Category"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/categories/{category_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the details of an existing item category.",
                "operationId": "v1UpdateCategory",
                "description": "Modifies the details of an existing item category.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the category's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "category_id",
                    "in": "path",
                    "description": "The ID of the category to edit.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Category"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-categoryid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Category"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing item category.",
                "operationId": "v1DeleteCategory",
                "description": "Deletes an existing item category.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "category_id",
                    "in": "path",
                    "description": "The ID of the category to delete.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-categoryid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Category"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/discounts": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates a discount.",
                "operationId": "v1CreateDiscount",
                "description": "Creates a discount.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to create an item for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Discount"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-discounts"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Discount"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Lists all of a location's discounts.",
                "operationId": "v1ListDiscounts",
                "description": "Lists all of a location's discounts.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list categories for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-discounts"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Discount"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/discounts/{discount_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the details of an existing discount.",
                "operationId": "v1UpdateDiscount",
                "description": "Modifies the details of an existing discount.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the category's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "discount_id",
                    "in": "path",
                    "description": "The ID of the discount to edit.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Discount"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-discountid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Discount"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing discount.",
                "operationId": "v1DeleteDiscount",
                "description": "Deletes an existing discount.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the item's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "discount_id",
                    "in": "path",
                    "description": "The ID of the discount to delete.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-discountid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Discount"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/fees": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates a fee (tax).",
                "operationId": "v1CreateFee",
                "description": "Creates a fee (tax).",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to create a fee for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Fee"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-fees"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Fee"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Lists all of a location's fees (taxes).",
                "operationId": "v1ListFees",
                "description": "Lists all of a location's fees (taxes).",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list fees for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-fees"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Link": {
                                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Fee"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/fees/{fee_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the details of an existing fee (tax).",
                "operationId": "v1UpdateFee",
                "description": "Modifies the details of an existing fee (tax).",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the fee's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "fee_id",
                    "in": "path",
                    "description": "The ID of the fee to edit.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Fee"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-feeid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Fee"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing fee (tax).",
                "operationId": "v1DeleteFee",
                "description": "Deletes an existing fee (tax).",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the fee's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "fee_id",
                    "in": "path",
                    "description": "The ID of the fee to delete.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-feeid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Fee"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/items/{item_id}/fees/{fee_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
                "operationId": "v1ApplyFee",
                "description": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the fee's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to add the fee to.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "fee_id",
                    "in": "path",
                    "description": "The ID of the fee to apply.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid-feeid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
                "operationId": "v1RemoveFee",
                "description": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the fee's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "item_id",
                    "in": "path",
                    "description": "The ID of the item to add the fee to.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "fee_id",
                    "in": "path",
                    "description": "The ID of the fee to apply.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-feeid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Item"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/pages": {
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Creates a Favorites page in Square Register.",
                "operationId": "v1CreatePage",
                "description": "Creates a Favorites page in Square Register.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to create an item for.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Page"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#post-pages"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Page"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Lists all of a location's Favorites pages in Square Register.",
                "operationId": "v1ListPages",
                "description": "Lists all of a location's Favorites pages in Square Register.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the location to list Favorites pages for.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_READ"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#get-pages"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1Page"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/pages/{page_id}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies the details of a Favorites page in Square Register.",
                "operationId": "v1UpdatePage",
                "description": "Modifies the details of a Favorites page in Square Register.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the Favorites page's associated location",
                    "type": "string",
                    "required": true
                }, {
                    "name": "page_id",
                    "in": "path",
                    "description": "The ID of the page to modify.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1Page"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-pageid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Page"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes an existing Favorites page and all of its cells.",
                "operationId": "v1DeletePage",
                "description": "Deletes an existing Favorites page and all of its cells.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the Favorites page's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "page_id",
                    "in": "path",
                    "description": "The ID of the page to delete.",
                    "type": "string",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-pageid"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Page"
                        }
                    }
                }
            }
        },
        "/v1/{location_id}/pages/{page_id}/cells": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Modifies a cell of a Favorites page in Square Register.",
                "operationId": "v1UpdatePageCell",
                "description": "Modifies a cell of a Favorites page in Square Register.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the Favorites page's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "page_id",
                    "in": "path",
                    "description": "The ID of the page the cell belongs to.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/v1PageCell"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#put-cells"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Page"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Deletes a cell from a Favorites page in Square Register.",
                "operationId": "v1DeletePageCell",
                "description": "Deletes a cell from a Favorites page in Square Register.",
                "parameters": [{
                    "name": "location_id",
                    "in": "path",
                    "description": "The ID of the Favorites page's associated location.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "page_id",
                    "in": "path",
                    "description": "The ID of the page to delete.",
                    "type": "string",
                    "required": true
                }, {
                    "name": "row",
                    "in": "query",
                    "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row.",
                    "type": "string",
                    "required": false
                }, {
                    "name": "column",
                    "in": "query",
                    "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column.",
                    "type": "string",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["ITEMS_WRITE"]
                }],
                "externalDocs": {
                    "description": "Read the offical documentation here:",
                    "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-cells"
                },
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {},
                        "schema": {
                            "$ref": "#/definitions/v1Page"
                        }
                    }
                }
            }
        },
        "/v2/locations/{location_id}/transactions": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Charge",
                "operationId": "Charge",
                "description": "Charges a card represented by a token.",
                "parameters": [{
                    "name": "location_id",
                    "description": "The ID of the location to associate the transaction with.",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/ChargeRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChargeResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "ListTransactions",
                "operationId": "ListTransactions",
                "description": "Lists transactions for a particular location.\n\nWhen making a request to this endpoint, your request body **must** include either the `cursor` parameter, or it must\ninclude both `begin_time` and `end_time` with an optional `sort_order`.",
                "parameters": [{
                    "name": "location_id",
                    "description": "The ID of the location to list transactions for.",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "begin_time",
                    "description": "The beginning of the requested reporting period, in RFC 3339 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_time",
                    "description": "The end of the requested reporting period, in RFC 3339 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "sort_order",
                    "description": "The order in which results are listed in the response (`ASC` for\nchronological, `DESC` for reverse-chronological).",
                    "enum": [
                        "DESC",
                        "ASC"
                    ],
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "cursor",
                    "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_READ"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListTransactionsResponse"
                        }
                    }
                }
            }
        },
        "/v2/locations/{location_id}/transactions/{transaction_id}/refund": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "CreateRefund",
                "operationId": "CreateRefund",
                "description": "Initiates a refund for a previously charged tender.",
                "parameters": [{
                    "name": "location_id",
                    "description": "The ID of the original transaction\u0027s associated location.",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "transaction_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/CreateRefundRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateRefundResponse"
                        }
                    }
                }
            }
        },
        "/v2/locations/{location_id}/refunds": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "ListRefunds",
                "operationId": "ListRefunds",
                "description": "Lists refunds for one of a business\u0027s locations.",
                "parameters": [{
                    "name": "location_id",
                    "description": "The ID of the location to list refunds for.",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "begin_time",
                    "description": "The beginning of the requested reporting period, in RFC 3339 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "end_time",
                    "description": "The end of the requested reporting period, in RFC 3339 format.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "sort_order",
                    "description": "The order in which results are listed in the response.",
                    "enum": [
                        "DESC",
                        "ASC"
                    ],
                    "type": "string",
                    "in": "query",
                    "required": false
                }, {
                    "name": "cursor",
                    "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
                    "type": "string",
                    "in": "query",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_READ"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListRefundsResponse"
                        }
                    }
                }
            }
        },
        "/v2/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "ListLocations",
                "operationId": "ListLocations",
                "description": "Provides summary information for all of a business\u0027s locations.",
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["MERCHANT_PROFILE_READ"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListLocationsResponse"
                        }
                    }
                }
            }
        },
        "/v2/customers": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "CreateCustomer",
                "operationId": "CreateCustomer",
                "description": "Creates a new customer for the business, which can have associated cards on file.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/CreateCustomerRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["CUSTOMERS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateCustomerResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "ListCustomers",
                "operationId": "ListCustomers",
                "description": "Lists a business\u0027s customers.",
                "parameters": [{
                    "name": "cursor",
                    "description": "",
                    "type": "string",
                    "in": "query",
                    "required": false
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["CUSTOMERS_READ"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListCustomersResponse"
                        }
                    }
                }
            }
        },
        "/v2/customers/{customer_id}": {
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "UpdateCustomer",
                "operationId": "UpdateCustomer",
                "description": "Updates the details of an existing customer.",
                "parameters": [{
                    "name": "customer_id",
                    "description": "The customer to update.",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/UpdateCustomerRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["CUSTOMERS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UpdateCustomerResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "RetrieveCustomer",
                "operationId": "RetrieveCustomer",
                "description": "Returns details for a single customer.",
                "parameters": [{
                    "name": "customer_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["CUSTOMERS_READ"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RetrieveCustomerResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "DeleteCustomer",
                "operationId": "DeleteCustomer",
                "description": "Deletes a customer from a business.",
                "parameters": [{
                    "name": "customer_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["CUSTOMERS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeleteCustomerResponse"
                        }
                    }
                }
            }
        },
        "/v2/customers/{customer_id}/cards": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "CreateCustomerCard",
                "operationId": "CreateCustomerCard",
                "description": "Adds a card on file to an existing customer.",
                "parameters": [{
                    "name": "customer_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
                    "schema": {
                        "$ref": "#/definitions/CreateCustomerCardRequest"
                    }
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["CUSTOMERS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateCustomerCardResponse"
                        }
                    }
                }
            }
        },
        "/v2/customers/{customer_id}/cards/{card_id}": {
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "DeleteCustomerCard",
                "operationId": "DeleteCustomerCard",
                "description": "Removes a card on file from a customer.",
                "parameters": [{
                    "name": "customer_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "card_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["CUSTOMERS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeleteCustomerCardResponse"
                        }
                    }
                }
            }
        },
        "/v2/locations/{location_id}/transactions/{transaction_id}/capture": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "CaptureTransaction",
                "operationId": "CaptureTransaction",
                "description": "Captures a transaction that was created with the **Charge**\nendpoint with a `delay_capture` value of `true`.",
                "parameters": [{
                    "name": "location_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "transaction_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CaptureTransactionResponse"
                        }
                    }
                }
            }
        },
        "/v2/locations/{location_id}/transactions/{transaction_id}/void": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "VoidTransaction",
                "operationId": "VoidTransaction",
                "description": "Cancels a transaction that was created with the **Charge**\nendpoint with a `delay_capture` value of `true`.",
                "parameters": [{
                    "name": "location_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "transaction_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_WRITE"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/VoidTransactionResponse"
                        }
                    }
                }
            }
        },
        "/v2/locations/{location_id}/transactions/{transaction_id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "RetrieveTransaction",
                "operationId": "RetrieveTransaction",
                "description": "Retrieves details for a single transaction.",
                "parameters": [{
                    "name": "location_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }, {
                    "name": "transaction_id",
                    "description": "",
                    "type": "string",
                    "in": "path",
                    "required": true
                }],
                "security": [{
                    "personal_access_token": [],
                    "oauth2": ["PAYMENTS_READ"]
                }],
                "deprecated": false,
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RetrieveTransactionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Address": {
            "type": "object",
            "properties": {
                "address_line_1": {
                    "type": "string",
                    "description": ""
                },
                "address_line_2": {
                    "type": "string",
                    "description": ""
                },
                "address_line_3": {
                    "type": "string",
                    "description": ""
                },
                "locality": {
                    "type": "string",
                    "description": ""
                },
                "sublocality": {
                    "type": "string",
                    "description": ""
                },
                "sublocality_2": {
                    "type": "string",
                    "description": ""
                },
                "sublocality_3": {
                    "type": "string",
                    "description": ""
                },
                "administrative_district_level_1": {
                    "type": "string",
                    "description": ""
                },
                "administrative_district_level_2": {
                    "type": "string",
                    "description": ""
                },
                "administrative_district_level_3": {
                    "type": "string",
                    "description": ""
                },
                "postal_code": {
                    "type": "string",
                    "description": ""
                },
                "country": {
                    "type": "string",
                    "enum": [
                        "ZZ",
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AO",
                        "AQ",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AX",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BL",
                        "BM",
                        "BN",
                        "BO",
                        "BQ",
                        "BR",
                        "BS",
                        "BT",
                        "BV",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CC",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CW",
                        "CX",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "EH",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GF",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GP",
                        "GQ",
                        "GR",
                        "GS",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HM",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "ID",
                        "IE",
                        "IL",
                        "IM",
                        "IN",
                        "IO",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MF",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MQ",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NF",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PM",
                        "PN",
                        "PR",
                        "PS",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SJ",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SX",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TF",
                        "TG",
                        "TH",
                        "TJ",
                        "TK",
                        "TL",
                        "TM",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "UM",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WF",
                        "WS",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                    ],
                    "description": ""
                }
            },
            "description": ""
        },
        "CaptureTransactionResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **CaptureTransaction** endpoint."
        },
        "Card": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The card\u0027s unique ID, if any."
                },
                "card_brand": {
                    "type": "string",
                    "enum": [
                        "OTHER_BRAND",
                        "VISA",
                        "MASTERCARD",
                        "AMERICAN_EXPRESS",
                        "DISCOVER",
                        "DISCOVER_DINERS",
                        "JCB",
                        "CHINA_UNIONPAY",
                        "SQUARE_GIFT_CARD"
                    ],
                    "description": "The card\u0027s brand (such as `VISA`)."
                },
                "last_4": {
                    "type": "string",
                    "description": "The last 4 digits of the card\u0027s number."
                },
                "exp_month": {
                    "type": "integer",
                    "description": "The month of the card\u0027s expiration date, which must be between 1-12."
                },
                "exp_year": {
                    "type": "integer",
                    "description": "The year of the card\u0027s expiration date, which must be a 4-digit year."
                },
                "cardholder_name": {
                    "type": "string",
                    "description": "The cardholder name for the card on file."
                },
                "billing_address": {
                    "$ref": "#/definitions/Address",
                    "description": "The billing address for the card on file."
                }
            },
            "description": "Represents a credit card."
        },
        "ChargeRequest": {
            "type": "object",
            "required": [
                "idempotency_key",
                "amount_money"
            ],
            "properties": {
                "idempotency_key": {
                    "type": "string",
                    "description": "A value you specify that uniquely identifies this\ntransaction among transactions you\u0027ve created.\n\nIf you\u0027re unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer. Note that *all other fields*\nmust also remain identical in your followup request, or an error will occur."
                },
                "amount_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The amount of money to collect in the transaction."
                },
                "card_nonce": {
                    "type": "string",
                    "description": "A nonce representing the credit card to charge for this transaction.\nDo not provide a value for this field if you provide a value for\n`customer_card_id`."
                },
                "customer_card_id": {
                    "type": "string",
                    "description": "The ID of the customer card on file to charge for this transaction. Do\nnot provide a value for this field if you provide a value for `card_nonce`."
                },
                "delay_capture": {
                    "type": "boolean",
                    "description": "If `true`, the request will only perform an Auth on the provided\ncard. You can then later perform either a Capture (with the\n*CaptureTransaction** endpoint) or a Void (with the **VoidTransation**\nendpoint."
                },
                "reference_id": {
                    "type": "string",
                    "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database)."
                },
                "note": {
                    "type": "string",
                    "description": "An optional note to associate with the transaction."
                },
                "customer_id": {
                    "type": "string",
                    "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise."
                },
                "billing_address": {
                    "$ref": "#/definitions/Address",
                    "description": "If available, Postal code in the billing address for US and Canada payments may reduce decline rate."
                },
                "shipping_address": {
                    "$ref": "#/definitions/Address",
                    "description": ""
                }
            },
            "description": "Defines the parameters that can be included in the body of\na request to the **Charge** endpoint.",
            "example": {
                "idempotency_key": "74ae1696-b1e3-4328-af6d-f1e04d947a13",
                "shipping_address": {
                    "address_line_1": "123 Main St",
                    "locality": "San Francisco",
                    "administrative_district_level_1": "CA",
                    "postal_code": "94114",
                    "country": "US"
                },
                "billing_address": {
                    "address_line_1": "500 Electric Ave",
                    "address_line_2": "Suite 600",
                    "administrative_district_level_1": "NY",
                    "locality": "New York",
                    "postal_code": "10003",
                    "country": "US"
                },
                "amount_money": {
                    "amount": 5000,
                    "currency": "USD"
                },
                "card_nonce": "card_nonce_from_square_123",
                "reference_id": "some optional reference id",
                "note": "some optional note",
                "delay_capture": false
            }
        },
        "ChargeResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "transaction": {
                    "$ref": "#/definitions/Transaction",
                    "description": "The details of the created transaction."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **Charge** endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both)."
        },
        "CreateCustomerCardRequest": {
            "type": "object",
            "required": [
                "card_nonce"
            ],
            "properties": {
                "card_nonce": {
                    "type": "string",
                    "description": "A card nonce representing the card data to link to the customer."
                },
                "billing_address": {
                    "$ref": "#/definitions/Address",
                    "description": "Postal code in the address is required for US and Canada payments."
                },
                "cardholder_name": {
                    "type": "string",
                    "description": "The cardholder name."
                }
            },
            "description": ""
        },
        "CreateCustomerCardResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": ""
                },
                "card": {
                    "$ref": "#/definitions/Card",
                    "description": ""
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **CreateCustomerCard** endpoint.\n\nOne of `errors` or `card` is present in a given response (never both)."
        },
        "CreateCustomerRequest": {
            "type": "object",
            "properties": {
                "given_name": {
                    "type": "string",
                    "description": ""
                },
                "family_name": {
                    "type": "string",
                    "description": ""
                },
                "company_name": {
                    "type": "string",
                    "description": ""
                },
                "nickname": {
                    "type": "string",
                    "description": ""
                },
                "email_address": {
                    "type": "string",
                    "description": ""
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": ""
                },
                "phone_number": {
                    "type": "string",
                    "description": ""
                },
                "reference_id": {
                    "type": "string",
                    "description": ""
                },
                "note": {
                    "type": "string",
                    "description": ""
                }
            },
            "description": ""
        },
        "CreateCustomerResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": ""
                },
                "customer": {
                    "$ref": "#/definitions/Customer",
                    "description": ""
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **CreateCustomer** endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both)."
        },
        "CreateRefundRequest": {
            "type": "object",
            "required": [
                "idempotency_key",
                "tender_id",
                "amount_money"
            ],
            "properties": {
                "idempotency_key": {
                    "type": "string",
                    "description": "A value you specify that uniquely identifies this\nrefund among refunds you\u0027ve created for the tender.\n\nIf you\u0027re unsure whether a particular refund succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about duplicating the refund."
                },
                "tender_id": {
                    "type": "string",
                    "description": "The ID of the tender to refund."
                },
                "reason": {
                    "type": "string",
                    "description": "A description of the reason for the refund."
                },
                "amount_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The amount of money to refund."
                }
            },
            "description": "Defines the body parameters that can be included in\na request to the **CreateRefund** endpoint."
        },
        "CreateRefundResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "refund": {
                    "$ref": "#/definitions/Refund",
                    "description": "The details of the created refund."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **CreateRefund** endpoint.\n\nOne of `errors` or `refund` is present in a given response (never both)."
        },
        "Customer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The customer\u0027s unique ID."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the customer was created, in RFC 3339 format."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The time when the customer was updated, in RFC 3339 format."
                },
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Card"
                    },
                    "description": "Cards on file for the customer."
                },
                "given_name": {
                    "type": "string",
                    "description": ""
                },
                "family_name": {
                    "type": "string",
                    "description": ""
                },
                "nickname": {
                    "type": "string",
                    "description": ""
                },
                "company_name": {
                    "type": "string",
                    "description": ""
                },
                "email_address": {
                    "type": "string",
                    "description": ""
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": ""
                },
                "phone_number": {
                    "type": "string",
                    "description": ""
                },
                "reference_id": {
                    "type": "string",
                    "description": ""
                },
                "note": {
                    "type": "string",
                    "description": ""
                }
            },
            "description": ""
        },
        "DeleteCustomerCardResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": ""
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **DeleteCustomerCard** endpoint."
        },
        "DeleteCustomerResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": ""
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **DeleteCustomer** endpoint."
        },
        "Error": {
            "type": "object",
            "required": [
                "category",
                "code"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "API_ERROR",
                        "AUTHENTICATION_ERROR",
                        "INVALID_REQUEST_ERROR",
                        "RATE_LIMIT_ERROR",
                        "PAYMENT_METHOD_ERROR",
                        "REFUND_ERROR"
                    ],
                    "description": ""
                },
                "code": {
                    "type": "string",
                    "enum": [
                        "INTERNAL_SERVER_ERROR",
                        "UNAUTHORIZED",
                        "ACCESS_TOKEN_EXPIRED",
                        "ACCESS_TOKEN_REVOKED",
                        "FORBIDDEN",
                        "INSUFFICIENT_SCOPES",
                        "APPLICATION_DISABLED",
                        "V1_APPLICATION",
                        "V1_ACCESS_TOKEN",
                        "CARD_PROCESSING_NOT_ENABLED",
                        "BAD_REQUEST",
                        "MISSING_REQUIRED_PARAMETER",
                        "INCORRECT_TYPE",
                        "INVALID_TIME",
                        "INVALID_TIME_RANGE",
                        "INVALID_VALUE",
                        "INVALID_CURSOR",
                        "UNKNOWN_QUERY_PARAMETER",
                        "CONFLICTING_PARAMETERS",
                        "EXPECTED_JSON_BODY",
                        "INVALID_SORT_ORDER",
                        "VALUE_TOO_LONG",
                        "VALUE_TOO_LOW",
                        "EXPECTED_BOOLEAN",
                        "EXPECTED_INTEGER",
                        "EXPECTED_FLOAT",
                        "EXPECTED_STRING",
                        "EXPECTED_OBJECT",
                        "EXPECTED_ARRAY",
                        "INVALID_ARRAY_VALUE",
                        "INVALID_ENUM_VALUE",
                        "INVALID_CONTENT_TYPE",
                        "INVALID_FORM_VALUE",
                        "ONE_INSTRUMENT_EXPECTED",
                        "NO_FIELDS_SET",
                        "CARD_DECLINED",
                        "CARD_EXPIRED",
                        "VERIFY_CVV_FAILURE",
                        "VERIFY_AVS_FAILURE",
                        "INVALID_EXPIRATION",
                        "INVALID_EXPIRATION_YEAR",
                        "INVALID_EXPIRATION_DATE",
                        "INVALID_CARD",
                        "DELAYED_TRANSACTION_EXPIRED",
                        "DELAYED_TRANSACTION_CANCELED",
                        "DELAYED_TRANSACTION_CAPTURED",
                        "DELAYED_TRANSACTION_FAILED",
                        "CARD_TOKEN_EXPIRED",
                        "CARD_TOKEN_USED",
                        "AMOUNT_TOO_HIGH",
                        "UNSUPPORTED_INSTRUMENT_TYPE",
                        "REFUND_AMOUNT_INVALID",
                        "REFUND_ALREADY_PENDING",
                        "PAYMENT_NOT_REFUNDABLE",
                        "INVALID_CARD_DATA",
                        "NOT_FOUND",
                        "REQUEST_TIMEOUT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "RATE_LIMITED",
                        "NOT_IMPLEMENTED",
                        "SERVICE_UNAVAILABLE"
                    ],
                    "description": ""
                },
                "detail": {
                    "type": "string",
                    "description": ""
                },
                "field": {
                    "type": "string",
                    "description": ""
                }
            },
            "description": ""
        },
        "ListCustomersResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": ""
                },
                "customers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Customer"
                    },
                    "description": ""
                },
                "cursor": {
                    "type": "string",
                    "description": ""
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **ListCustomers** endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both)."
        },
        "ListLocationsResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Location"
                    },
                    "description": "An array of the business\u0027s locations."
                }
            },
            "description": "Defines the fields that are included in the response body of \na request to the **ListLocations** endpoint.\n\nOne of `errors` or `locations` is present in a given response (never both)."
        },
        "ListRefundsResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "refunds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Refund"
                    },
                    "description": "An array of refunds that match your query."
                },
                "cursor": {
                    "type": "string",
                    "description": "A pagination cursor for retrieving the next set of results,\nif any remain.\n\nProvide this value as the `cursor` parameter in a subsequent request\nto the **ListTenderRefunds** endpoint."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **ListTenderRefunds** endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both)."
        },
        "ListTransactionsResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transaction"
                    },
                    "description": "An array of transactions that match your query."
                },
                "cursor": {
                    "type": "string",
                    "description": "A pagination cursor for retrieving the next set of results,\nif any remain.\n\nProvide this value as the `cursor` parameter in a subsequent request\nto the **ListTransactions** endpoint."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **ListTransactions** endpoint.\n\nOne of `errors` or `transactions` is present in a given response (never both)."
        },
        "Location": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The location\u0027s unique ID."
                },
                "name": {
                    "type": "string",
                    "description": "The name given to the location."
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": "The address of this location."
                },
                "timezone": {
                    "type": "string",
                    "description": "The IANA Timezone Database identifier for the location\u0027s timezone."
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "CREDIT_CARD_PROCESSING"
                        ]
                    },
                    "description": "Indicates which Square features are enabled for the location.\n\nCurrently, there is only one value that might be present in this array:\n`CREDIT_CARD_PROCESSING`."
                }
            },
            "description": "Represents one of a business\u0027s locations."
        },
        "Money": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a \u0027cent\u0027 concept)."
                },
                "currency": {
                    "type": "string",
                    "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYR",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LTL",
                        "LVL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "USS",
                        "UYI",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMK",
                        "ZMW",
                        "BTC"
                    ],
                    "description": ""
                }
            },
            "description": ""
        },
        "v1Money": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a \u0027cent\u0027 concept)."
                },
                "currency_code": {
                    "type": "string",
                    "enum": [
                        "AED",
                        "AFN",
                        "ALL",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BOV",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYR",
                        "BZD",
                        "CAD",
                        "CDF",
                        "CHE",
                        "CHF",
                        "CHW",
                        "CLF",
                        "CLP",
                        "CNY",
                        "COP",
                        "COU",
                        "CRC",
                        "CUC",
                        "CUP",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "EUR",
                        "FJD",
                        "FKP",
                        "GBP",
                        "GEL",
                        "GHS",
                        "GIP",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IQD",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LBP",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LTL",
                        "LVL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MXV",
                        "MYR",
                        "MZN",
                        "NAD",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "NZD",
                        "OMR",
                        "PAB",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RON",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "SVC",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TMT",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UGX",
                        "USD",
                        "USN",
                        "USS",
                        "UYI",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "XAF",
                        "XAG",
                        "XAU",
                        "XBA",
                        "XBB",
                        "XBC",
                        "XBD",
                        "XCD",
                        "XDR",
                        "XOF",
                        "XPD",
                        "XPF",
                        "XPT",
                        "XTS",
                        "XXX",
                        "YER",
                        "ZAR",
                        "ZMK",
                        "ZMW",
                        "BTC"
                    ],
                    "description": ""
                }
            },
            "description": ""
        },
        "Refund": {
            "type": "object",
            "required": [
                "id",
                "location_id",
                "transaction_id",
                "tender_id",
                "reason",
                "amount_money",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique ID of the refund."
                },
                "location_id": {
                    "type": "string",
                    "description": "The ID of the refund\u0027s associated location."
                },
                "transaction_id": {
                    "type": "string",
                    "description": "The ID of the transaction refunded."
                },
                "tender_id": {
                    "type": "string",
                    "description": "The ID of the tender refunded."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the refund was created, in RFC 3339 format."
                },
                "reason": {
                    "type": "string",
                    "description": "The reason for the refund being issued."
                },
                "amount_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The amount of money refunded."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "APPROVED",
                        "REJECTED",
                        "FAILED"
                    ],
                    "description": ""
                },
                "processing_fee_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The amount of processing fee refunded."
                }
            },
            "description": ""
        },
        "RetrieveCustomerResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": ""
                },
                "customer": {
                    "$ref": "#/definitions/Customer",
                    "description": ""
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **RetrieveCustomer** endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both)."
        },
        "RetrieveTransactionResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "transaction": {
                    "$ref": "#/definitions/Transaction",
                    "description": "The details of the requested transaction."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **RetrieveTransaction** endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both)."
        },
        "Tender": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The tender\u0027s unique ID."
                },
                "location_id": {
                    "type": "string",
                    "description": "The ID of the tender\u0027s associated location."
                },
                "transaction_id": {
                    "type": "string",
                    "description": "The ID of the tender\u0027s associated transaction."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the tender was created, in RFC 3339 format."
                },
                "note": {
                    "type": "string",
                    "description": "An optional note associated with the tender at the time of payment."
                },
                "amount_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The amount of the tender."
                },
                "processing_fee_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The amount of any Square processing fees applied to the tender."
                },
                "customer_id": {
                    "type": "string",
                    "description": "If the tender represents a customer\u0027s card on file, this is\nthe ID of the associated customer."
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "OTHER",
                        "CARD",
                        "CASH",
                        "THIRD_PARTY_CARD",
                        "SQUARE_GIFT_CARD",
                        "NO_SALE"
                    ],
                    "description": "The type of tender."
                },
                "card_details": {
                    "$ref": "#/definitions/TenderCardDetails",
                    "description": "The details of the card tender.\nThis value is present only if the value of `type` is `CARD`."
                },
                "cash_details": {
                    "$ref": "#/definitions/TenderCashDetails",
                    "description": "The details of the cash tender.\nThis value is present only if the value of `type` is `CASH`."
                }
            },
            "description": "Represents a form of tender used to pay in a transaction."
        },
        "TenderCardDetails": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "AUTHORIZED",
                        "CAPTURED",
                        "VOIDED",
                        "FAILED"
                    ],
                    "description": "The credit card payment\u0027s current state (such as `CAPTURED`)"
                },
                "card": {
                    "$ref": "#/definitions/Card",
                    "description": "The credit card\u0027s non-confidential details."
                },
                "entry_method": {
                    "type": "string",
                    "enum": [
                        "SWIPED",
                        "KEYED",
                        "EMV",
                        "ON_FILE",
                        "CONTACTLESS"
                    ],
                    "description": "The method used to read the card."
                }
            },
            "description": "Represents the details of a credit card tender."
        },
        "TenderCashDetails": {
            "type": "object",
            "properties": {
                "buyer_tendered_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The total amount provided by the buyer for this tender, before change is given."
                },
                "change_back_money": {
                    "$ref": "#/definitions/Money",
                    "description": "The change returned to the buyer for this tender. This amount should be \u003e\u003d 0."
                }
            },
            "description": "Represents the details of a cash tender."
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The transaction\u0027s unique ID."
                },
                "location_id": {
                    "type": "string",
                    "description": "The ID of the transaction\u0027s associated location."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the transaction was created, in RFC 3339 format."
                },
                "tenders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tender"
                    },
                    "description": "Descriptions of the tenders used to pay for the transaction."
                },
                "refunds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Refund"
                    },
                    "description": "An array of any refunds associated with the transaction."
                },
                "reference_id": {
                    "type": "string",
                    "description": "If the transaction was created with the **Charge** endpoint, this\nvalue is the same as the value provided as the `reference_id` parameter\nin the request to that endpoint."
                },
                "product": {
                    "type": "string",
                    "enum": [
                        "REGISTER",
                        "EXTERNAL_API",
                        "BILLING",
                        "APPOINTMENTS",
                        "INVOICES",
                        "ONLINE_STORE",
                        "PAYROLL",
                        "OTHER"
                    ],
                    "description": "The product that processed the transaction."
                }
            },
            "description": "Represents a transaction processed with Square, either with the\nConnect API or with Square Register."
        },
        "UpdateCustomerRequest": {
            "type": "object",
            "properties": {
                "given_name": {
                    "type": "string",
                    "description": ""
                },
                "family_name": {
                    "type": "string",
                    "description": ""
                },
                "company_name": {
                    "type": "string",
                    "description": ""
                },
                "nickname": {
                    "type": "string",
                    "description": ""
                },
                "email_address": {
                    "type": "string",
                    "description": ""
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": ""
                },
                "phone_number": {
                    "type": "string",
                    "description": ""
                },
                "reference_id": {
                    "type": "string",
                    "description": ""
                },
                "note": {
                    "type": "string",
                    "description": ""
                }
            },
            "description": ""
        },
        "UpdateCustomerResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": ""
                },
                "customer": {
                    "$ref": "#/definitions/Customer",
                    "description": ""
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **UpdateCustomer** endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both)."
        },
        "VoidTransactionResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **CaptureTransaction** endpoint."
        },
        "OauthObtainTokenRequest": {
            "type": "object",
            "required": [
                "client_id",
                "client_secret",
                "code"
            ],
            "properties": {
                "client_id": {
                    "type": "string",
                    "description": "Your Application's Client ID."
                },
                "client_secret": {
                    "type": "string",
                    "description": "Your Application's Client Secret"
                },
                "code": {
                    "type": "string",
                    "description": "Your Authorization code"
                }
            }
        },
        "OauthRenewRequest": {
            "type": "object",
            "required": [
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string",
                    "description": "Your expiring Access Token"
                }
            }
        },
        "OauthRevokeRequest": {
            "type": "object",
            "required": [
                "access_token"
            ],
            "properties": {
                "client_id": {
                    "type": "string",
                    "description": "Your Application's Client ID."
                },
                "access_token": {
                    "type": "string",
                    "description": "Your expiring Access Token"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "The ID of your business."
                }
            }
        },
        "OauthRevokeResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "if true, your request was successful"
                }
            }
        },
        "OauthAccessToken": {
            "type": "object",
            "required": [
                "access_token",
                "token_type",
                "expires_at",
                "merchant_id"
            ],
            "properties": {
                "access_token": {
                    "type": "string",
                    "description": "The Access Token you'll use to make API calls."
                },
                "token_type": {
                    "type": "string",
                    "description": "The type of access token (usually 'bearer')."
                },
                "expires_at": {
                    "type": "string",
                    "description": "Date of access token expiration"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "The ID of your business."
                }
            }
        },
        "v1PhoneNumber": {
            "type": "object",
            "required": [
                "calling_code",
                "number"
            ],
            "externalDocs": {
                "description": "Read the offical documentation here:",
                "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-phonenumber"
            },
            "description": "Represents a phone number.",
            "properties": {
                "calling_code": {
                    "type": "string",
                    "description": "The phone number's international calling code. For US phone numbers, this value is +1.",
                    "readOnly": false
                },
                "number": {
                    "type": "string",
                    "description": "The phone number.",
                    "readOnly": false
                }
            }
        },
        "v1Merchant": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The merchant account's unique identifier."
                },
                "name": {
                    "type": "string",
                    "description": "The name associated with the merchant account."
                },
                "email": {
                    "type": "string",
                    "description": "The email address associated with the merchant account."
                },
                "account_type": {
                    "type": "string",
                    "enum": [
                        "LOCATION",
                        "BUSINESS"
                    ],
                    "description": "Indicates whether the merchant account corresponds to a single-location account (LOCATION) or a business account (BUSINESS). This value is almost always LOCATION."
                },
                "account_capabilities": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "CREDIT_CARD_PROCESSING",
                            "EMPLOYEE_MANAGEMENT",
                            "TIMECARD_MANAGEMENT"
                        ]
                    },
                    "description": "Capabilities that are enabled for the merchant's Square account. Capabilities that are not listed in this array are not enabled for the account."
                },
                "country_code": {
                    "type": "string",
                    "description": "The country associated with the merchant account, in ISO 3166-1-alpha-2 format."
                },
                "language_code": {
                    "type": "string",
                    "description": "The language associated with the merchant account, in BCP 47 format."
                },
                "currency_code": {
                    "type": "string",
                    "description": "The currency associated with the merchant account, in ISO 4217 format. For example, the currency code for US dollars is USD."
                },
                "business_name": {
                    "type": "string",
                    "description": "The name of the merchant's business."
                },
                "business_address": {
                    "$ref": "#/definitions/Address",
                    "description": "The address of the merchant's business."
                },
                "business_phone": {
                    "$ref": "#/definitions/v1PhoneNumber",
                    "description": "The phone number of the merchant's business."
                },
                "business_type": {
                    "type": "string",
                    "enum": [
                        "ACCOUNTING",
                        "APPAREL_AND_ACCESSORY_SHOPS",
                        "ART_DEALERS_GALLERIES",
                        "ART_DESIGN_AND_PHOTOGRAPHY",
                        "BAR_CLUB_LOUNGE",
                        "BEAUTY_AND_BARBER_SHOPS",
                        "BOOK_STORES",
                        "BUSINESS_SERVICES",
                        "CATERING",
                        "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
                        "CHARITIBLE_ORGS",
                        "CLEANING_SERVICES",
                        "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
                        "CONSULTANT",
                        "CONTRACTORS",
                        "DELIVERY_SERVICES",
                        "DENTISTRY",
                        "EDUCATION",
                        "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
                        "FOOD_TRUCK_CART",
                        "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
                        "FURNITURE_HOME_GOODS",
                        "HOTELS_AND_LODGING",
                        "INDIVIDUAL_USE",
                        "JEWELRY_AND_WATCHES",
                        "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
                        "LANGUAGE_SCHOOLS",
                        "LEGAL_SERVICES",
                        "MEDICAL_PRACTITIONERS",
                        "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
                        "MEMBERSHIP_ORGANIZATIONS",
                        "MUSIC_AND_ENTERTAINMENT",
                        "OTHER",
                        "OUTDOOR_MARKETS",
                        "PERSONAL_SERVICES",
                        "POLITICAL_ORGANIZATIONS",
                        "PROFESSIONAL_SERVICES",
                        "REAL_ESTATE",
                        "RECREATION_SERVICES",
                        "REPAIR_SHOPS_AND_RELATED_SERVICES",
                        "RESTAURANTS",
                        "RETAIL_SHOPS",
                        "SCHOOLS_AND_EDUCATIONAL_SERVICES",
                        "SPORTING_GOODS",
                        "TAXICABS_AND_LIMOUSINES",
                        "TICKET_SALES",
                        "TOURISM",
                        "TRAVEL_TOURISM",
                        "VETERINARY_SERVICES",
                        "WEB_DEV_DESIGN"
                    ],
                    "description": "The type of business operated by the merchant."
                },
                "shipping_address ": {
                    "$ref": "#/definitions/Address",
                    "description": "The merchant's shipping address."
                },
                "location_details": {
                    "type": "object",
                    "properties": {
                        "nickname": {
                            "type": "string",
                            "description": "The nickname assigned to the single-location account by the parent business. This value appears in the parent business's multi-location dashboard."
                        }
                    },
                    "description": "Additional information for a single-location account specified by its associated business account, if it has one."
                },
                "market_url": {
                    "type": "string",
                    "description": "The URL of the merchant's online store."
                }
            },
            "description": "Defines the fields that are included in the response body of\na request to the **RetrieveBusiness** endpoint."
        },
        "v1Employee": {
            "type": "object",
            "required": [
                "first_name",
                "last_name"
            ],
            "externalDocs": {
                "description": "Read the offical documentation here:",
                "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-employee"
            },
            "description": "Represents one of a business's employees.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The employee's unique ID.",
                    "readOnly": true
                },
                "first_name": {
                    "type": "string",
                    "description": "The employee's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "The employee's last name."
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ids of the employee's associated roles. Currently, you can specify only one or zero roles per employee."
                },
                "authorized_location_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the locations the employee is allowed to clock in at.",
                    "readOnly": true
                },
                "email": {
                    "type": "string",
                    "description": "The employee's email address."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ],
                    "description": "CWhether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard. ",
                    "readOnly": true
                },
                "external_id": {
                    "type": "string",
                    "description": "An ID the merchant can set to associate the employee with an entity in another system.",
                    "readOnly": true
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the employee entity was created, in ISO 8601 format.",
                    "readOnly": true
                },
                "updated_at": {
                    "type": "string",
                    "description": "The time when the employee entity was most recently updated, in ISO 8601 format.",
                    "readOnly": true
                }
            }
        },
        "v1EmployeeRole": {
            "type": "object",
            "required": [
                "name",
                "permissions"
            ],
            "externalDocs": {
                "description": "Read the offical documentation here:",
                "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-employeerole"
            },
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The role's unique ID, Can only be set by Square.",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "The role's merchant-defined name."
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "REGISTER_ACCESS_SALES_HISTORY",
                            "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
                            "REGISTER_CHANGE_SETTINGS",
                            "REGISTER_EDIT_ITEM",
                            "REGISTER_ISSUE_REFUNDS",
                            "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
                            "REGISTER_VIEW_SUMMARY_REPORTS"
                        ]
                    },
                    "description": "The role's permissions."
                },
                "is_owner": {
                    "type": "boolean",
                    "description": "If true, employees with this role have all permissions, regardless of the values indicated in permissions."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created.",
                    "readOnly": true
                },
                "updated_at": {
                    "type": "string",
                    "description": "The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated.",
                    "readOnly": true
                }
            }
        },
        "v1Timecard": {
            "type": "object",
            "required": [
                "employee_id"
            ],
            "externalDocs": {
                "description": "Read the offical documentation here:",
                "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-timecard"
            },
            "description": "Represents a timecard for an employee.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The timecard's unique ID.",
                    "readOnly": true
                },
                "employee_id": {
                    "type": "string",
                    "description": "The ID of the employee the timecard is associated with."
                },
                "deleted": {
                    "type": "boolean",
                    "description": "If true, the timecard was deleted by the merchant, and it is no longer valid.",
                    "readOnly": true
                },
                "clockin_time": {
                    "type": "string",
                    "description": "The clock-in time for the timecard, in ISO 8601 format."
                },
                "clockout_time": {
                    "type": "string",
                    "description": "The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system."
                },
                "clockin_location_id": {
                    "type": "string",
                    "description": "The ID of the location the employee clocked in from, if any."
                },
                "clockout_location_id": {
                    "type": "string",
                    "description": "The ID of the location the employee clocked out from. Provide this value only if importing timecard information from another system."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the timecard was created, in ISO 8601 format.",
                    "readOnly": true
                },
                "updated_at": {
                    "type": "string",
                    "description": "The time when the timecard was most recently updated, in ISO 8601 format.",
                    "readOnly": true
                }
            }
        },
        "v1TimecardEvent": {
            "type": "object",
            "externalDocs": {
                "description": "Read the offical documentation here:",
                "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-timecardevent"
            },
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The event's unique ID."
                },
                "event_type": {
                    "type": "string",
                    "enum": [
                        "API_CREATE",
                        "API_EDIT",
                        "API_DELETE",
                        "REGISTER_CLOCKIN",
                        "REGISTER_CLOCKOUT",
                        "DASHBOARD_SUPERVISOR_CLOSE",
                        "DASHBOARD_EDIT",
                        "DASHBOARD_DELETE"
                    ],
                    "description": "The ID of the timecard to list events for."
                },
                "clockin_time": {
                    "type": "string",
                    "description": "The time the employee clocked in, in ISO 8601 format."
                },
                "clockout_time": {
                    "type": "string",
                    "description": "The time the employee clocked out, in ISO 8601 format."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the event was created, in ISO 8601 format."
                }
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The device's Square-issued ID."
                },
                "name": {
                    "type": "string",
                    "description": "The device's merchant-specified name."
                }
            }
        },
        "v1CashDrawerEvent": {
            "type": "object",
            "externalDocs": {
                "description": "Read the offical documentation here:",
                "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-cashdrawerevent"
            },
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The event's unique ID."
                },
                "employee_id": {
                    "type": "string",
                    "description": "The ID of the employee that created the event."
                },
                "event_type": {
                    "type": "string",
                    "description": "The type of event that occurred.",
                    "enum": [
                        "NO_SALE",
                        "CASH_TENDER_PAYMENT",
                        "OTHER_TENDER_PAYMENT",
                        "CASH_TENDER_CANCELED_PAYMENT",
                        "OTHER_TENDER_CANCELED_PAYMENT",
                        "CASH_TENDER_REFUND",
                        "OTHER_TENDER_REFUND",
                        "PAID_IN",
                        "PAID_OUT"
                    ]
                },
                "event_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money that was added to or removed from the cash drawer because of the event. This value can be positive (for added money) or negative (for removed money)."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the event occurred, in ISO 8601 format."
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the event, entered by the employee that created it."
                }
            }
        },
        "v1CashDrawerShift": {
            "type": "object",
            "externalDocs": {
                "description": "Read the offical documentation here:",
                "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts"
            },
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The shift's unique ID."
                },
                "event_type": {
                    "type": "string",
                    "enum": [
                        "OPEN",
                        "ENDED",
                        "CLOSED"
                    ],
                    "description": "The shift's current state."
                },
                "opened_at": {
                    "type": "string",
                    "description": "The time when the shift began, in ISO 8601 format."
                },
                "ended_at": {
                    "type": "boolean",
                    "description": "The time when the shift ended, in ISO 8601 format."
                },
                "closed_at": {
                    "type": "string",
                    "description": "The time when the shift was closed, in ISO 8601 format."
                },
                "employee_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of all employees that were logged into Square Register at some point during the cash drawer shift."
                },
                "opening_employee_id": {
                    "type": "string",
                    "description": "The ID of the employee that started the cash drawer shift."
                },
                "ending_employee_id": {
                    "type": "string",
                    "description": "The ID of the employee that ended the cash drawer shift."
                },
                "closing_employee_id": {
                    "type": "string",
                    "description": "The ID of the employee that closed the cash drawer shift by auditing the cash drawer's contents."
                },
                "description": {
                    "type": "string",
                    "description": "The time when the timecard was created, in ISO 8601 format."
                },
                "starting_cash_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money in the cash drawer at the start of the shift."
                },
                "cash_payment_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money added to the cash drawer from cash payments."
                },
                "cash_refunds_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money removed from the cash drawer from cash refunds. This value is always negative or zero."
                },
                "cash_paid_in_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money added to the cash drawer for reasons other than cash payments."
                },
                "cash_paid_out_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money removed from the cash drawer for reasons other than cash refunds."
                },
                "expected_cash_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money that should be in the cash drawer at the end of the shift, based on the shift's other money amounts."
                },
                "closed_cash_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money found in the cash drawer at the end of the shift by an auditing employee."
                },
                "device": {
                    "$ref": "#/definitions/Device",
                    "description": "The device running Square Register that was connected to the cash drawer."
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1CashDrawerEvent"
                    },
                    "description": "All of the events (payments, refunds, and so on) that involved the cash drawer during the shift."
                }
            }
        },
        "v1Payment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The payment's unique identifier."
                },
                "merchant_id": {
                    "type": "string",
                    "description": "The unique identifier of the merchant that took the payment."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the payment was created, in ISO 8601 format."
                },
                "creator_id": {
                    "type": "boolean",
                    "description": "The unique identifier of the Square account that took the payment."
                },
                "device": {
                    "$ref": "#/definitions/Device",
                    "description": "The device that took the payment."
                },
                "payment_url": {
                    "type": "string",
                    "description": "The URL of the payment's detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page."
                },
                "receipt_url": {
                    "type": "string",
                    "description": "The URL of the receipt for the payment. Note that for split tender payments, this URL corresponds to the receipt for the first tender listed in the payment's tender field. Each Tender object has its own receipt_url field you can use to get the other receipts associated with a split tender payment."
                },
                "inclusive_tax_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The sum of all inclusive taxes associated with the payment."
                },
                "additive_tax_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The sum of all additive taxes associated with the payment."
                },
                "tax_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all taxes applied to the payment. This is always the sum of inclusive_tax_money and additive_tax_money."
                },
                "tip_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all tips applied to the payment."
                },
                "discount_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all discounts applied to the payment."
                },
                "total_collected_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all discounts applied to the payment."
                },
                "processing_fee_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all processing fees collected by Square for the payment."
                },
                "net_total_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount to be deposited into the merchant's bank account for the payment."
                },
                "refunded_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all refunds applied to the payment."
                },
                "swedish_rounding_money": {
                    "$ref": "#/definitions/v1Money"
                },
                "gross_sales_money": {
                    "$ref": "#/definitions/v1Money"
                },
                "net_sales_money": {
                    "$ref": "#/definitions/v1Money"
                },
                "inclusive_tax": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1PaymentTax"
                    },
                    "description": "All of the inclusive taxes associated with the payment."
                },
                "additive_tax": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1PaymentTax"
                    },
                    "description": "All of the additive taxes associated with the payment."
                },
                "tender": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Tender"
                    },
                    "description": "All of the additive taxes associated with the payment."
                },
                "refunds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Refund"
                    },
                    "description": "All of the refunds applied to the payment."
                },
                "itemizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1PaymentItemization"
                    },
                    "description": "The items purchased in the payment."
                }
            }
        },
        "v1PaymentItemization": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The item's name."
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity of the item purchased. This can be a decimal value."
                },
                "itemization_type": {
                    "type": "string",
                    "enum": [
                        "ITEM",
                        "CUSTOM_AMOUNT",
                        "GIFT_CARD_ACTIVATION",
                        "GIFT_CARD_RELOAD",
                        "GIFT_CARD_UNKNOWN",
                        "OTHER"
                    ],
                    "description": "The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT"
                },
                "item_detail": {
                    "$ref": "#/definitions/v1PaymentItemDetail",
                    "description": "Details of the item, including its unique identifier and the identifier of the item variation purchased."
                },
                "notes": {
                    "type": "string",
                    "description": "Notes entered by the merchant about the item at the time of payment, if any."
                },
                "item_variation_name": {
                    "type": "string",
                    "description": "The name of the item variation purchased, if any."
                },
                "total_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total cost of the item, including all taxes and discounts."
                },
                "single_quantity_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The cost of a single unit of this item."
                },
                "gross_sales_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total cost of the itemization and its modifiers, not including taxes or discounts."
                },
                "discount_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all discounts applied to the itemization. This value is always negative or zero."
                },
                "net_sales_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The sum of gross_sales_money and discount_money."
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1PaymentTax"
                    },
                    "description": "All taxes applied to this itemization."
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1PaymentDiscount"
                    },
                    "description": "All discounts applied to this itemization."
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1PaymentModifier"
                    },
                    "description": "All modifier options applied to this itemization."
                }
            }
        },
        "v1PaymentModifier": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The modifier option's name."
                },
                "applied_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money that this modifier option adds to the payment."
                },
                "modifier_option_id": {
                    "type": "string",
                    "description": "TThe ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID."
                }
            }
        },
        "v1PaymentDiscount": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The discount's name."
                },
                "applied_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money that this discount adds to the payment (note that this value is always negative or zero)."
                },
                "discount_id": {
                    "type": "string",
                    "description": "The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID."
                }
            }
        },
        "v1PaymentItemDetail": {
            "type": "object",
            "properties": {
                "category_name": {
                    "type": "string",
                    "description": "The name of the item's merchant-defined category, if any."
                },
                "sku": {
                    "type": "number",
                    "description": " The item's merchant-defined SKU, if any."
                },
                "item_id": {
                    "type": "string",
                    "description": "The unique ID of the item purchased, if any."
                },
                "item_variation_id": {
                    "type": "string",
                    "description": "The unique ID of the item variation purchased, if any."
                }
            }
        },
        "v1Refund": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "FULL",
                        "PARTIAL"
                    ],
                    "description": "The type of refund "
                },
                "reason": {
                    "type": "string",
                    "description": "The merchant-specified reason for the refund."
                },
                "refunded_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money refunded. This amount is always negative."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the merchant initiated the refund for Square to process, in ISO 8601 format.."
                },
                "processed_at": {
                    "type": "string",
                    "description": "The time when Square processed the refund on behalf of the merchant, in ISO 8601 format."
                },
                "payment_id": {
                    "type": "string",
                    "description": "The Square-issued ID of the payment the refund is applied to."
                },
                "merchant_id": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "v1Settlement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The settlement's unique identifier."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "FAILED",
                        "SENT"
                    ],
                    "description": "The settlement's current status."
                },
                "total_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money involved in the settlement. A positive amount indicates a deposit, and a negative amount indicates a withdrawal. This amount is never zero."
                },
                "initiated_at": {
                    "type": "string",
                    "description": "The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format."
                },
                "bank_account_id": {
                    "type": "string",
                    "description": "The Square-issued unique identifier for the bank account associated with the settlement."
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1SettlementEntry"
                    },
                    "description": "The entries included in this settlement."
                }
            }
        },
        "v1SettlementEntry": {
            "type": "object",
            "properties": {
                "payment_id": {
                    "type": "string",
                    "description": "The settlement's unique identifier."
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "ADJUSTMENT",
                        "BALANCE_CHARGE",
                        "CHARGE",
                        "FREE_PROCESSING",
                        "HOLD_ADJUSTMENT",
                        "PAID_SERVICE_FEE",
                        "PAID_SERVICE_FEE_REFUND",
                        "REDEMPTION_CODE",
                        "REFUND",
                        "RETURNED_PAYOUT",
                        "SQUARE_CAPITAL_ADVANCE",
                        "SQUARE_CAPITAL_PAYMENT",
                        "SQUARE_CAPITAL_REVERSED_PAYMENT",
                        "SUBSCRIPTION_FEE",
                        "SUBSCRIPTION_FEE_REFUND",
                        "INCENTED_PAYMENT",
                        "RETURNED_ACH_ENTRY",
                        "RETURNED_SQUARE_275",
                        "SQUARE_275"
                    ],
                    "description": "The settlement's current status."
                },
                "amount_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total amount of money this entry contributes to the total settlement amount."
                },
                "fee_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of all Square fees associated with this settlement entry. This value is always negative or zero."
                }
            }
        },
        "v1Tender": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The tender's unique ID."
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CREDIT_CARD",
                        "CASH",
                        "THIRD_PARTY_CARD",
                        "NO_SALE",
                        "SQUARE_WALLET",
                        "SQUARE_GIFT_CARD",
                        "UNKNOWN",
                        "OTHER"
                    ],
                    "description": "The type of tender."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable description of the tender."
                },
                "employee_id": {
                    "type": "string",
                    "description": "The ID of the employee that processed the tender."
                },
                "receipt_url": {
                    "type": "string",
                    "description": "The URL of the receipt for the tender."
                },
                "card_brand": {
                    "type": "string",
                    "enum": [
                        "OTHER_BRAND",
                        "VISA",
                        "MASTER_CARD",
                        "AMERICAN_EXPRESS",
                        "DISCOVER",
                        "DISCOVER_DINERS",
                        "JCB",
                        "CHINA_UNIONPAY",
                        "SQUARE_GIFT_CARD"
                    ],
                    "description": "The brand of credit card provided."
                },
                "pan_suffix": {
                    "type": "string",
                    "description": "The last four digits of the provided credit card's account number."
                },
                "entry_method": {
                    "type": "string",
                    "enum": [
                        "MANUAL",
                        "SCANNED",
                        "SQUARE_CASH",
                        "SQUARE_WALLET",
                        "SWIPED",
                        "WEB_FORM",
                        "OTHER"
                    ],
                    "description": "The tender's unique ID."
                },
                "payment_note": {
                    "type": "string",
                    "description": "Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER."
                },
                "total_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total amount of money provided in this form of tender."
                },
                "tendered_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of total_money applied to the payment."
                },
                "change_back_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of total_money returned to the buyer as change."
                },
                "refunded_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all refunds applied to this tender. This amount is always negative or zero."
                }
            }
        },
        "v1PaymentTax": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "name": {
                    "type": "string",
                    "description": "The merchant-defined name of the tax."
                },
                "applied_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money that this tax adds to the payment."
                },
                "rate": {
                    "type": "string",
                    "description": "The rate of the tax, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
                },
                "inclusion_type": {
                    "type": "string",
                    "enum": [
                        "ADDITIVE",
                        "INCLUSIVE"
                    ],
                    "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax."
                },
                "fee_id": {
                    "type": "string",
                    "description": "The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID."
                }
            }
        },
        "v1Order": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    },
                    "description": "Any errors that occurred during the request."
                },
                "id": {
                    "type": "string",
                    "description": "The order's unique identifier."
                },
                "buyer_email": {
                    "type": "string",
                    "description": "The email address of the order's buyer."
                },
                "recipient_name": {
                    "type": "string",
                    "description": "The name of the order's buyer."
                },
                "recipient_phone_number": {
                    "type": "string",
                    "description": "The phone number to use for the order's delivery."
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "OPEN",
                        "COMPLETED",
                        "CANCELED",
                        "REFUNDED",
                        "REJECTED"
                    ],
                    "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax."
                },
                "shipping_address": {
                    "$ref": "#/definitions/Address",
                    "description": "The address to ship the order to."
                },
                "subtotal_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of all items purchased in the order, before taxes and shipping."
                },
                "total_shipping_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The shipping cost for the order."
                },
                "total_tax_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all taxes applied to the order."
                },
                "total_price_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total cost of the order."
                },
                "total_discount_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The total of all discounts applied to the order."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the order was created, in ISO 8601 format."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The time when the order was last modified, in ISO 8601 format."
                },
                "expires_at": {
                    "type": "string",
                    "description": "The time when the order expires if no action is taken, in ISO 8601 format."
                },
                "payment_id": {
                    "type": "string",
                    "description": "The unique identifier of the payment associated with the order."
                },
                "buyer_note": {
                    "type": "string",
                    "description": "A note provided by the buyer when the order was created, if any."
                },
                "completed_note": {
                    "type": "string",
                    "description": "A note provided by the merchant when the order's state was set to COMPLETED, if any"
                },
                "refunded_note": {
                    "type": "string",
                    "description": "A note provided by the merchant when the order's state was set to REFUNDED, if any."
                },
                "canceled_note": {
                    "type": "string",
                    "description": "A note provided by the merchant when the order's state was set to CANCELED, if any."
                },
                "tender": {
                    "$ref": "#/definitions/v1Tender",
                    "description": "The tender used to pay for the order."
                },
                "order_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1OrderHistoryEntry"
                    },
                    "description": "The history of actions associated with the order."
                },
                "promo_code": {
                    "type": "string",
                    "description": "The promo code provided by the buyer, if any."
                },
                "btc_receive_address": {
                    "type": "string",
                    "description": "For Bitcoin transactions, the address that the buyer sent Bitcoin to."
                },
                "btc_price_satoshi": {
                    "type": "number",
                    "description": "For Bitcoin transactions, the price of the buyer's order in satoshi (100 million satoshi equals 1 BTC)."
                }
            }
        },
        "v1OrderHistoryEntry": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "ORDER_PLACED",
                        "DECLINED",
                        "PAYMENT_RECEIVED",
                        "CANCELED",
                        "COMPLETED",
                        "REFUNDED",
                        "EXPIRED"
                    ],
                    "description": "The type of action performed on the order."
                },
                "created_at": {
                    "type": "string",
                    "description": "The time when the action was performed, in ISO 8601 format."
                }
            }
        },
        "v1BankAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The bank account's Square-issued ID."
                },
                "merchant_id": {
                    "type": "string",
                    "description": "The Square-issued ID of the merchant associated with the bank account."
                },
                "bank_name": {
                    "type": "string",
                    "description": "The name of the bank that manages the account."
                },
                "name": {
                    "type": "string",
                    "description": "The name associated with the bank account."
                },
                "routing_number": {
                    "type": "string",
                    "description": "The bank account's routing number."
                },
                "account_number_suffix": {
                    "type": "string",
                    "description": "The last few digits of the bank account number."
                },
                "currency_code": {
                    "type": "string",
                    "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD."
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "BUSINESS_CHECKING",
                        "CHECKING",
                        "INVESTMENT",
                        "LOAN",
                        "SAVINGS",
                        "OTHER"
                    ],
                    "description": "The bank account's type (for example, savings or checking)."
                }
            }
        },
        "v1Variation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The item variation's unique ID."
                },
                "name": {
                    "type": "string",
                    "description": "The item variation's name."
                },
                "item_id": {
                    "type": "string",
                    "description": "The ID of the variation's associated item."
                },
                "ordinal": {
                    "type": "string",
                    "description": "ndicates the variation's list position when displayed in Square Register and the merchant dashboard. If more than one variation for the same item has the same ordinal value, those variations are displayed in alphabetical order"
                },
                "pricing_type": {
                    "type": "string",
                    "enum": [
                        "FIXED_PRICING",
                        "VARIABLE_PRICING"
                    ],
                    "description": "Indicates whether the item variation's price is fixed or determined at the time of sale."
                },
                "price_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The item variation's price, if any."
                },
                "sku": {
                    "type": "string",
                    "description": "The item variation's SKU, if any."
                },
                "track_inventory": {
                    "type": "boolean",
                    "description": "If true, inventory tracking is active for the variation."
                },
                "inventory_alert_type": {
                    "type": "string",
                    "enum": [
                        "LOW_QUANTITY",
                        "NONE",
                        "INVESTMENT",
                        "LOAN",
                        "SAVINGS",
                        "OTHER"
                    ],
                    "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its inventory_alert_threshold."
                },
                "inventory_alert_threshold": {
                    "type": "integer",
                    "description": "If the inventory quantity for the variation is less than or equal to this value and inventory_alert_type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard."
                },
                "user_data": {
                    "type": "string",
                    "description": "Arbitrary metadata associated with the variation. Cannot exceed 255 characters."
                }
            }
        },
        "v1Item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The item's ID. Must be unique among all entity IDs ever provided on behalf of the merchant. You can never reuse an ID. This value can include alphanumeric characters, dashes (-), and underscores (_)."
                },
                "name": {
                    "type": "string",
                    "description": "The item's name."
                },
                "description": {
                    "type": "string",
                    "description": "The item's description."
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NORMAL",
                        "GIFT_CARD",
                        "OTHER"
                    ],
                    "description": "The item's type. This value is NORMAL for almost all items."
                },
                "color": {
                    "type": "string",
                    "enum": [
                        "9da2a6",
                        "4ab200",
                        "0b8000",
                        "2952cc",
                        "a82ee5",
                        "e5457a",
                        "b21212",
                        "593c00",
                        "e5BF00"
                    ],
                    "description": "The color of the discount's display label in Square Register, if not the default color. The default color is 9da2a6."
                },
                "abbreviation": {
                    "type": "string",
                    "description": "The text of the item's display label in Square Register. Only up to the first five characters of the string are used."
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "PUBLIC",
                        "PRIVATE"
                    ],
                    "description": "Indicates whether the item is viewable from the merchant's online store (PUBLIC) or PRIVATE."
                },
                "available_online": {
                    "type": "string",
                    "description": "If true, the item can be added to shipping orders from the merchant's online store."
                },
                "master_image": {
                    "$ref": "#/definitions/v1ItemImage",
                    "description": "The item's master image, if any."
                },
                "category": {
                    "$ref": "#/definitions/v1Category",
                    "description": "The category the item belongs to, if any."
                },
                "variations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Variation"
                    },
                    "description": "The item's variations. You must specify at least one variation."
                },
                "modifier_lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Variation"
                    },
                    "description": "The modifier lists that apply to the item, if any."
                },
                "fees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Fee"
                    },
                    "description": "The fees that apply to the item, if any."
                },
                "taxable": {
                    "type": "boolean",
                    "description": "Deprecated. This field is not used."
                }
            }
        },
        "v1Fee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The fee's unique ID."
                },
                "name": {
                    "type": "string",
                    "description": "The fee's name."
                },
                "rate": {
                    "type": "string",
                    "description": "The rate of the fee, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
                },
                "calculation_phase": {
                    "type": "string",
                    "enum": [
                        "FEE_SUBTOTAL_PHASE",
                        "OTHER",
                        "FEE_TOTAL_PHASE"
                    ],
                    "description": "Forthcoming"
                },
                "adjustment_type": {
                    "type": "string",
                    "enum": [
                        "TAX"
                    ],
                    "description": "The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees."
                },
                "applies_to_custom_amounts": {
                    "type": "boolean",
                    "description": "If true, the fee applies to custom amounts entered into Square Register that are not associated with a particular item."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If true, the fee is applied to all appropriate items. If false, the fee is not applied at all."
                },
                "inclusion_type": {
                    "type": "string",
                    "enum": [
                        "ADDITIVE",
                        "INCLUSIVE"
                    ],
                    "description": "Whether the fee is ADDITIVE or INCLUSIVE."
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CA_GST",
                        "CA_HST",
                        "CA_PST",
                        "CA_QST",
                        "JP_CONSUMPTION_TAX",
                        "CA_PEI_PST",
                        "US_SALES_TAX",
                        "OTHER"
                    ],
                    "description": "In countries with multiple classifications for sales taxes, indicates which classification the fee falls under. Currently relevant only to Canadian merchants."
                }
            }
        },
        "v1ModifierList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The modifier list's unique ID."
                },
                "name": {
                    "type": "string",
                    "description": "The modifier list's name."
                },
                "selection_type": {
                    "type": "string",
                    "enum": [
                        "SINGLE",
                        "MULTIPLE"
                    ],
                    "description": "Indicates whether MULTIPLE options or a SINGLE option from the modifier list can be applied to a single item."
                },
                "modifier_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1ModifierOption"
                    },
                    "description": "The options included in the modifier list."
                }
            }
        },
        "v1ModifierOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The modifier option's unique ID."
                },
                "name": {
                    "type": "string",
                    "description": "The modifier option's name."
                },
                "price_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The modifier option's price."
                },
                "on_by_default": {
                    "type": "boolean",
                    "description": "If true, the modifier option is the default option in a modifier list for which selection_type is SINGLE."
                },
                "ordinal": {
                    "type": "integer",
                    "description": "Indicates the modifier option's list position when displayed in Square Register and the merchant dashboard. If more than one modifier option in the same modifier list has the same ordinal value, those options are displayed in alphabetical order."
                },
                "modifier_list_id": {
                    "type": "string",
                    "description": "The ID of the modifier list the option belongs to."
                }
            }
        },
        "v1Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The category's unique ID."
                },
                "name": {
                    "type": "string",
                    "description": "The category's name."
                }
            }
        },
        "v1ItemImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The image's unique ID."
                },
                "url": {
                    "type": "string",
                    "description": "The image's publicly accessible URL."
                }
            }
        },
        "v1InventoryEntry": {
            "type": "object",
            "properties": {
                "variation_id": {
                    "type": "string",
                    "description": "The variation that the entry corresponds to."
                },
                "quantity_on_hand": {
                    "type": "number",
                    "description": "The current available quantity of the item variation."
                }
            }
        },
        "v1AdjustInventoryRequest": {
            "type": "object",
            "properties": {
                "quantity_delta": {
                    "type": "number",
                    "description": "The number to adjust the variation's quantity by."
                },
                "adjustment_type": {
                    "type": "number",
                    "enum": [
                        "SALE",
                        "RECEIVE_STOCK",
                        "MANUAL_ADJUST"
                    ],
                    "description": "The reason for the inventory adjustment."
                },
                "memo": {
                    "type": "string",
                    "description": "A note about the inventory adjustment."
                }
            }
        },
        "v1Discount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The discount's unique ID."
                },
                "name": {
                    "type": "string",
                    "description": "The discount's name."
                },
                "rate": {
                    "type": "string",
                    "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE."
                },
                "amount_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of the discount. This amount is 0 if discount_type is VARIABLE_AMOUNT. This field is not included for rate-based discounts."
                },
                "discount_type": {
                    "type": "string",
                    "enum": [
                        "FIXED",
                        "VARIABLE_PERCENTAGE",
                        "VARIABLE_AMOUNT"
                    ],
                    "description": "Indicates whether the discount is a FIXED value or entered at the time of sale."
                },
                "pin_required": {
                    "type": "boolean",
                    "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the discount to a payment."
                },
                "color": {
                    "type": "string",
                    "enum": [
                        "9da2a6",
                        "4ab200",
                        "0b8000",
                        "2952cc",
                        "a82ee5",
                        "e5457a",
                        "b21212",
                        "593c00",
                        "e5BF00"
                    ],
                    "description": "The color of the discount's display label in Square Register, if not the default color. The default color is 9da2a6."
                }
            }
        },
        "v1Page": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The page's unique identifier."
                },
                "name": {
                    "type": "string",
                    "description": "The page's name, if any."
                },
                "page_index": {
                    "type": "integer",
                    "description": "The page's position in the merchant's list of pages. Always an integer between 0 and 4, inclusive."
                },
                "cells": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1PageCell"
                    },
                    "description": "The cells included on the page."
                }
            }
        },
        "v1PageCell": {
            "type": "object",
            "properties": {
                "page_id": {
                    "type": "string",
                    "description": "The unique identifier of the page the cell is included on."
                },
                "row": {
                    "type": "integer",
                    "description": "The row of the cell. Always an integer between 0 and 4, inclusive."
                },
                "column": {
                    "type": "integer",
                    "description": "The column of the cell. Always an integer between 0 and 4, inclusive."
                },
                "object_type": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ITEM",
                            "DISCOUNT",
                            "CATEGORY",
                            "PLACEHOLDER"
                        ]
                    },
                    "description": "The type of entity represented in the cell (ITEM, DISCOUNT, CATEGORY, or PLACEHOLDER)."
                },
                "object_id": {
                    "type": "string",
                    "description": "The unique identifier of the entity represented in the cell. Not present for cells with an object_type of PLACEHOLDER."
                },
                "placeholder_type": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ALL_ITEMS",
                            "DISCOUNTS_CATEGORY",
                            "REWARDS_FINDER"
                        ]
                    },
                    "description": "For a cell with an object_type of PLACEHOLDER, this value indicates the cell's special behavior."
                }
            }
        },
        "v1CreateRefundRequest": {
            "type": "object",
            "required": [
                "payment_id",
                "type",
                "reason"
            ],
            "properties": {
                "payment_id": {
                    "type": "string",
                    "description": "The ID of the payment to refund. If you're creating a PARTIAL refund for a split tender payment, instead provide the id of the particular tender you want to refund. See Split Tender Payments for details."
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "FULL",
                        "PARTIAL"
                    ],
                    "description": "TThe type of refund (FULL or PARTIAL)."
                },
                "reason": {
                    "type": "string",
                    "description": "The reason for the refund."
                },
                "refunded_money": {
                    "$ref": "#/definitions/v1Money",
                    "description": "The amount of money to refund. Required only for PARTIAL refunds."
                },

                "request_idempotence_key": {
                    "type": "string",
                    "description": "An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once."
                }

            }
        },
        "v1UpdateOrderRequest": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "COMPLETE",
                        "CANCEL",
                        "REFUND"
                    ],
                    "description": "The action to perform on the order (COMPLETE, CANCEL, or REFUND)."
                },
                "shipped_tracking_number": {
                    "type": "string",
                    "description": "The tracking number of the shipment associated with the order. Only valid if action is COMPLETE."
                },
                "completed_note": {
                    "type": "string",
                    "description": "A merchant-specified note about the completion of the order. Only valid if action is COMPLETE."
                },
                "refunded_note": {
                    "type": "string",
                    "description": "A merchant-specified note about the refunding of the order. Only valid if action is REFUND."
                },
                "canceled_note": {
                    "type": "string",
                    "description": "A merchant-specified note about the canceling of the order. Only valid if action is CANCEL."
                }
            }
        },
        "v1UpdateModifierListRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The modifier list's name."
                },
                "selection_type": {
                    "type": "string",
                    "enum": [
                        "SINGLE",
                        "MULTIPLE"
                    ],
                    "description": "Indicates whether multiple options from the modifier list can be applied to a single item."
                }
            }
        }
    }
}
