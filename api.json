{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Square Connect API",
    "description": "Client library for accessing the Square Connect APIs",
    "termsOfService": "https://connect.squareup.com/tos",
    "contact": {
      "name": "Square Developer Platform",
      "email": "developers@squareup.com",
      "url": "https://squareup.com/developers"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "Read the official documentation here:",
    "url": "https://docs.connect.squareup.com/"
  },
  "host": "connect.squareup.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "authorizationUrl": "https://connect.squareup.com/oauth2/authorize?\u003cPARAMETERS\u003e",
      "flow": "accessCode",
      "tokenUrl": "https://connect.squareup.com/oauth2/token",
      "scopes": {
        "MERCHANT_PROFILE_READ": "GET endpoints related to a merchant\u0027s business and location entities. Almost all Connect API applications need this permission in order to obtain a merchant\u0027s location IDs",
        "PAYMENTS_READ": "GET endpoints related to transactions and refunds",
        "PAYMENTS_WRITE": "POST, PUT, and DELETE endpoints related to transactions and refunds. E-commerce applications must request this permission",
        "CUSTOMERS_READ": " GET endpoints related to customer management",
        "CUSTOMERS_WRITE": "POST, PUT, and DELETE endpoints related to customer management",
        "SETTLEMENTS_READ": "GET endpoints related to settlements (deposits)",
        "BANK_ACCOUNTS_READ": "GET endpoints related to a merchant\u0027s bank accounts",
        "ITEMS_READ": "GET endpoints related to a merchant\u0027s item library",
        "ITEMS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant\u0027s item library",
        "ORDERS_READ": "GET endpoints related to a merchant\u0027s orders",
        "ORDERS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant\u0027s orders",
        "EMPLOYEES_READ": "GET endpoints related to employee management",
        "EMPLOYEES_WRITE": "POST, PUT, and DELETE endpoints related to employee management",
        "TIMECARDS_READ": "GET endpoints related to employee timecards",
        "TIMECARDS_WRITE": "POST, PUT, and DELETE endpoints related to employee timecards"
      }
    }
  },
  "paths": {
    "/v2/locations/{location_id}/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Charge",
        "operationId": "Charge",
        "description": "Charges a card represented by a card nonce or a customer\u0027s card on file.\n\nYour request to this endpoint must include _either_:\n\n- A value for the `card_nonce` parameter (to charge a card nonce generated\nwith the `SqPaymentForm`)\n- Values for the `customer_card_id` and `customer_id` parameters (to charge\na customer\u0027s card on file)\n\nIn order for an e-commerce payment to potentially qualify for\n[Square chargeback protection](https://squareup.com/help/article/5394), you\n_must_ provide values for the following parameters in your request:\n\n- `buyer_email_address`\n- At least one of `billing_address` or `shipping_address`\n\nWhen this response is returned, the amount of Square\u0027s processing fee might not yet be\ncalculated. To obtain the processing fee, wait about ten seconds and call\n[RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`\nfield of each [Tender included](#type-tender) in the transaction.",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to associate the created transaction with.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/ChargeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ChargeResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListTransactions",
        "operationId": "ListTransactions",
        "description": "Lists transactions for a particular location.\n\nMax results per [page](#paginatingresults): 50",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list transactions for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTransactionsResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/refund": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CreateRefund",
        "operationId": "CreateRefund",
        "description": "Initiates a refund for a previously charged tender.\n\nYou must issue a refund within 120 days of the associated payment. See\n(this article)[https://squareup.com/help/us/en/article/5060] for more information\non refund behavior.",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the original transaction\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "The ID of the original transaction that includes the tender to refund.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRefundResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/refunds": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListRefunds",
        "operationId": "ListRefunds",
        "description": "Lists refunds for one of a business\u0027s locations.\n\nRefunds with a `status` of `PENDING` are not currently included in this\nendpoint\u0027s response.\n\nMax results per [page](#paginatingresults): 50",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list refunds for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRefundsResponse"
            }
          }
        }
      }
    },
    "/v2/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "ListLocations",
        "operationId": "ListLocations",
        "description": "Provides the details for all of a business\u0027s locations.\n\nMost other Connect API endpoints have a required `location_id` path parameter.\nThe `id` field of the [`Location`](#type-location) objects returned by this\nendpoint correspond to that `location_id` parameter.",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListLocationsResponse"
            }
          }
        }
      }
    },
    "/v2/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomer",
        "operationId": "CreateCustomer",
        "description": "Creates a new customer for a business, which can have associated cards on file.\n\nYou must provide __at least one__ of the following values in your request to this\nendpoint:\n\n- `given_name`\n- `family_name`\n- `company_name`\n- `email_address`\n- `phone_number`\n\nThis endpoint does not accept an idempotency key. If you accidentally create\na duplicate customer, you can delete it with the\n[DeleteCustomer](#endpoint-deletecustomer) endpoint.",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "ListCustomers",
        "operationId": "ListCustomers",
        "description": "Lists a business\u0027s customers.",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCustomersResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}": {
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "UpdateCustomer",
        "operationId": "UpdateCustomer",
        "description": "Updates the details of an existing customer.\nThe ID of the customer may change if the customer has been merged into another customer.\n\nYou cannot edit a customer\u0027s cards on file with this endpoint. To make changes\nto a card on file, you must delete the existing card on file with the\n[DeleteCustomerCard](#endpoint-deletecustomercard) endpoint, then create a new one with the\n[CreateCustomerCard](#endpoint-createcustomercard) endpoint.",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to update.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "RetrieveCustomer",
        "operationId": "RetrieveCustomer",
        "description": "Returns details for a single customer.",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCustomerResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomer",
        "operationId": "DeleteCustomer",
        "description": "Deletes a customer from a business, along with any linked cards on file.",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}/cards": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomerCard",
        "operationId": "CreateCustomerCard",
        "description": "Adds a card on file to an existing customer. In the United States\nSquare takes care of automatically updating any cards on file that might\nhave expired since you first attached them to a customer.",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to link the card on file to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}/cards/{card_id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomerCard",
        "operationId": "DeleteCustomerCard",
        "description": "Removes a card on file from a customer.",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer that the card on file belongs to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "card_id",
            "description": "The ID of the card on file to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerCardResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/capture": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CaptureTransaction",
        "operationId": "CaptureTransaction",
        "description": "Captures a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\nSee [Delayed capture transactions](/articles/delayed-capture-transactions/)\nfor more information.",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CaptureTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/void": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "VoidTransaction",
        "operationId": "VoidTransaction",
        "description": "Cancels a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\nSee [Delayed capture transactions](/articles/delayed-capture-transactions/)\nfor more information.",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VoidTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "RetrieveTransaction",
        "operationId": "RetrieveTransaction",
        "description": "Retrieves details for a single transaction.",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the transaction\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "The ID of the transaction to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/checkouts": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "CreateCheckout",
        "operationId": "CreateCheckout",
        "description": "Creates a [Checkout](#type-checkout) response that links a\n`checkoutId` and `checkout_page_url` that customers can be directed to in\norder to provide their payment information using a payment processing\nworkflow hosted on connect.squareup.com.",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE",
          "ORDERS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE",
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the business location to associate the checkout with.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/object/{object_id}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "RetrieveCatalogObject",
        "operationId": "RetrieveCatalogObject",
        "description": "Returns a single [CatalogItem](#type-catalogitem) as a\n[CatalogObject](#type-catalogobject) based on the provided ID. The returned\nobject includes all of the relevant [CatalogItem](#type-catalogitem)\ninformation including: [CatalogItemVariation](#type-catalogitemvariation)\nchildren, references to its\n[CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "object_id",
            "description": "The object ID of any type of [CatalogObject](#type-catalogobject)s to be retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "include_related_objects",
            "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCatalogObjectResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "DeleteCatalogObject",
        "operationId": "DeleteCatalogObject",
        "description": "Deletes a single [CatalogObject](#type-catalogobject) based on the\nprovided ID and returns the set of successfully deleted IDs in the response.\nDeletion is a cascading event such that all children of the targeted object\nare also deleted. For example, deleting a [CatalogItem](#type-catalogitem)\nwill also delete all of its\n[CatalogItemVariation](#type-catalogitemvariation) children.",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "object_id",
            "description": "The ID of the [CatalogObject](#type-catalogobject) to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCatalogObjectResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/object": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpsertCatalogObject",
        "operationId": "UpsertCatalogObject",
        "description": "Creates or updates the target [CatalogObject](#type-catalogobject).",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/list": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "ListCatalog",
        "operationId": "ListCatalog",
        "description": "Returns a list of [CatalogObject](#type-catalogobject)s that includes\nall objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)\nand [CatalogTax](#type-catalogtax) objects) in the catalog. The types parameter\nis specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:\n`ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`.",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Paginating results](#paginatingresults) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "types",
            "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCatalogResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-upsert": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchUpsertCatalogObjects",
        "operationId": "BatchUpsertCatalogObjects",
        "description": "Creates or updates up to 10,000 target objects based on the provided\nlist of objects. The target objects are grouped into batches and each batch is\ninserted/updated in an all-or-nothing manner. If an object within a batch is\nmalformed in some way, or violates a database constraint, the entire batch\ncontaining that item will be disregarded. However, other batches in the same\nrequest may still succeed. Each batch may contain up to 1,000 objects, and\nbatches will be processed in order as long as the total object count for the\nrequest (items, variations, modifier lists, discounts, and taxes) is no more\nthan 10,000.",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-retrieve": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchRetrieveCatalogObjects",
        "operationId": "BatchRetrieveCatalogObjects",
        "description": "Returns a set of objects based on the provided ID.\nEach [CatalogItem](#type-catalogitem) returned in the set includes all of its\nchild information including: all of its\n[CatalogItemVariation](#type-catalogitemvariation) objects, references to\nits [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/search": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "SearchCatalogObjects",
        "operationId": "SearchCatalogObjects",
        "description": "Queries the targeted catalog using a variety of query types\n([CatalogQuerySortedAttribute](#type-catalogquerysortedattribute),\n([CatalogQueryExact](#type-catalogqueryexact),\n([CatalogQueryRange](#type-catalogqueryrange),\n([CatalogQueryText](#type-catalogquerytext),\n([CatalogQueryItemsForTax](#type-catalogqueryitemsfortax),\n([CatalogQueryItemsForModifierList](#type-catalogqueryitemsformodifierlist)).",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-delete": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchDeleteCatalogObjects",
        "operationId": "BatchDeleteCatalogObjects",
        "description": "Deletes a set of [CatalogItem](#type-catalogitem)s based on the\nprovided list of target IDs and returns a set of successfully deleted IDs in\nthe response. Deletion is a cascading event such that all children of the\ntargeted object are also deleted. For example, deleting a CatalogItem will\nalso delete all of its [CatalogItemVariation](#type-catalogitemvariation)\nchildren.\n\n`BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted\nIDs can be deleted. The response will only include IDs that were\nactually deleted.",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/update-item-taxes": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemTaxes",
        "operationId": "UpdateItemTaxes",
        "description": "Updates the [CatalogTax](#type-catalogtax) objects that apply to the\ntargeted [CatalogItem](#type-catalogitem) without having to perform an\nupsert on the entire item.",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/update-item-modifier-lists": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemModifierLists",
        "operationId": "UpdateItemModifierLists",
        "description": "Updates the [CatalogModifierList](#type-catalogmodifierlist) objects\nthat apply to the targeted [CatalogItem](#type-catalogitem) without having\nto perform an upsert on the entire item.",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/info": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "CatalogInfo",
        "operationId": "CatalogInfo",
        "description": "Returns information about the Square Catalog API, such as batch size\nlimits for `BatchUpsertCatalogObjects`.",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CatalogInfoResponse"
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "V1Locations"
        ],
        "summary": "Get a business\u0027s information.",
        "operationId": "RetrieveBusiness",
        "description": "Get a business\u0027s information.",
        "parameters": [],
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-merchantid"
        },
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/v1Merchant"
            },
            "headers": {}
          }
        }
      }
    },
    "/v1/me/locations": {
      "get": {
        "tags": [
          "V1Locations"
        ],
        "summary": "Provides details for a business\u0027s locations, including their IDs.",
        "operationId": "ListLocations",
        "description": "Provides details for a business\u0027s locations, including their IDs.",
        "parameters": [],
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-locations"
        },
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Merchant"
              }
            }
          }
        }
      }
    },
    "/v1/me/employees": {
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Creates an employee for a business.",
        "operationId": "CreateEmployee",
        "description": "Creates an employee for a business.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-employees"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides summary information for all of a business\u0027s employees.",
        "operationId": "ListEmployees",
        "description": "Provides summary information for all of a business\u0027s employees.",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC ",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "begin_updated_at",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_updated_at",
            "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_created_at",
            "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_created_at",
            "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).",
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          {
            "name": "external_id",
            "in": "query",
            "description": "If provided, the endpoint returns only employee entities with the specified external_id.",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "maximum": 200
          }
        ],
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-employees"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Employee"
              }
            }
          }
        }
      }
    },
    "/v1/me/employees/{employee_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides the details for a single employee.",
        "operationId": "RetrieveEmployee",
        "description": "Provides the details for a single employee.",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The employee\u0027s ID.",
            "type": "string",
            "required": true
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-employeeid"
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "V1 UpdateEmployee",
        "operationId": "UpdateEmployee",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The ID of the role to modify.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-employeeid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        }
      }
    },
    "/v1/me/roles": {
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Creates an employee role you can then assign to employees.",
        "operationId": "CreateEmployeeRole",
        "description": "Creates an employee role you can then assign to employees.",
        "parameters": [
          {
            "name": "EmployeeRole",
            "in": "body",
            "required": true,
            "description": "An EmployeeRole object with a name and permissions, and an optional owner flag.",
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-roles"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides summary information for all of a business\u0027s employee roles.",
        "operationId": "ListEmployeeRoles",
        "description": "Provides summary information for all of a business\u0027s employee roles.",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC ",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "maximum": 200
          },
          {
            "name": "cursor",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-roles"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link.",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1EmployeeRole"
              }
            }
          }
        }
      }
    },
    "/v1/me/roles/{role_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides the details for a single employee role.",
        "operationId": "RetrieveEmployeeRole",
        "description": "Provides the details for a single employee role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "The role\u0027s ID.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-roleid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Modifies the details of an employee role.",
        "operationId": "UpdateEmployeeRole",
        "description": "Modifies the details of an employee role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "The ID of the role to modify.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-roleid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        }
      }
    },
    "/v1/me/timecards": {
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Creates a timecard for an employee. Each timecard corresponds to a single shift.",
        "operationId": "CreateTimecard",
        "description": "Creates a timecard for an employee. Each timecard corresponds to a single shift.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-timecards"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides summary information for all of a business\u0027s employee timecards.",
        "operationId": "ListTimecards",
        "description": "Provides summary information for all of a business\u0027s employee timecards.",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "The order in which timecards are listed in the response, based on their created_at field.",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "required": false
          },
          {
            "name": "employee_id",
            "description": "If provided, the endpoint returns only timecards for the employee with the specified ID.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_clockin_time",
            "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_clockin_time",
            "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_clockout_time",
            "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_clockout_time",
            "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_updated_at",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_updated_at",
            "description": "If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "deleted",
            "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don\u0027t provide this parameter, both valid and deleted timecards are returned.",
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "maximum": 200
          },
          {
            "name": "cursor",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-timecards"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Timecard"
              }
            }
          }
        }
      }
    },
    "/v1/me/timecards/{timecard_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides the details for a single timecard.",
        "operationId": "RetrieveTimecard",
        "description": "Provides the details for a single timecard.",
        "parameters": [
          {
            "name": "timecard_id",
            "in": "path",
            "description": "The timecard\u0027s ID.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-timecardid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Modifies a timecard\u0027s details. This creates an API_EDIT event for the timecard. You can view a timecard\u0027s event history with the List Timecard Events endpoint.",
        "operationId": "UpdateTimecard",
        "description": "Modifies a timecard\u0027s details. This creates an API_EDIT event for the timecard. You can view a timecard\u0027s event history with the List Timecard Events endpoint.",
        "parameters": [
          {
            "name": "timecard_id",
            "in": "path",
            "description": "TThe ID of the timecard to modify.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-timecardid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.",
        "operationId": "DeleteTimecard",
        "description": "Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.",
        "parameters": [
          {
            "name": "timecard_id",
            "in": "path",
            "description": "The ID of the timecard to delete.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-timecardid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/me/timecards/{timecard_id}/events": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides summary information for all events associated with a particular timecard.",
        "operationId": "ListTimecardEvents",
        "description": "Provides summary information for all events associated with a particular timecard.",
        "parameters": [
          {
            "name": "timecard_id",
            "in": "path",
            "description": "The ID of the timecard to list events for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-events"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1TimecardEvent"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/cash-drawer-shifts": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides the details for all of a location\u0027s cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
        "operationId": "ListCashDrawerShifts",
        "description": "Provides the details for all of a location\u0027s cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list cash drawer shifts for.",
            "type": "string",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1CashDrawerShift"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/cash-drawer-shifts/{shift_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
        "operationId": "RetrieveCashDrawerShift",
        "description": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list cash drawer shifts for.",
            "type": "string",
            "required": true
          },
          {
            "name": "shift_id",
            "in": "path",
            "description": "The shift\u0027s ID.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershiftid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1CashDrawerShift"
            }
          }
        }
      }
    },
    "/v1/{location_id}/payments": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides summary information for all payments taken by a merchant or any of the merchant\u0027s mobile staff during a date range. Date ranges cannot exceed one year in length. See Date ranges for details of inclusive and exclusive dates.",
        "operationId": "ListPayments",
        "description": "Provides summary information for all payments taken by a merchant or any of the merchant\u0027s mobile staff during a date range. Date ranges cannot exceed one year in length. See Date ranges for details of inclusive and exclusive dates.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business\u0027s locations.",
            "type": "string",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which payments are listed in the response.",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "maximum": 200
          }
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-payments"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Payment"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/payments/{payment_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides comprehensive information for a single payment.",
        "operationId": "RetrievePayment",
        "description": "Provides comprehensive information for a single payment.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the payment\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "payment_id",
            "in": "path",
            "description": "The payment\u0027s Square-issued ID. You obtain this value from Payment objects returned by the List Payments endpoint, or Settlement objects returned by the List Settlements endpoint.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-paymentid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Payment"
            }
          }
        }
      }
    },
    "/v1/{location_id}/settlements": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides summary information for all deposits and withdrawals initiated by Square to a merchant\u0027s bank account during a date range. Date ranges cannot exceed one year in length.",
        "operationId": "ListSettlements",
        "description": "Provides summary information for all deposits and withdrawals initiated by Square to a merchant\u0027s bank account during a date range. Date ranges cannot exceed one year in length. ",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list settlements for. If you specify me, this endpoint returns payments aggregated from all of the business\u0027s locations.",
            "type": "string",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "description": "TThe order in which payments are listed in the response.",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "maximum": 200,
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).",
            "type": "string",
            "enum": [
              "SENT",
              "FAILED"
            ],
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-settlements"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Settlement"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/settlements/{settlement_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides comprehensive information for a single settlement, including the entries that contribute to the settlement\u0027s total.",
        "operationId": "RetrieveSettlement",
        "description": "Provides comprehensive information for a single settlement, including the entries that contribute to the settlement\u0027s total.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the settlements\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "settlement_id",
            "in": "path",
            "description": "The settlement\u0027s Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-settlementid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Settlement"
            }
          }
        }
      }
    },
    "/v1/{location_id}/refunds": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides the details for all refunds initiated by a merchant or any of the merchant\u0027s mobile staff during a date range. Date ranges cannot exceed one year in length.",
        "operationId": "ListRefunds",
        "description": "Provides the details for all refunds initiated by a merchant or any of the merchant\u0027s mobile staff during a date range. Date ranges cannot exceed one year in length.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list refunds for.",
            "type": "string",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "description": "TThe order in which payments are listed in the response.",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "maximum": 200,
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-refunds"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Refund"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Issues a refund for a previously processed payment. You must issue a refund within 60 days of the associated payment.",
        "operationId": "CreateRefund",
        "description": "Issues a refund for a previously processed payment. You must issue a refund within 60 days of the associated payment.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the original payment\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1CreateRefundRequest"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-refunds"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Refund"
            }
          }
        }
      }
    },
    "/v1/{location_id}/orders": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides summary information for a merchant\u0027s online store orders.",
        "operationId": "ListOrders",
        "description": "Provides summary information for a merchant\u0027s online store orders.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list online store orders for.",
            "type": "string",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "description": "TThe order in which payments are listed in the response.",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "maximum": 200,
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-ordrers"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Order"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/orders/{order_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides comprehensive information for a single online store order, including the order\u0027s history.",
        "operationId": "RetrieveOrder",
        "description": "Provides comprehensive information for a single online store order, including the order\u0027s history.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the order\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "order_id",
            "in": "path",
            "description": "The order\u0027s Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-orderid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
        "operationId": "UpdateOrder",
        "description": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the order\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "order_id",
            "in": "path",
            "description": "The order\u0027s Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOrderRequest"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-orderid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        }
      }
    },
    "/v1/{location_id}/bank-accounts": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides non-confidential details for all of a location\u0027s associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "operationId": "ListBankAccounts",
        "description": "Provides non-confidential details for all of a location\u0027s associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list bank accounts for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-bankaccounts"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1BankAccount"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/bank-accounts/{bank_account_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "Provides non-confidential details for a merchant\u0027s associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "operationId": "RetrieveBankAccount",
        "description": "Provides non-confidential details for a merchant\u0027s associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the bank account\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "The bank account\u0027s Square-issued ID. You obtain this value from Settlement objects returned.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-bankaccountid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1BankAccount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates an item and at least one variation for it.",
        "operationId": "CreateItem",
        "description": "Creates an item and at least one variation for it.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-items"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Provides summary information for all of a location\u0027s items.",
        "operationId": "ListItems",
        "description": "Provides summary information for all of a location\u0027s items.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list items for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-items"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Item"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Provides the details for a single item, including associated modifier lists and fees.",
        "operationId": "RetrieveItem",
        "description": "Provides the details for a single item, including associated modifier lists and fees.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The item\u0027s ID.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-itemid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the core details of an existing item.",
        "operationId": "UpdateItem",
        "description": "Modifies the core details of an existing item.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to modify.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing item and all item variations associated with it.",
        "operationId": "DeleteItem",
        "description": "Deletes an existing item and all item variations associated with it.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to modify.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/variations": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates an item variation for an existing item.",
        "operationId": "CreateVariation",
        "description": "Creates an item variation for an existing item.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The item\u0027s ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-variations"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/variations/{variation_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the details of an existing item variation.",
        "operationId": "UpdateVariation",
        "description": "Modifies the details of an existing item variation.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to modify.",
            "type": "string",
            "required": true
          },
          {
            "name": "variation_id",
            "in": "path",
            "description": "The ID of the variation to modify.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-variationid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing item variation from an item.",
        "operationId": "DeleteVariation",
        "description": "Deletes an existing item variation from an item.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to delete.",
            "type": "string",
            "required": true
          },
          {
            "name": "variation_id",
            "in": "path",
            "description": "The ID of the variation to delete.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-variationid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        }
      }
    },
    "/v1/{location_id}/inventory": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Provides inventory information for all of a merchant\u0027s inventory-enabled item variations.",
        "operationId": "ListInventory",
        "description": "Provides inventory information for all of a merchant\u0027s inventory-enabled item variations.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "description": "The maximum number of inventory entries to return in a single response. This value cannot exceed 1000.",
            "type": "integer",
            "maximum": 1000,
            "in": "query",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-inventory"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1InventoryEntry"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/inventory/{variation_id}": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Adjusts an item variation\u0027s current available inventory.",
        "operationId": "AdjustInventory",
        "description": "Adjusts an item variation\u0027s current available inventory.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "variation_id",
            "in": "path",
            "description": "The ID of the variation to adjust inventory information for.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1AdjustInventoryRequest"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-inventory-variationid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1InventoryEntry"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates an item modifier list and at least one modifier option for it.",
        "operationId": "CreateModifierList",
        "description": "Creates an item modifier list and at least one modifier option for it.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to create a modifier list for.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-modifierlists"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Lists all of a location\u0027s modifier lists.",
        "operationId": "ListModifierLists",
        "description": "Lists all of a location\u0027s modifier lists.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list modifier lists for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-modifierlists"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1ModifierList"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Provides the details for a single modifier list.",
        "operationId": "RetrieveModifierList",
        "description": "Provides the details for a single modifier list.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The modifier list\u0027s ID.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-modifierlistid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the details of an existing item modifier list.",
        "operationId": "UpdateModifierList",
        "description": "Modifies the details of an existing item modifier list.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1UpdateModifierListRequest"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-modifierlistid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing item modifier list and all modifier options associated with it.",
        "operationId": "DeleteModifierList",
        "description": "Deletes an existing item modifier list and all modifier options associated with it.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The ID of the modifier list to delete.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-modifierlistid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
        "operationId": "ApplyModifierList",
        "description": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The ID of the modifier list to apply.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to add the modifier list to.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid-modifierlistid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
        "operationId": "RemoveModifierList",
        "description": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The ID of the modifier list to remove.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to remove the modifier list from.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-modifierlistid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates an item modifier option and adds it to a modifier list.",
        "operationId": "CreateModifierOption",
        "description": "Creates an item modifier option and adds it to a modifier list.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-modifieroptions"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the details of an existing item modifier option.",
        "operationId": "UpdateModifierOption",
        "description": "Modifies the details of an existing item modifier option.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_option_id",
            "in": "path",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-modifieroptionid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing item modifier option from a modifier list.",
        "operationId": "DeleteModifierOption",
        "description": "Deletes an existing item modifier option from a modifier list.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "in": "path",
            "description": "The ID of the modifier list to delete.",
            "type": "string",
            "required": true
          },
          {
            "name": "modifier_option_id",
            "in": "path",
            "description": "The ID of the modifier list to edit.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-modifieroptionid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        }
      }
    },
    "/v1/{location_id}/categories": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates an item category.",
        "operationId": "CreateCategory",
        "description": "Creates an item category.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-categories"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Lists all of a location\u0027s item categories.",
        "operationId": "ListCategories",
        "description": "Lists all of a location\u0027s item categories.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list categories for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-categories"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Category"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/categories/{category_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the details of an existing item category.",
        "operationId": "UpdateCategory",
        "description": "Modifies the details of an existing item category.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the category\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "category_id",
            "in": "path",
            "description": "The ID of the category to edit.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-categoryid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing item category.",
        "operationId": "DeleteCategory",
        "description": "Deletes an existing item category.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "category_id",
            "in": "path",
            "description": "The ID of the category to delete.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-categoryid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        }
      }
    },
    "/v1/{location_id}/discounts": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates a discount.",
        "operationId": "CreateDiscount",
        "description": "Creates a discount.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-discounts"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Lists all of a location\u0027s discounts.",
        "operationId": "ListDiscounts",
        "description": "Lists all of a location\u0027s discounts.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list categories for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-discounts"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Discount"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/discounts/{discount_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the details of an existing discount.",
        "operationId": "UpdateDiscount",
        "description": "Modifies the details of an existing discount.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the category\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "discount_id",
            "in": "path",
            "description": "The ID of the discount to edit.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-discountid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing discount.",
        "operationId": "DeleteDiscount",
        "description": "Deletes an existing discount.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the item\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "discount_id",
            "in": "path",
            "description": "The ID of the discount to delete.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-discountid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/fees": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates a fee (tax).",
        "operationId": "CreateFee",
        "description": "Creates a fee (tax).",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to create a fee for.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-fees"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Lists all of a location\u0027s fees (taxes).",
        "operationId": "ListFees",
        "description": "Lists all of a location\u0027s fees (taxes).",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list fees for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-fees"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Fee"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/fees/{fee_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the details of an existing fee (tax).",
        "operationId": "UpdateFee",
        "description": "Modifies the details of an existing fee (tax).",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "fee_id",
            "in": "path",
            "description": "The ID of the fee to edit.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-feeid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing fee (tax).",
        "operationId": "DeleteFee",
        "description": "Deletes an existing fee (tax).",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "fee_id",
            "in": "path",
            "description": "The ID of the fee to delete.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-feeid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/fees/{fee_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
        "operationId": "ApplyFee",
        "description": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to add the fee to.",
            "type": "string",
            "required": true
          },
          {
            "name": "fee_id",
            "in": "path",
            "description": "The ID of the fee to apply.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid-feeid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
        "operationId": "RemoveFee",
        "description": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the fee\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The ID of the item to add the fee to.",
            "type": "string",
            "required": true
          },
          {
            "name": "fee_id",
            "in": "path",
            "description": "The ID of the fee to apply.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-feeid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "Creates a Favorites page in Square Register.",
        "operationId": "CreatePage",
        "description": "Creates a Favorites page in Square Register.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to create an item for.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-pages"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "Lists all of a location\u0027s Favorites pages in Square Register.",
        "operationId": "ListPages",
        "description": "Lists all of a location\u0027s Favorites pages in Square Register.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list Favorites pages for.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-pages"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Page"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages/{page_id}": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies the details of a Favorites page in Square Register.",
        "operationId": "UpdatePage",
        "description": "Modifies the details of a Favorites page in Square Register.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the Favorites page\u0027s associated location",
            "type": "string",
            "required": true
          },
          {
            "name": "page_id",
            "in": "path",
            "description": "The ID of the page to modify.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-pageid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes an existing Favorites page and all of its cells.",
        "operationId": "DeletePage",
        "description": "Deletes an existing Favorites page and all of its cells.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "page_id",
            "in": "path",
            "description": "The ID of the page to delete.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-pageid"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages/{page_id}/cells": {
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "Modifies a cell of a Favorites page in Square Register.",
        "operationId": "UpdatePageCell",
        "description": "Modifies a cell of a Favorites page in Square Register.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "page_id",
            "in": "path",
            "description": "The ID of the page the cell belongs to.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/v1PageCell"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-cells"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "Deletes a cell from a Favorites page in Square Register.",
        "operationId": "DeletePageCell",
        "description": "Deletes a cell from a Favorites page in Square Register.",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "type": "string",
            "required": true
          },
          {
            "name": "page_id",
            "in": "path",
            "description": "The ID of the page to delete.",
            "type": "string",
            "required": true
          },
          {
            "name": "row",
            "in": "query",
            "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row.",
            "type": "string",
            "required": false
          },
          {
            "name": "column",
            "in": "query",
            "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column.",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-cells"
        },
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CardBrand": {
      "type": "string",
      "enum": [
        "OTHER_BRAND",
        "VISA",
        "MASTERCARD",
        "AMERICAN_EXPRESS",
        "DISCOVER",
        "DISCOVER_DINERS",
        "JCB",
        "CHINA_UNIONPAY",
        "SQUARE_GIFT_CARD"
      ],
      "description": "Indicates a credit card\u0027s brand, such as `VISA`."
    },
    "CatalogDiscountType": {
      "type": "string",
      "enum": [
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "description": "How to apply a [CatalogDiscount](#type-catalogdiscount) to a [CatalogItem](#type-catalogitem)."
    },
    "CatalogItemProductType": {
      "type": "string",
      "enum": [
        "REGULAR",
        "GIFT_CARD",
        "APPOINTMENTS_SERVICE",
        "RETAIL_ITEM",
        "RESTAURANT_ITEM"
      ],
      "description": "The type of a [CatalogItem](#type-catalogitem). Connect V2 only allows the creation of `REGULAR` items."
    },
    "CatalogModifierListSelectionType": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "description": "Indicates whether a [CatalogModifierList](#type-catalogmodifierlist) supports multiple selections."
    },
    "CatalogObjectType": {
      "type": "string",
      "enum": [
        "ITEM",
        "CATEGORY",
        "ITEM_VARIATION",
        "TAX",
        "DISCOUNT",
        "MODIFIER_LIST",
        "MODIFIER"
      ],
      "description": "Possible kinds of [CatalogObject](#type-catalogobject)s returned from the Catalog, each\ncontaning type-specific properties in the `*_data` field corresponding to the object type."
    },
    "CatalogPricingType": {
      "type": "string",
      "enum": [
        "FIXED_PRICING",
        "VARIABLE_PRICING"
      ],
      "description": "Indicates whether the price of a [CatalogItemVariation](#type-catalogitemvariation) should be entered manually at the time of sale."
    },
    "Country": {
      "type": "string",
      "enum": [
        "ZZ",
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AX",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BQ",
        "BR",
        "BS",
        "BT",
        "BV",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CU",
        "CV",
        "CW",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "EH",
        "ER",
        "ES",
        "ET",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GF",
        "GG",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GP",
        "GQ",
        "GR",
        "GS",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HM",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IO",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JE",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MQ",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NF",
        "NG",
        "NI",
        "NL",
        "NO",
        "NP",
        "NR",
        "NU",
        "NZ",
        "OM",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PS",
        "PT",
        "PW",
        "PY",
        "QA",
        "RE",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SJ",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "SS",
        "ST",
        "SV",
        "SX",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TF",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "UM",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW"
      ],
      "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm)."
    },
    "Currency": {
      "type": "string",
      "enum": [
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BOV",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYR",
        "BZD",
        "CAD",
        "CDF",
        "CHE",
        "CHF",
        "CHW",
        "CLF",
        "CLP",
        "CNY",
        "COP",
        "COU",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LTL",
        "LVL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRO",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MXV",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SRD",
        "SSP",
        "STD",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "USN",
        "USS",
        "UYI",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XAG",
        "XAU",
        "XBA",
        "XBB",
        "XBC",
        "XBD",
        "XCD",
        "XDR",
        "XOF",
        "XPD",
        "XPF",
        "XPT",
        "XTS",
        "XXX",
        "YER",
        "ZAR",
        "ZMK",
        "ZMW",
        "BTC"
      ],
      "description": "Indicates the associated currency for an amount of money. Values correspond\nto [ISO 4217](https://wikipedia.org/wiki/ISO_4217)."
    },
    "ErrorCategory": {
      "type": "string",
      "enum": [
        "API_ERROR",
        "AUTHENTICATION_ERROR",
        "INVALID_REQUEST_ERROR",
        "RATE_LIMIT_ERROR",
        "PAYMENT_METHOD_ERROR",
        "REFUND_ERROR"
      ],
      "description": "Indicates which high-level category of error has occurred during a\nrequest to the Connect API."
    },
    "ErrorCode": {
      "type": "string",
      "enum": [
        "INTERNAL_SERVER_ERROR",
        "UNAUTHORIZED",
        "ACCESS_TOKEN_EXPIRED",
        "ACCESS_TOKEN_REVOKED",
        "FORBIDDEN",
        "INSUFFICIENT_SCOPES",
        "APPLICATION_DISABLED",
        "V1_APPLICATION",
        "V1_ACCESS_TOKEN",
        "CARD_PROCESSING_NOT_ENABLED",
        "BAD_REQUEST",
        "MISSING_REQUIRED_PARAMETER",
        "INCORRECT_TYPE",
        "INVALID_TIME",
        "INVALID_TIME_RANGE",
        "INVALID_VALUE",
        "INVALID_CURSOR",
        "UNKNOWN_QUERY_PARAMETER",
        "CONFLICTING_PARAMETERS",
        "EXPECTED_JSON_BODY",
        "INVALID_SORT_ORDER",
        "VALUE_REGEX_MISMATCH",
        "VALUE_TOO_SHORT",
        "VALUE_TOO_LONG",
        "VALUE_TOO_LOW",
        "VALUE_TOO_HIGH",
        "VALUE_EMPTY",
        "ARRAY_EMPTY",
        "EXPECTED_BOOLEAN",
        "EXPECTED_INTEGER",
        "EXPECTED_FLOAT",
        "EXPECTED_STRING",
        "EXPECTED_OBJECT",
        "EXPECTED_ARRAY",
        "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
        "INVALID_ARRAY_VALUE",
        "INVALID_ENUM_VALUE",
        "INVALID_CONTENT_TYPE",
        "INVALID_FORM_VALUE",
        "ONE_INSTRUMENT_EXPECTED",
        "NO_FIELDS_SET",
        "CARD_EXPIRED",
        "INVALID_EXPIRATION",
        "INVALID_EXPIRATION_YEAR",
        "INVALID_EXPIRATION_DATE",
        "UNSUPPORTED_CARD_BRAND",
        "INVALID_CARD",
        "DELAYED_TRANSACTION_EXPIRED",
        "DELAYED_TRANSACTION_CANCELED",
        "DELAYED_TRANSACTION_CAPTURED",
        "DELAYED_TRANSACTION_FAILED",
        "CARD_TOKEN_EXPIRED",
        "CARD_TOKEN_USED",
        "AMOUNT_TOO_HIGH",
        "UNSUPPORTED_INSTRUMENT_TYPE",
        "REFUND_AMOUNT_INVALID",
        "REFUND_ALREADY_PENDING",
        "PAYMENT_NOT_REFUNDABLE",
        "INVALID_CARD_DATA",
        "IDEMPOTENCY_KEY_REUSED",
        "UNEXPECTED_VALUE",
        "SANDBOX_NOT_SUPPORTED",
        "INVALID_EMAIL_ADDRESS",
        "CHECKOUT_EXPIRED",
        "CARD_DECLINED",
        "VERIFY_CVV_FAILURE",
        "VERIFY_AVS_FAILURE",
        "CARD_DECLINED_CALL_ISSUER",
        "NOT_FOUND",
        "REQUEST_TIMEOUT",
        "CONFLICT",
        "REQUEST_ENTITY_TOO_LARGE",
        "UNSUPPORTED_MEDIA_TYPE",
        "RATE_LIMITED",
        "NOT_IMPLEMENTED",
        "SERVICE_UNAVAILABLE"
      ],
      "description": "Indicates specific errors that can occur during a request to the\nConnect API."
    },
    "InventoryAlertType": {
      "type": "string",
      "enum": [
        "NONE",
        "LOW_QUANTITY"
      ],
      "description": "Indicates whether Square should alert the merchant when the inventory quantity of a [CatalogItemVariation](#type-catalogitemvariation) is low."
    },
    "LocationCapability": {
      "type": "string",
      "enum": [
        "CREDIT_CARD_PROCESSING"
      ],
      "description": "Indicates account capabilities that a business\u0027s location might or\nmight not have enabled."
    },
    "OrderLineItemDiscountScope": {
      "type": "string",
      "enum": [
        "LINE_ITEM",
        "ORDER"
      ],
      "description": "Indicates whether this is a line item or order-level discount."
    },
    "OrderLineItemDiscountType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "description": "Indicates how the discount is applied to the associated line item or order."
    },
    "OrderLineItemTaxType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "description": "Indicates how the tax is applied to the associated line item or order."
    },
    "RefundStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "APPROVED",
        "REJECTED",
        "FAILED"
      ],
      "description": "Indicates a refund\u0027s current status."
    },
    "SortOrder": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "description": "The order (e.g., chronological or alphabetical) in which results from a request are returned."
    },
    "TaxCalculationPhase": {
      "type": "string",
      "enum": [
        "TAX_SUBTOTAL_PHASE",
        "TAX_TOTAL_PHASE"
      ],
      "description": "When to calculate the taxes due on a cart."
    },
    "TaxInclusionType": {
      "type": "string",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "description": "Whether to the tax amount should be additional to or included in to the [CatalogItem](#type-catalogitem) price."
    },
    "TenderCardDetailsEntryMethod": {
      "type": "string",
      "enum": [
        "SWIPED",
        "KEYED",
        "EMV",
        "ON_FILE",
        "CONTACTLESS"
      ],
      "description": "Indicates the method used to enter the card\u0027s details."
    },
    "TenderCardDetailsStatus": {
      "type": "string",
      "enum": [
        "AUTHORIZED",
        "CAPTURED",
        "VOIDED",
        "FAILED"
      ],
      "description": "Indicates the card transaction\u0027s current status."
    },
    "TenderType": {
      "type": "string",
      "enum": [
        "CARD",
        "CASH",
        "THIRD_PARTY_CARD",
        "SQUARE_GIFT_CARD",
        "NO_SALE",
        "OTHER"
      ],
      "description": "Indicates a tender\u0027s type."
    },
    "TransactionProduct": {
      "type": "string",
      "enum": [
        "REGISTER",
        "EXTERNAL_API",
        "BILLING",
        "APPOINTMENTS",
        "INVOICES",
        "ONLINE_STORE",
        "PAYROLL",
        "OTHER"
      ],
      "description": "Indicates the Square product used to process a transaction."
    },
    "Address": {
      "type": "object",
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address.\n\nFields that start with `address_line` provide the address\u0027s most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address, if any."
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if any."
        },
        "locality": {
          "type": "string",
          "description": "The city or town of the address."
        },
        "sublocality": {
          "type": "string",
          "description": "A civil region within the address\u0027s `locality`, if any."
        },
        "sublocality_2": {
          "type": "string",
          "description": "A civil region within the address\u0027s `sublocality`, if any."
        },
        "sublocality_3": {
          "type": "string",
          "description": "A civil region within the address\u0027s `sublocality_2`, if any."
        },
        "administrative_district_level_1": {
          "type": "string",
          "description": "A civil entity within the address\u0027s country. In the US, this\nis the state."
        },
        "administrative_district_level_2": {
          "type": "string",
          "description": "A civil entity within the address\u0027s `administrative_district_level_1`.\nIn the US, this is the county."
        },
        "administrative_district_level_3": {
          "type": "string",
          "description": "A civil entity within the address\u0027s `administrative_district_level_2`,\nif any."
        },
        "postal_code": {
          "type": "string",
          "description": "The address\u0027s postal code."
        },
        "country": {
          "type": "string",
          "enum": [
            "ZZ",
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "description": "The address\u0027s country, in ISO 3166-1-alpha-2 format."
        },
        "first_name": {
          "type": "string",
          "description": "Optional first name when it\u0027s representing recipient."
        },
        "last_name": {
          "type": "string",
          "description": "Optional last name when it\u0027s representing recipient."
        },
        "organization": {
          "type": "string",
          "description": "Optional organization name when it\u0027s representing recipient."
        }
      },
      "description": "Represents a physical address."
    },
    "BatchDeleteCatalogObjectsRequest": {
      "type": "object",
      "properties": {
        "object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be deleted. When an object is deleted, other objects\nin the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s)."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/batch-delete",
        "request_body": {
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.php",
        "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.ruby"
      }
    },
    "BatchDeleteCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "deleted_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request."
        },
        "deleted_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "example": {
        "deleted_object_ids": [
          "W62UWFY35CWMYGVWK6TWJDNI",
          "AA27W3M2GGTF3H6AVPNB77CK"
        ],
        "deleted_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.php",
        "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.ruby"
      }
    },
    "BatchRetrieveCatalogObjectsRequest": {
      "type": "object",
      "required": [
        "object_ids"
      ],
      "properties": {
        "object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be retrieved."
        },
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/batch-retrieve",
        "request_body": {
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ],
          "include_related_objects": true
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.php",
        "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.ruby"
      }
    },
    "BatchRetrieveCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `objects` field."
        }
      },
      "description": "",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "W62UWFY35CWMYGVWK6TWJDNI",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ITEM",
            "id": "AA27W3M2GGTF3H6AVPNB77CK",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Coffee",
              "description": "Hot Bean Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "LBTYIHNHU52WOIHWT7SNRIYH",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Regular",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "PKYIC7HGGKW5CYVSCVDEIMHY",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Large",
                    "ordinal": 1,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          }
        ],
        "related_objects": [
          {
            "type": "CATEGORY",
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.php",
        "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.ruby"
      }
    },
    "BatchUpsertCatalogObjectsRequest": {
      "type": "object",
      "required": [
        "idempotency_key"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you\u0027re unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
        },
        "batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObjectBatch"
          },
          "description": "A batch of [CatalogObject](#type-catalogobject)s to be inserted/updated atomically.\nThe objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs\nattempting to insert or update an object within a batch, the entire batch will be rejected. However, an error\nin one batch will not affect other batches within the same request.\n\nFor each object, its `updated_at` field is ignored and replaced with a current [timestamp](#workingwithdates), and its\n`is_deleted` field must not be set to `true`.\n\nTo modify an existing object, supply its ID. To create a new object, use an ID starting\nwith `#`. These IDs may be used to create relationships between an object and attributes of\nother objects that reference it. For example, you can create a [CatalogItem](#type-catalogitem) with\nID `#ABC` and a [CatalogItemVariation](#type-catalogitemvariation) with its `item_id` attribute set to\n`#ABC` in order to associate the [CatalogItemVariation](#type-catalogitemvariation) with its parent\n[CatalogItem](#type-catalogitem).\n\nAny `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.\n\nEach batch may contain up to 1,000 objects. The total number of objects across all batches for a single request\nmay not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will\nbe inserted or updated."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/batch-upsert",
        "request_body": {
          "idempotency_key": "789ff020-f723-43a9-b4b5-43b5dc1fa3dc",
          "batches": [
            {
              "objects": [
                {
                  "type": "ITEM",
                  "id": "#Tea",
                  "present_at_all_locations": true,
                  "item_data": {
                    "name": "Tea",
                    "description": "Hot Leaf Juice",
                    "category_id": "#Beverages",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Tea_Mug",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Tea",
                          "name": "Mug",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 150,
                            "currency": "USD"
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ITEM",
                  "id": "#Coffee",
                  "present_at_all_locations": true,
                  "item_data": {
                    "name": "Coffee",
                    "description": "Hot Bean Juice",
                    "category_id": "#Beverages",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Coffee_Regular",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Regular",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 250,
                            "currency": "USD"
                          }
                        }
                      },
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Coffee_Large",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Large",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 350,
                            "currency": "USD"
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "CATEGORY",
                  "id": "#Beverages",
                  "present_at_all_locations": true,
                  "category_data": {
                    "name": "Beverages"
                  }
                },
                {
                  "type": "TAX",
                  "id": "#SalesTax",
                  "present_at_all_locations": true,
                  "tax_data": {
                    "name": "Sales Tax",
                    "calculation_phase": "TAX_SUBTOTAL_PHASE",
                    "inclusion_type": "ADDITIVE",
                    "percentage": "5.0",
                    "applies_to_custom_amounts": true,
                    "enabled": true
                  }
                }
              ]
            }
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.php",
        "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.ruby"
      }
    },
    "BatchUpsertCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The created [CatalogObject](#type-catalogobject)s"
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        },
        "id_mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "description": "The mapping between client and server IDs for this Upsert."
        }
      },
      "description": "",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "NAYHET5R52MIYCEF34ZMAHFM",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ITEM",
            "id": "PJMCEBHHUS3OKDB6PYUHLCPP",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Coffee",
              "description": "Hot Bean Juice",
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "OTYDX45SPG7LJQUVCBZI4INH",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Regular",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "GZDA3JB37FYVOPI4AOEBOITI",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Large",
                    "ordinal": 1,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "CATEGORY",
            "id": "LYT72K3WGJFFCIMB63XARP3I",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "XHSHLHNWSI3HVI4BW5ZUZXI3",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "applies_to_custom_amounts": true,
              "enabled": true
            }
          }
        ],
        "id_mappings": [
          {
            "client_object_id": "#Tea",
            "object_id": "ZSDZN34NAXDLC6D5ZQMNSOUM"
          },
          {
            "client_object_id": "#Coffee",
            "object_id": "PJMCEBHHUS3OKDB6PYUHLCPP"
          },
          {
            "client_object_id": "#Beverages",
            "object_id": "LYT72K3WGJFFCIMB63XARP3I"
          },
          {
            "client_object_id": "#SalesTax",
            "object_id": "XHSHLHNWSI3HVI4BW5ZUZXI3"
          },
          {
            "client_object_id": "#Tea_Mug",
            "object_id": "NAYHET5R52MIYCEF34ZMAHFM"
          },
          {
            "client_object_id": "#Coffee_Regular",
            "object_id": "OTYDX45SPG7LJQUVCBZI4INH"
          },
          {
            "client_object_id": "#Coffee_Large",
            "object_id": "GZDA3JB37FYVOPI4AOEBOITI"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.php",
        "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.ruby"
      }
    },
    "CaptureTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/capture"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.python",
        "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.csharp",
        "php": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.php",
        "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.ruby"
      }
    },
    "CaptureTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.python",
        "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.csharp",
        "php": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.php",
        "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.ruby"
      }
    },
    "Card": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The card\u0027s unique ID, if any."
        },
        "card_brand": {
          "type": "string",
          "enum": [
            "OTHER_BRAND",
            "VISA",
            "MASTERCARD",
            "AMERICAN_EXPRESS",
            "DISCOVER",
            "DISCOVER_DINERS",
            "JCB",
            "CHINA_UNIONPAY",
            "SQUARE_GIFT_CARD"
          ],
          "description": "The card\u0027s brand (such as `VISA`). See [CardBrand](#type-cardbrand)\nfor all possible values."
        },
        "last_4": {
          "type": "string",
          "description": "The last 4 digits of the card\u0027s number."
        },
        "exp_month": {
          "type": "integer",
          "format": "int64",
          "description": "The month of the card\u0027s expiration date. This value is always between\n`1` and `12`, inclusive."
        },
        "exp_year": {
          "type": "integer",
          "format": "int64",
          "description": "The four-digit year of the card\u0027s expiration date."
        },
        "cardholder_name": {
          "type": "string",
          "description": "The cardholder name. This value is present only if this object\nrepresents a customer\u0027s card on file."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The card\u0027s billing address. This value is present only if this object\nrepresents a customer\u0027s card on file."
        },
        "fingerprint": {
          "type": "string",
          "description": "The unique string fingerprint for the card. \nThe fingerprint is based on the credit card number and is unique to the merchant. \nIf a card is used at multiple locations for the same merchant, it will have the same fingerprint in each case.\nNote: Fingerprint may not exist on old transactions."
        }
      },
      "description": "Represents the non-confidential details of a credit card."
    },
    "CatalogCategory": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "The category\u0027s name. Searchable."
        }
      },
      "description": "A category to which an [CatalogItem](#type-catalogitem) belongs in the Catalog object model.",
      "example": {
        "object": {
          "type": "CATEGORY",
          "id": "#Beverages",
          "present_at_all_locations": true,
          "category_data": {
            "name": "Beverages"
          }
        }
      }
    },
    "CatalogDiscount": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "The discount\u0027s name. Searchable."
        },
        "discount_type": {
          "type": "string",
          "enum": [
            "FIXED_PERCENTAGE",
            "FIXED_AMOUNT",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.\nSee [CatalogDiscountType](#type-catalogdiscounttype) for all possible values."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the discount. Specify an amount of `0` if `discount_type` is `VARIABLE_AMOUNT`.\n\nDo not include this field for percentage-based or variable discounts."
        },
        "pin_required": {
          "type": "boolean",
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app."
        },
        "label_color": {
          "type": "string",
          "description": "The color of the discount\u0027s display label in the Square Point of Sale app."
        }
      },
      "description": "A discount in the Catalog object model.",
      "example": {
        "object": {
          "type": "DISCOUNT",
          "id": "#Maythe4th",
          "present_at_all_locations": true,
          "discount_data": {
            "name": "Welcome to the Dark(Roast) Side!",
            "discount_type": "FIXED_PERCENTAGE",
            "percentage": "5.4",
            "pin_required": false,
            "label_color": "red"
          }
        }
      }
    },
    "CatalogIdMapping": {
      "type": "object",
      "properties": {
        "client_object_id": {
          "type": "string",
          "description": "The client-supplied, temporary `#`-prefixed ID for a new [CatalogObject](#type-catalogobject)."
        },
        "object_id": {
          "type": "string",
          "description": "The permanent ID for the [CatalogObject](#type-catalogobject) created by the server."
        }
      },
      "description": "A mapping between a client-supplied temporary ID and a permanent server ID."
    },
    "CatalogInfoRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/info"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.python",
        "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.csharp",
        "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.php",
        "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.ruby"
      }
    },
    "CatalogInfoResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "limits": {
          "$ref": "#/definitions/CatalogInfoResponseLimits",
          "description": ""
        }
      },
      "description": "",
      "example": {
        "limits": {
          "batch_upsert_max_objects_per_batch": 1000,
          "batch_upsert_max_total_objects": 10000,
          "batch_retrieve_max_object_ids": 1000,
          "search_max_page_limit": 1000,
          "batch_delete_max_object_ids": 200,
          "update_item_taxes_max_item_ids": 1000,
          "update_item_taxes_max_taxes_to_enable": 1000,
          "update_item_taxes_max_taxes_to_disable": 1000,
          "update_item_modifier_lists_max_item_ids": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_enable": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_disable": 1000
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.python",
        "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.csharp",
        "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.php",
        "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.ruby"
      }
    },
    "CatalogInfoResponseLimits": {
      "type": "object",
      "properties": {
        "batch_upsert_max_objects_per_batch": {
          "type": "integer",
          "description": "The maximum number of objects that may appear within a single batch in a\n`/v2/catalog/batch-upsert` request."
        },
        "batch_upsert_max_total_objects": {
          "type": "integer",
          "description": "The maximum number of objects that may appear across all batches in a\n`/v2/catalog/batch-upsert` request."
        },
        "batch_retrieve_max_object_ids": {
          "type": "integer",
          "description": "The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`\nrequest."
        },
        "search_max_page_limit": {
          "type": "integer",
          "description": "The maximum number of results that may be returned in a page of a\n`/v2/catalog/search` response."
        },
        "batch_delete_max_object_ids": {
          "type": "integer",
          "description": "The maximum number of object IDs that may be included in a single\n`/v2/catalog/batch-delete` request."
        },
        "update_item_taxes_max_item_ids": {
          "type": "integer",
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_taxes_max_taxes_to_enable": {
          "type": "integer",
          "description": "The maximum number of tax IDs to be enabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_taxes_max_taxes_to_disable": {
          "type": "integer",
          "description": "The maximum number of tax IDs to be disabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_modifier_lists_max_item_ids": {
          "type": "integer",
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-modifier-lists` request."
        },
        "update_item_modifier_lists_max_modifier_lists_to_enable": {
          "type": "integer",
          "description": "The maximum number of modifier list IDs to be enabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
        },
        "update_item_modifier_lists_max_modifier_lists_to_disable": {
          "type": "integer",
          "description": "The maximum number of modifier list IDs to be disabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
        }
      },
      "description": ""
    },
    "CatalogItem": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "The item\u0027s name. Searchable."
        },
        "description": {
          "type": "string",
          "description": "The item\u0027s description. Searchable."
        },
        "abbreviation": {
          "type": "string",
          "description": "The text of the item\u0027s display label in the Square Point of Sale app. Only up to the first five characters of the string are used.  Searchable."
        },
        "label_color": {
          "type": "string",
          "description": "The color of the item\u0027s display label in the Square Point of Sale app."
        },
        "available_online": {
          "type": "boolean",
          "description": "If `true`, the item can be added to shipping orders from the merchant\u0027s online store."
        },
        "available_for_pickup": {
          "type": "boolean",
          "description": "If `true`, the item can be added to pickup orders from the merchant\u0027s online store."
        },
        "available_electronically": {
          "type": "boolean",
          "description": "If `true`, the item can be added to electronically fulfilled orders from the merchant\u0027s online store."
        },
        "category_id": {
          "type": "string",
          "description": "The ID of the item\u0027s category, if any."
        },
        "tax_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of IDs indicating the [CatalogTax](#type-catalogtax)es that are enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\n[CatalogTax](#type-catalogtax)es may also be added to or deleted from an item using `UpdateItemTaxes`."
        },
        "modifier_list_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemModifierListInfo"
          },
          "description": "A set of [CatalogItemModifierListInfo](#type-catalogitemmodifierlistinfo) objects\nrepresenting the modifier lists that apply to this item, along with the overrides and min\nand max limits that are specific to this item. [CatalogModifierList](#type-catalogmodifierlist)s\nmay also be added to or deleted from an item using `UpdateItemModifierLists`."
        },
        "image_url": {
          "type": "string",
          "description": "The URL of an image representing this item."
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s containing the [CatalogItemVariation](#type-catalogitemvariation)s for this item."
        },
        "product_type": {
          "type": "string",
          "enum": [
            "REGULAR",
            "GIFT_CARD",
            "APPOINTMENTS_SERVICE",
            "RETAIL_ITEM",
            "RESTAURANT_ITEM"
          ],
          "description": "The product type of the item. May not be changed once an item has been created.\n\nOnly items of product type `REGULAR` may be created by this API; items with other product\ntypes are read-only. See [CatalogItemProductType](#type-catalogitemproducttype) for all possible values."
        },
        "skip_modifier_screen": {
          "type": "boolean",
          "description": "If `false`, the Square Point of Sale app will present the [CatalogItem](#type-catalogitem)\u0027s\ndetails screen immediately, allowing the merchant to choose [CatalogModifier](#type-catalogmodifier)s\nbefore adding the item to the cart.  This is the default behavior.\n\nIf `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected\nmodifiers, and merchants can edit modifiers by drilling down onto the item\u0027s details.\n\nThird-party clients are encouraged to implement similar behaviors."
        }
      },
      "description": "An item (i.e., product family) in the Catalog object model.",
      "example": {
        "object": {
          "type": "ITEM",
          "id": "#Cocoa",
          "present_at_all_locations": true,
          "item_data": {
            "name": "Cocoa",
            "description": "Hot chocolate",
            "abbreviation": "Ch",
            "visibility": "PRIVATE"
          }
        }
      }
    },
    "CatalogItemModifierListInfo": {
      "type": "object",
      "required": [
        "modifier_list_id"
      ],
      "properties": {
        "modifier_list_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the [CatalogModifierList](#type-catalogmodifierlist) controlled by this [CatalogModifierListInfo](#type-catalogmodifierlistinfo)."
        },
        "modifier_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogModifierOverride"
          },
          "description": "A set of [CatalogModifierOverride](#type-catalogmodifieroverride) objects that override whether a given [CatalogModifier](#type-catalogmodifier) is enabled by default."
        },
        "min_selected_modifiers": {
          "type": "integer",
          "description": "If zero or larger, the smallest number of [CatalogModifier](#type-catalogmodifier)s that must be selected from this [CatalogModifierList](#type-catalogmodifierlist)."
        },
        "max_selected_modifiers": {
          "type": "integer",
          "description": "If zero or larger, the largest number of [CatalogModifier](#type-catalogmodifier)s that can be selected from this [CatalogModifierList](#type-catalogmodifierlist)."
        },
        "enabled": {
          "type": "boolean",
          "description": "If `true`, enable this [CatalogModifierList](#type-catalogmodifierlist)."
        }
      },
      "description": "Controls the properties of a [CatalogModifierList](#type-catalogmodifierlist) as it applies to this [CatalogItem](#type-catalogitem)."
    },
    "CatalogItemVariation": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the [CatalogItem](#type-catalogitem) associated with this item variation. Searchable."
        },
        "name": {
          "type": "string",
          "description": "The item variation\u0027s name. Searchable."
        },
        "sku": {
          "type": "string",
          "description": "The item variation\u0027s SKU, if any. Searchable."
        },
        "upc": {
          "type": "string",
          "description": "The item variation\u0027s UPC, if any. Searchable."
        },
        "pricing_type": {
          "type": "string",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "description": "Indicates whether the item variation\u0027s price is fixed or determined at the time\nof sale. See [CatalogPricingType](#type-catalogpricingtype) for all possible values."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The item variation\u0027s price, if fixed pricing is used."
        },
        "location_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemVariationLocationOverrides"
          },
          "description": "Per-[location][#type-location] price and inventory overrides."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If `true`, inventory tracking is active for the variation."
        },
        "inventory_alert_type": {
          "type": "string",
          "enum": [
            "NONE",
            "LOW_QUANTITY"
          ],
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype) for all possible values."
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "format": "int64",
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer."
        },
        "user_data": {
          "type": "string",
          "description": "Arbitrary user metadata to associate with the item variation. Cannot exceed 255 characters. Searchable."
        },
        "service_duration": {
          "type": "integer",
          "format": "int64",
          "description": "If the [CatalogItem](#type-catalogitem) that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For\nexample, a 30 minute appointment would have the value `1800000`, which is equal to\n30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second)."
        }
      },
      "description": "An item variation (i.e., product) in the Catalog object model.",
      "example": {
        "object": {
          "type": "ITEM_VARIATION",
          "id": "#Coffee_Regular",
          "present_at_all_locations": true,
          "item_variation_data": {
            "name": "Regular",
            "pricing_type": "FIXED_PRICING",
            "price_money": {
              "amount": 250,
              "currency": "USD"
            }
          }
        }
      }
    },
    "CatalogModifier": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "The modifier\u0027s name. Searchable."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The modifier\u0027s price."
        }
      },
      "description": "A modifier in the Catalog object model.",
      "example": {
        "object": {
          "type": "MODIFIER",
          "present_at_all_locations": true,
          "item_modifier": {
            "name": "Almond Milk",
            "price_money": {
              "amount": 250,
              "currency": "USD"
            }
          }
        }
      }
    },
    "CatalogModifierList": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "The [CatalogModifierList](#type-catalogmodifierlist)\u0027s name. Searchable."
        },
        "selection_type": {
          "type": "string",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "description": "Indicates whether multiple options from the [CatalogModifierList](#type-catalogmodifierlist)\ncan be applied to a single [CatalogItem](#type-catalogitem). See\n[CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for all possible values."
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The options included in the [CatalogModifierList](#type-catalogmodifierlist).\nYou must include at least one [CatalogModifier](#type-catalogmodifier).\nEach [CatalogObject](#type-catalogobject) must have type `MODIFIER` and contain\n[CatalogModifier](#type-catalogmodifier) data."
        }
      },
      "description": "A modifier list in the Catalog object model. A [CatalogModifierList](#type-catalogmodifierlist)\ncontains [Modifier](#type-catalogmodifier)s that can be applied to a [CatalogItem](#type-catalogitem)\nat the time of sale.\n\nFor example, a modifier list \"Condiments\" that would apply to a \"Hot Dog\" [CatalogItem](#type-catalogitem) might\ncontain [CatalogModifier](#type-catalogmodifier)s \"Ketchup\", \"Mustard\", and \"Relish\". The\n`selection_type` field specifies whether or not multiple selections from the modifier list are allowed.",
      "example": {
        "type": "MODIFIER_LIST",
        "id": "#MilkType",
        "present_at_all_locations": true,
        "modifier_list_data": {
          "name": "Milk Type",
          "selection_type": "SINGLE",
          "modifiers": [
            {
              "type": "MODIFIER",
              "present_at_all_locations": true,
              "item_modifier": {
                "name": "Whole Milk",
                "price_money": {
                  "amount": 0,
                  "currency": "USD"
                }
              }
            },
            {
              "type": "MODIFIER",
              "present_at_all_locations": true,
              "item_modifier": {
                "name": "Almond Milk",
                "price_money": {
                  "amount": 250,
                  "currency": "USD"
                }
              }
            },
            {
              "type": "MODIFIER",
              "present_at_all_locations": true,
              "item_modifier": {
                "name": "Soy Milk",
                "price_money": {
                  "amount": 250,
                  "currency": "USD"
                }
              }
            }
          ]
        }
      }
    },
    "CatalogModifierOverride": {
      "type": "object",
      "required": [
        "modifier_id"
      ],
      "properties": {
        "modifier_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the [CatalogModifier](#type-catalogmodifier) whose default behavior is being overridden."
        },
        "on_by_default": {
          "type": "boolean",
          "description": "If `true`, this [CatalogModifier](#type-catalogmodifier) should be selected by default for this [CatalogItem](#type-catalogitem)."
        }
      },
      "description": ""
    },
    "CatalogObject": {
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ITEM",
            "CATEGORY",
            "ITEM_VARIATION",
            "TAX",
            "DISCOUNT",
            "MODIFIER_LIST",
            "MODIFIER"
          ],
          "description": "The type of this object. Each object type has expected\nproperties expressed in a structured format within its corresponding `*_data` field below.\n\nSee [CatalogObjectType](#type-catalogobjecttype) for all possible values."
        },
        "id": {
          "minLength": 1,
          "type": "string",
          "description": "An identifier to reference this object in the catalog. When a new CatalogObject\nis inserted, the client should set the id to a temporary identifier starting with\na `\u0027#\u0027` character. Other objects being inserted or updated within the same request\nmay use this identifier to refer to the new object.\n\nWhen the server receives the new object, it will supply a unique identifier that\nreplaces the temporary identifier for all future references."
        },
        "updated_at": {
          "type": "string",
          "description": "Last modification [timestamp](#workingwithdates) in RFC 3339 format, e.g., `\"2016-08-15T23:59:33.123Z\"`\nwould indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the object. When updating an object, the version supplied by the\nmust match the version in the database, otherwise the write will be rejected as conflicting."
        },
        "is_deleted": {
          "type": "boolean",
          "description": "If `true`, the object has been deleted from the database. Must be `false` for new objects\nbeing inserted. When deleted, the `updated_at` field will equal the deletion time."
        },
        "catalog_v1_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogV1Id"
          },
          "description": "The Connect V1 IDs for this object at each [location][#type-location] where it is present, where they\ndiffer from the object\u0027s Connect V2 ID. The field will only be present for objects that\nhave been created or modified by legacy APIs."
        },
        "present_at_all_locations": {
          "type": "boolean",
          "description": "If `true`, this object is present at all locations (including future locations), except where specified in\nthe `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),\nexcept where specified in the `present_at_location_ids` field."
        },
        "present_at_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations where the object is present, even if `present_at_all_locations` is `false`."
        },
        "absent_at_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations where the object is not present, even if `present_at_all_locations` is `true`."
        },
        "item_data": {
          "$ref": "#/definitions/CatalogItem",
          "description": "Structured data for a [CatalogItem](#type-catalogitem), set for CatalogObjects of type `ITEM`."
        },
        "category_data": {
          "$ref": "#/definitions/CatalogCategory",
          "description": "Structured data for a [CatalogCategory](#type-catalogcategory), set for CatalogObjects of type `CATEGORY`."
        },
        "item_variation_data": {
          "$ref": "#/definitions/CatalogItemVariation",
          "description": "Structured data for a [CatalogItemVariation](#type-catalogitemvariation), set for CatalogObjects of type `ITEM_VARIATION`."
        },
        "tax_data": {
          "$ref": "#/definitions/CatalogTax",
          "description": "Structured data for a [CatalogTax](#type-catalogtax), set for CatalogObjects of type `TAX`."
        },
        "discount_data": {
          "$ref": "#/definitions/CatalogDiscount",
          "description": "Structured data for a [CatalogDiscount](#type-catalogdiscount), set for CatalogObjects of type `DISCOUNT`."
        },
        "modifier_list_data": {
          "$ref": "#/definitions/CatalogModifierList",
          "description": "Structured data for a [CatalogModifierList](#type-catalogmodifierlist), set for CatalogObjects of type `MODIFIER_LIST`."
        },
        "modifier_data": {
          "$ref": "#/definitions/CatalogModifier",
          "description": "Structured data for a [CatalogModifier](#type-catalogmodifier), set for CatalogObjects of type `MODIFIER`."
        }
      },
      "description": "The wrapper object for object types in the Catalog data model. The type\nof a particular `CatalogObject` is determined by the value of\n`type` and only the corresponding data field may be set.\n\n- if type \u003d `ITEM`, only `item_data` will be populated and it will contain a valid [CatalogItem](#type-catalogitem) object.\n- if type \u003d `ITEM_VARIATION`, only `item_variation_data` will be populated and it will contain a valid [CatalogItemVariation](#type-catalogitemvariation) object.\n- if type \u003d `MODIFIER`, only `modifier_data` will be populated and it will contain a valid [CatalogModifier](#type-catalogmodifier) object.\n- if type \u003d `MODIFIER_LIST`, only `modifier_list_data` will be populated and it will contain a valid [CatalogModifierList](#type-catalogmodifierlist) object.\n- if type \u003d `CATEGORY`, only `category_data` will be populated and it will contain a valid [CatalogCategory](#type-catalogcategory) object.\n- if type \u003d `DISCOUNT`, only `discount_data` will be populated and it will contain a valid [CatalogDiscount](#type-catalogdiscount) object.\n- if type \u003d `TAX`, only `tax_data` will be populated and it will contain a valid [CatalogTax](#type-catalogtax) object.\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Catalog Overview](https://docs.connect.squareup.com/articles/catalog-overview).",
      "example": {
        "catalog_object": {
          "type": "{{ [ITEM | ITEM_VARIATION | MODIFIER | MODIFIER_LIST | CATEGORY | DISCOUNT | TAX] }}",
          "id": "{{ set by Catalog during object creation }}",
          "updated_at": "{{ date \u0026 time of most recent update }}",
          "version": "{{ version of the CatalogObject }}",
          "is_deleted": "{{ [true | false] }}",
          "connect_v1_ids": {
            "catalog_v1_id": "{{ itemID from Catalog v1 }}",
            "location_id": "{{ location where v1 ID is used }}"
          },
          "present_at_all_locations": "{{ [true | false] }}",
          "present_at_location_ids": [
            "{{ LOCATIONID-1 }}",
            "{{ LOCATIONID-N }}"
          ],
          "absent_at_location_ids": [
            "{{ LOCATIONID-1 }}",
            "{{ LOCATIONID-N }}"
          ],
          "item_data": "{{ CatalogItem object only if type\u003dITEM }}",
          "item_variation_data": "{{ CatalogItemVariation object only if type\u003dITEM_VARIATION }}",
          "modifier_data": "{{ CatalogModifier object only if type\u003dMODIFIER }}",
          "modifier_list_data": "{{ CatalogModifierList object only if type\u003dMODIFIER_LIST }}",
          "category_data": "{{ CatalogCategory object only if type\u003dCATEGORY }}",
          "discount_data": "{{ CatalogDiscount object only if type\u003dDISCOUNT }}",
          "tax_data": "{{ CatalogTax object only if type\u003dTAX }}"
        }
      },
      "example_type": "Schema"
    },
    "CatalogObjectBatch": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s belonging to this batch."
        }
      },
      "description": "A batch of [CatalogObject](#type-catalogobject)s."
    },
    "CatalogQuery": {
      "type": "object",
      "properties": {
        "sorted_attribute_query": {
          "$ref": "#/definitions/CatalogQuerySortedAttribute",
          "description": "A query that returns all objects, sorted by the given attribute."
        },
        "exact_query": {
          "$ref": "#/definitions/CatalogQueryExact",
          "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive value."
        },
        "prefix_query": {
          "$ref": "#/definitions/CatalogQueryPrefix",
          "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive prefix."
        },
        "range_query": {
          "$ref": "#/definitions/CatalogQueryRange",
          "description": "A query that returns only objects for which the given (integer-valued) attribute lies in the given range."
        },
        "text_query": {
          "$ref": "#/definitions/CatalogQueryText",
          "description": "A query that returns only objects whose searchable attributes contain all of the given\nkeywords as prefixes. For example, if a [CatalogItem](#type-catalogitem) contains attributes `{\"name\": \"t-shirt\"}` and\n`{\"description\": \"Small, Purple\"}`, it will be matched by the query `{\"keywords\": [\"shirt\", \"sma\", \"purp\"]}`."
        },
        "items_for_tax_query": {
          "$ref": "#/definitions/CatalogQueryItemsForTax",
          "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogTax](#type-catalogtax)es enabled."
        },
        "items_for_modifier_list_query": {
          "$ref": "#/definitions/CatalogQueryItemsForModifierList",
          "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogModifierList](#type-catalogmodifierlist)s enabled."
        }
      },
      "description": "A query to be applied to a [SearchCatalogObjectsRequest](#type-searchcatalogobjectsrequest).\nOnly one query field may be present.\n\nWhere an attribute name is required, it should be specified as the name of any field\nmarked \"searchable\" from the structured data types for the desired result object type(s)\n([CatalogItem](#type-catalogitem), [CatalogItemVariation](#type-catalogitemvariation),\n[CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax),\n[CatalogDiscount](#type-catalogdiscount), [CatalogModifierList](#type-catalogmodifierlist),\n[CatalogModifier](#type-catalogmodifier)).\n\nFor example, a query that should return Items may specify attribute names from\nany of the searchable fields of the [CatalogItem](#type-catalogitem) data type, namely\n`\"name\"`, `\"description\"`, and `\"abbreviation\"`."
    },
    "CatalogQueryExact": {
      "type": "object",
      "required": [
        "attribute_name",
        "attribute_value"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_value": {
          "type": "string",
          "description": "The desired value of the search attribute."
        }
      },
      "description": ""
    },
    "CatalogQueryItemsForModifierList": {
      "type": "object",
      "required": [
        "modifier_list_ids"
      ],
      "properties": {
        "modifier_list_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of [CatalogModifierList](#type-catalogmodifierlist) IDs to be used to find associated [CatalogItem](#type-catalogitem)s."
        }
      },
      "description": ""
    },
    "CatalogQueryItemsForTax": {
      "type": "object",
      "required": [
        "tax_ids"
      ],
      "properties": {
        "tax_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of [CatalogTax](#type-catalogtax) IDs to be used to find associated [CatalogItem](#type-catalogitem)s."
        }
      },
      "description": ""
    },
    "CatalogQueryPrefix": {
      "type": "object",
      "required": [
        "attribute_name",
        "attribute_prefix"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_prefix": {
          "minLength": 1,
          "type": "string",
          "description": "The desired prefix of the search attribute value."
        }
      },
      "description": ""
    },
    "CatalogQueryRange": {
      "type": "object",
      "required": [
        "attribute_name"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_min_value": {
          "type": "integer",
          "format": "int64",
          "description": "The desired minimum value for the search attribute (inclusive)."
        },
        "attribute_max_value": {
          "type": "integer",
          "format": "int64",
          "description": "The desired maximum value for the search attribute (inclusive)."
        }
      },
      "description": ""
    },
    "CatalogQuerySortedAttribute": {
      "type": "object",
      "required": [
        "attribute_name"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The attribute whose value should be used as the sort key."
        },
        "initial_attribute_value": {
          "type": "string",
          "description": "The first attribute value to be returned by the query. Ascending sorts will return only\nobjects with this value or greater, while descending sorts will return only objects with this value\nor less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts)."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The desired [SortOrder](#type-sortorder), `\"ASC\"` (ascending) or `\"DESC\"` (descending)."
        }
      },
      "description": ""
    },
    "CatalogQueryText": {
      "type": "object",
      "required": [
        "keywords"
      ],
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of one, two, or three search keywords. Keywords with fewer than three characters\nare ignored."
        }
      },
      "description": ""
    },
    "CatalogTax": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "The tax\u0027s name. Searchable."
        },
        "calculation_phase": {
          "type": "string",
          "enum": [
            "TAX_SUBTOTAL_PHASE",
            "TAX_TOTAL_PHASE"
          ],
          "description": "Whether the tax is calculated based on a payment\u0027s subtotal or total. See [TaxCalculationPhase](#type-taxcalculationphase) for all possible values."
        },
        "inclusion_type": {
          "type": "string",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`. See [TaxInclusionType](#type-taxinclusiontype) for all possible values."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the tax in decimal form, using a `\u0027.\u0027` as the decimal separator and without a `\u0027%\u0027` sign.\nA value of `7.5` corresponds to 7.5%."
        },
        "applies_to_custom_amounts": {
          "type": "boolean",
          "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular [CatalogItem](#type-catalogitem)."
        },
        "enabled": {
          "type": "boolean",
          "description": "If `true`, the tax will be shown as enabled in the Square Point of Sale app."
        }
      },
      "description": "A tax in the Catalog object model.",
      "example": {
        "object": {
          "type": "TAX",
          "id": "#SalesTax",
          "present_at_all_locations": true,
          "tax_data": {
            "name": "Sales Tax",
            "calculation_phase": "TAX_SUBTOTAL_PHASE",
            "inclusion_type": "ADDITIVE",
            "percentage": "5.0",
            "fee_applies_to_custom_amounts": true,
            "enabled": true
          }
        }
      }
    },
    "CatalogV1Id": {
      "type": "object",
      "properties": {
        "catalog_v1_id": {
          "type": "string",
          "description": "The ID for an object in Connect V1, if different from its Connect V2 ID."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the [location][#type-location] this Connect V1 ID is associated with."
        }
      },
      "description": "An Items Connect V1 object ID along with its associated [location][#type-location] ID."
    },
    "ChargeRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "amount_money"
      ],
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "A value you specify that uniquely identifies this\ntransaction among transactions you\u0027ve created.\n\nIf you\u0027re unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to charge.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](#workingwithmonetaryamounts) for details.\n\nThe value of `currency` must match the currency associated with the business\nthat is charging the card."
        },
        "card_nonce": {
          "type": "string",
          "description": "A nonce generated from the `SqPaymentForm` that represents the card\nto charge.\n\nThe application that provides a nonce to this endpoint must be the\n_same application_ that generated the nonce with the `SqPaymentForm`.\nOtherwise, the nonce is invalid.\n\nDo not provide a value for this field if you provide a value for\n`customer_card_id`."
        },
        "customer_card_id": {
          "type": "string",
          "description": "The ID of the customer card on file to charge. Do\nnot provide a value for this field if you provide a value for `card_nonce`.\n\nIf you provide this value, you _must_ also provide a value for\n`customer_id`."
        },
        "delay_capture": {
          "type": "boolean",
          "description": "If `true`, the request will only perform an Auth on the provided\ncard. You can then later perform either a Capture (with the\n[CaptureTransaction](#endpoint-capturetransaction) endpoint) or a Void\n(with the [VoidTransaction](#endpoint-voidtransaction) endpoint).\n\nDefault value: `false`"
        },
        "reference_id": {
          "type": "string",
          "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters."
        },
        "note": {
          "type": "string",
          "description": "An optional note to associate with the transaction.\n\nThis value cannot exceed 60 characters."
        },
        "customer_id": {
          "type": "string",
          "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s billing address. This value is optional, but this transaction\nis ineligible for chargeback protection if neither this parameter nor\n`shipping_address` is provided."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s shipping address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if neither this\nparameter nor `billing_address` is provided."
        },
        "buyer_email_address": {
          "type": "string",
          "description": "The buyer\u0027s email address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if it is not\nprovided."
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [Charge](#endpoint-charge) endpoint.",
      "example": {
        "request_url": "/v2/locations/LOCATION_ID/transactions",
        "request_body": {
          "idempotency_key": "74ae1696-b1e3-4328-af6d-f1e04d947a13",
          "shipping_address": {
            "address_line_1": "123 Main St",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94114",
            "country": "US"
          },
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "locality": "New York",
            "postal_code": "10003",
            "country": "US"
          },
          "amount_money": {
            "amount": 5000,
            "currency": "USD"
          },
          "card_nonce": "card_nonce_from_square_123",
          "reference_id": "some optional reference id",
          "note": "some optional note",
          "delay_capture": false
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Charge/ChargeRequest.python",
        "csharp": "/sdk_samples/Charge/ChargeRequest.csharp",
        "php": "/sdk_samples/Charge/ChargeRequest.php",
        "ruby": "/sdk_samples/Charge/ChargeRequest.ruby"
      }
    },
    "ChargeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The created transaction."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [Charge](#endpoint-charge) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "example": {
        "transaction": {
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "created_at": "2016-03-10T22:57:56Z",
          "tenders": [
            {
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "created_at": "2016-03-10T22:57:56Z",
              "note": "some optional note",
              "amount_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED"
              }
            }
          ],
          "reference_id": "some optional reference id",
          "product": "EXTERNAL_API"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Charge/ChargeResponse.python",
        "csharp": "/sdk_samples/Charge/ChargeResponse.csharp",
        "php": "/sdk_samples/Charge/ChargeResponse.php",
        "ruby": "/sdk_samples/Charge/ChargeResponse.ruby"
      }
    },
    "Checkout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID generated by Square Checkout when a new checkout is requested."
        },
        "checkout_page_url": {
          "type": "string",
          "description": "The URL that the buyer\u0027s browser should be redirected to after the\ncheckout is completed."
        },
        "ask_for_shipping_address": {
          "type": "boolean",
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
        },
        "merchant_support_email": {
          "type": "string",
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant\u0027s Square account.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_buyer_email": {
          "type": "string",
          "description": "If provided, the buyer\u0027s email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer\u0027s shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "type": "string",
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare\u0027s `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId\u003dxxxxxx\u0026orderId\u003dxxxxxx\u0026referenceId\u003dxxxxxx\u0026transactionId\u003dxxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow."
        },
        "order": {
          "$ref": "#/definitions/Order",
          "description": "Order to be checked out."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the checkout was created, in RFC 3339 format."
        }
      },
      "description": "Square Checkout lets merchants accept online payments for supported\npayment types using a checkout workflow hosted on squareup.com."
    },
    "CreateCheckoutRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "order"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A unique string that identifies this checkout among others\nyou\u0027ve created. It can be any valid string but must be unique for every\norder sent to Square Checkout for a given location ID.\n\nThe idempotency key is used to avoid processing the same order more than\nonce. If you\u0027re unsure whether a particular checkout was created\nsuccessfully, you can reattempt it with the same idempotency key and all the\nsame other parameters without worrying about creating duplicates.\n\nWe recommend using a random number/string generator native to the language\nyou are working in to generate strings for your idempotency keys.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
        },
        "order": {
          "$ref": "#/definitions/CreateOrderRequest",
          "description": "The order including line items to be checked out."
        },
        "ask_for_shipping_address": {
          "type": "boolean",
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
        },
        "merchant_support_email": {
          "maxLength": 254,
          "type": "string",
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant\u0027s Square account.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_buyer_email": {
          "maxLength": 254,
          "type": "string",
          "description": "If provided, the buyer\u0027s email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer\u0027s shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "type": "string",
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare\u0027s `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId\u003dxxxxxx\u0026orderId\u003dxxxxxx\u0026referenceId\u003dxxxxxx\u0026transactionId\u003dxxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow.\n\nDefault: none; only exists if explicitly set."
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
      "example": {
        "request_url": "/v2/locations/LOCATION_ID/checkouts",
        "request_body": {
          "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad6",
          "order": {
            "reference_id": "reference_id",
            "line_items": [
              {
                "name": "Printed T Shirt",
                "quantity": "2",
                "base_price_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "name": "7% off previous season item",
                    "percentage": "7"
                  },
                  {
                    "name": "$3 off Customer Discount",
                    "amount_money": {
                      "amount": 300,
                      "currency": "USD"
                    }
                  }
                ]
              },
              {
                "name": "Slim Jeans",
                "quantity": "1",
                "base_price_money": {
                  "amount": 2500,
                  "currency": "USD"
                }
              },
              {
                "name": "Woven Sweater",
                "quantity": "3",
                "base_price_money": {
                  "amount": 3500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "name": "$11 off Customer Discount",
                    "amount_money": {
                      "amount": 1100,
                      "currency": "USD"
                    }
                  }
                ],
                "taxes": [
                  {
                    "name": "Fair Trade Tax",
                    "percentage": "5"
                  }
                ]
              }
            ],
            "discounts": [
              {
                "name": "Father\u0027s day 12% OFF",
                "percentage": "12"
              },
              {
                "name": "Global Sales $55 OFF",
                "amount_money": {
                  "amount": 5500,
                  "currency": "USD"
                }
              }
            ],
            "taxes": [
              {
                "name": "Sales Tax",
                "percentage": "8.5"
              }
            ]
          },
          "ask_for_shipping_address": true,
          "merchant_support_email": "merchant+support@website.com",
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94103",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe"
          },
          "redirect_url": "https://merchant.website.com/order-confirm"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.python",
        "csharp": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.csharp",
        "php": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.php",
        "ruby": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.ruby"
      }
    },
    "CreateCheckoutResponse": {
      "type": "object",
      "properties": {
        "checkout": {
          "$ref": "#/definitions/Checkout",
          "description": "The newly created checkout.\nIf the same request was made with the same idempotency_key, this will be the checkout created with the idempotency_key."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
      "example": {
        "checkout": {
          "id": "CAISEHGimXh-C3RIT4og1a6u1qw",
          "checkout_page_url": "https://connect.squareup.com/v2/checkout?c\u003dCAISEHGimXh-C3RIT4og1a6u1qw\u0026l\u003dCYTKRM7R7JMV8",
          "ask_for_shipping_address": true,
          "merchant_support_email": "merchant+support@website.com",
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94103",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe"
          },
          "redirect_url": "https://merchant.website.com/order-confirm",
          "order": {
            "location_id": "CYTKRM7R7JMV8",
            "reference_id": "reference_id",
            "line_items": [
              {
                "name": "Printed T Shirt",
                "quantity": "2",
                "taxes": [
                  {
                    "name": "Sales Tax",
                    "type": "ADDITIVE",
                    "percentage": "8.5",
                    "applied_money": {
                      "amount": 103,
                      "currency": "USD"
                    }
                  }
                ],
                "discounts": [
                  {
                    "name": "7% off previous season item",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "7",
                    "applied_money": {
                      "amount": 210,
                      "currency": "USD"
                    },
                    "scope": "LINE_ITEM"
                  },
                  {
                    "name": "Father\u0027s day 12% OFF",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "12",
                    "applied_money": {
                      "amount": 335,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  },
                  {
                    "name": "$3 off Customer Discount",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "scope": "LINE_ITEM"
                  },
                  {
                    "name": "Global Sales $55 OFF",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 949,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  }
                ],
                "base_price_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 103,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 1794,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1309,
                  "currency": "USD"
                }
              },
              {
                "name": "Slim Jeans",
                "quantity": "1",
                "taxes": [
                  {
                    "name": "Sales Tax",
                    "type": "ADDITIVE",
                    "percentage": "8.5",
                    "applied_money": {
                      "amount": 105,
                      "currency": "USD"
                    }
                  }
                ],
                "discounts": [
                  {
                    "name": "Father\u0027s day 12% OFF",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "12",
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  },
                  {
                    "name": "Global Sales $55 OFF",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 968,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  }
                ],
                "base_price_money": {
                  "amount": 2500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 105,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 1268,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1337,
                  "currency": "USD"
                }
              },
              {
                "name": "Wooven Sweater",
                "quantity": "3",
                "taxes": [
                  {
                    "name": "Fair Trade Tax",
                    "type": "ADDITIVE",
                    "percentage": "5",
                    "applied_money": {
                      "amount": 228,
                      "currency": "USD"
                    }
                  },
                  {
                    "name": "Sales Tax",
                    "type": "ADDITIVE",
                    "percentage": "8.5",
                    "applied_money": {
                      "amount": 387,
                      "currency": "USD"
                    }
                  }
                ],
                "discounts": [
                  {
                    "name": "Father\u0027s day 12% OFF",
                    "type": "FIXED_PERCENTAGE",
                    "percentage": "12",
                    "applied_money": {
                      "amount": 1260,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  },
                  {
                    "name": "$11 off Customer Discount",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 1100,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 1100,
                      "currency": "USD"
                    },
                    "scope": "LINE_ITEM"
                  },
                  {
                    "name": "Global Sales $55 OFF",
                    "type": "FIXED_AMOUNT",
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 3583,
                      "currency": "USD"
                    },
                    "scope": "ORDER"
                  }
                ],
                "base_price_money": {
                  "amount": 3500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 615,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 5943,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 5172,
                  "currency": "USD"
                }
              }
            ],
            "total_money": {
              "amount": 7818,
              "currency": "USD"
            },
            "total_tax_money": {
              "amount": 823,
              "currency": "USD"
            },
            "total_discount_money": {
              "amount": 9005,
              "currency": "USD"
            }
          },
          "created_at": "2017-06-16T22:25:35Z"
        }
      }
    },
    "CreateCustomerCardRequest": {
      "type": "object",
      "required": [
        "card_nonce"
      ],
      "properties": {
        "card_nonce": {
          "type": "string",
          "description": "A card nonce representing the credit card to link to the customer.\n\nCard nonces are generated by the `SqPaymentForm` that buyers enter\ntheir card information into. See\n[Embedding the payment form](/articles/adding-payment-form/) for\nmore information."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "Address information for the card on file. Only the `postal_code`\nfield is required for payments in the US and Canada."
        },
        "cardholder_name": {
          "type": "string",
          "description": "The cardholder\u0027s name."
        }
      },
      "description": "Defines the fields that are included in the request body of a request\nto the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.",
      "example": {
        "request_url": "/v2/CUSTOMER_ID",
        "request_body": {
          "card_nonce": "YOUR_CARD_NONCE",
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "cardholder_name": "Amelia Earhart"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.python",
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.csharp",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.php",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.ruby"
      }
    },
    "CreateCustomerCardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The created card on file."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.\n\nOne of `errors` or `card` is present in a given response (never both).",
      "example": {
        "card": {
          "id": "icard-card_id",
          "card_brand": "VISA",
          "last_4": "1111",
          "exp_month": 11,
          "exp_year": 2018,
          "cardholder_name": "Amelia Earhart",
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.python",
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.csharp",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.php",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.ruby"
      }
    },
    "CreateCustomerRequest": {
      "type": "object",
      "properties": {
        "given_name": {
          "type": "string",
          "description": "The customer\u0027s given (i.e., first) name."
        },
        "family_name": {
          "type": "string",
          "description": "The customer\u0027s family (i.e., last) name."
        },
        "company_name": {
          "type": "string",
          "description": "The name of the customer\u0027s company."
        },
        "nickname": {
          "type": "string",
          "description": "A nickname for the customer."
        },
        "email_address": {
          "type": "string",
          "description": "The customer\u0027s email address."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer\u0027s physical address."
        },
        "phone_number": {
          "type": "string",
          "description": "The customer\u0027s phone number."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional second ID you can set to associate the customer with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "An optional note to associate with the customer."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n[CreateCustomer](#endpoint-createcustomer) endpoint.",
      "example": {
        "request_url": "/v2/customers",
        "request_body": {
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomer/CreateCustomerRequest.python",
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerRequest.csharp",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerRequest.php",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerRequest.ruby"
      }
    },
    "CreateCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The created customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomer](#endpoint-createcustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-23T20:21:54.859Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomer/CreateCustomerResponse.python",
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerResponse.csharp",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerResponse.php",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerResponse.ruby"
      }
    },
    "CreateOrderRequest": {
      "type": "object",
      "required": [
        "line_items"
      ],
      "properties": {
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "An optional ID you can associate with the order for your own\npurposes (such as to associate the order with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters."
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestLineItem"
          },
          "description": "The line items to associate with this order.\n\nEach line item represents a different product (or a custom monetary amount)\nto include in a purchase."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestTax"
          },
          "description": "The taxes include the custom taxes."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestDiscount"
          },
          "description": "The discounts include the custom discounts ."
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint."
    },
    "CreateOrderRequestDiscount": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the discount, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0"
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The monetary amount of the discount."
        }
      },
      "description": "Represents a discount that to either a single line item or an entire order."
    },
    "CreateOrderRequestLineItem": {
      "type": "object",
      "required": [
        "quantity"
      ],
      "properties": {
        "name": {
          "maxLength": 500,
          "type": "string",
          "description": "The name of the line item. This value cannot exceed 500 characters."
        },
        "quantity": {
          "minLength": 1,
          "type": "string",
          "description": "The quantity to purchase, as a string representation of a number.\nCurrently, only integer values are supported."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item\u0027s associated\nvariation. If a line item represents a Custom Amount instead of a\nparticular product, this field indicates that amount."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestTax"
          },
          "description": "The taxes include the custom taxes."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestDiscount"
          },
          "description": "The discounts include the custom discounts."
        }
      },
      "description": "Represents a line item to include in an order. Each line item describes\na different product to purchase, with its own quantity and price details."
    },
    "CreateOrderRequestTax": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The tax\u0027s name."
        },
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Indicates the calculation method used to apply the line item tax.\n\nDefault: `ADDITIVE`; See [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0"
        }
      },
      "description": "Represents a tax that applies to either a single line item or an entire order."
    },
    "CreateRefundRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "tender_id",
        "amount_money"
      ],
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrefund among refunds you\u0027ve created for the tender.\n\nIf you\u0027re unsure whether a particular refund succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about duplicating the refund.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
        },
        "tender_id": {
          "type": "string",
          "description": "The ID of the tender to refund.\n\nA [`Transaction`](#type-transaction) has one or more `tenders` (i.e., methods\nof payment) associated with it, and you refund each tender separately with\nthe Connect API."
        },
        "reason": {
          "type": "string",
          "description": "A description of the reason for the refund.\n\nDefault value: `Refund via API`"
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to refund.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](#workingwithmonetaryamounts) for details.\n\nThis amount cannot exceed the amount that was originally charged to the\ntender that corresponds to `tender_id`."
        }
      },
      "description": "Defines the body parameters that can be included in\na request to the [CreateRefund](#endpoint-createrefund) endpoint.",
      "example": {
        "request_url": "/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/refund",
        "request_body": {
          "idempotency_key": "YOUR_IDEMPOTENCY_KEY",
          "tender_id": "TENDER_ID",
          "reason": "a reason",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateRefund/CreateRefundRequest.python",
        "csharp": "/sdk_samples/CreateRefund/CreateRefundRequest.csharp",
        "php": "/sdk_samples/CreateRefund/CreateRefundRequest.php",
        "ruby": "/sdk_samples/CreateRefund/CreateRefundRequest.ruby"
      }
    },
    "CreateRefundResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "refund": {
          "$ref": "#/definitions/Refund",
          "description": "The created refund."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateRefund](#endpoint-createrefund) endpoint.\n\nOne of `errors` or `refund` is present in a given response (never both).",
      "example": {
        "refund": {
          "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
          "location_id": "18YC4JDH91E1H",
          "transaction_id": "TRANSACTION_ID",
          "tender_id": "TENDER_ID",
          "created_at": "2016-02-12T00:28:18Z",
          "reason": "some reason",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          },
          "status": "PENDING"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateRefund/CreateRefundResponse.python",
        "csharp": "/sdk_samples/CreateRefund/CreateRefundResponse.csharp",
        "php": "/sdk_samples/CreateRefund/CreateRefundResponse.php",
        "ruby": "/sdk_samples/CreateRefund/CreateRefundResponse.ruby"
      }
    },
    "Customer": {
      "type": "object",
      "required": [
        "id",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The customer\u0027s unique ID."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the customer was created, in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the customer was last updated, in RFC 3339 format."
        },
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          },
          "description": "The non-confidential details of the customer\u0027s cards on file."
        },
        "given_name": {
          "type": "string",
          "description": "The customer\u0027s given (i.e., first) name."
        },
        "family_name": {
          "type": "string",
          "description": "The customer\u0027s family (i.e., last) name."
        },
        "nickname": {
          "type": "string",
          "description": "The customer\u0027s nickname."
        },
        "company_name": {
          "type": "string",
          "description": "The name of the customer\u0027s company."
        },
        "email_address": {
          "type": "string",
          "description": "The customer\u0027s email address."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer\u0027s physical address."
        },
        "phone_number": {
          "type": "string",
          "description": "The customer\u0027s phone number."
        },
        "reference_id": {
          "type": "string",
          "description": "A second ID you can set to associate the customer with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "A note to associate with the customer."
        },
        "preferences": {
          "$ref": "#/definitions/CustomerPreferences",
          "description": "The customer\u0027s preferences."
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerGroupInfo"
          },
          "description": "The groups the customer belongs to."
        }
      },
      "description": "Represents one of a business\u0027s customers, which can have one or more\ncards on file associated with it."
    },
    "CustomerGroupInfo": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the customer group."
        },
        "name": {
          "type": "string",
          "description": "The name of the customer group."
        }
      },
      "description": "Contains some brief information about a customer group with its identifier included."
    },
    "CustomerPreferences": {
      "type": "object",
      "properties": {
        "email_unsubscribed": {
          "type": "boolean",
          "description": "The customer has unsubscribed from receiving marketing campaign emails."
        }
      },
      "description": "Represents a particular customer\u0027s preferences."
    },
    "DeleteCatalogObjectRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/object/7SB3ZQYJ5GDMVFL7JK46JCHT"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.python",
        "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.csharp",
        "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.php",
        "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.ruby"
      }
    },
    "DeleteCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "deleted_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request.\nMultiple IDs may be returned when associated objects are also deleted, for example\na [CatalogItemVariation](#type-catalogitemvariation) will be deleted (and its ID included in this field)\nwhen its parent [CatalogItem](#type-catalogitem) is deleted."
        },
        "deleted_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g.,\n\"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "example": {
        "deleted_object_ids": [
          "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "KQLFFHA6K6J3YQAQAWDQAL57"
        ],
        "deleted_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.python",
        "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.csharp",
        "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.php",
        "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.ruby"
      }
    },
    "DeleteCustomerCardRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers/CUSTOMER_ID"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.python",
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.csharp",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.php",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.ruby"
      }
    },
    "DeleteCustomerCardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomerCard](#endpoint-deletecustomercard) endpoint.",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.python",
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.csharp",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.php",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.ruby"
      }
    },
    "DeleteCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers/CUSTOMER_ID"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.python",
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.csharp",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.php",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.ruby"
      }
    },
    "DeleteCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomer](#endpoint-deletecustomer) endpoint.",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.python",
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.csharp",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.php",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.ruby"
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "category",
        "code"
      ],
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "API_ERROR",
            "AUTHENTICATION_ERROR",
            "INVALID_REQUEST_ERROR",
            "RATE_LIMIT_ERROR",
            "PAYMENT_METHOD_ERROR",
            "REFUND_ERROR"
          ],
          "description": "The error\u0027s high-level category. See [ErrorCategory](#type-errorcategory)\nfor possible values."
        },
        "code": {
          "type": "string",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "UNAUTHORIZED",
            "ACCESS_TOKEN_EXPIRED",
            "ACCESS_TOKEN_REVOKED",
            "FORBIDDEN",
            "INSUFFICIENT_SCOPES",
            "APPLICATION_DISABLED",
            "V1_APPLICATION",
            "V1_ACCESS_TOKEN",
            "CARD_PROCESSING_NOT_ENABLED",
            "BAD_REQUEST",
            "MISSING_REQUIRED_PARAMETER",
            "INCORRECT_TYPE",
            "INVALID_TIME",
            "INVALID_TIME_RANGE",
            "INVALID_VALUE",
            "INVALID_CURSOR",
            "UNKNOWN_QUERY_PARAMETER",
            "CONFLICTING_PARAMETERS",
            "EXPECTED_JSON_BODY",
            "INVALID_SORT_ORDER",
            "VALUE_REGEX_MISMATCH",
            "VALUE_TOO_SHORT",
            "VALUE_TOO_LONG",
            "VALUE_TOO_LOW",
            "VALUE_TOO_HIGH",
            "VALUE_EMPTY",
            "ARRAY_EMPTY",
            "EXPECTED_BOOLEAN",
            "EXPECTED_INTEGER",
            "EXPECTED_FLOAT",
            "EXPECTED_STRING",
            "EXPECTED_OBJECT",
            "EXPECTED_ARRAY",
            "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
            "INVALID_ARRAY_VALUE",
            "INVALID_ENUM_VALUE",
            "INVALID_CONTENT_TYPE",
            "INVALID_FORM_VALUE",
            "ONE_INSTRUMENT_EXPECTED",
            "NO_FIELDS_SET",
            "CARD_EXPIRED",
            "INVALID_EXPIRATION",
            "INVALID_EXPIRATION_YEAR",
            "INVALID_EXPIRATION_DATE",
            "UNSUPPORTED_CARD_BRAND",
            "INVALID_CARD",
            "DELAYED_TRANSACTION_EXPIRED",
            "DELAYED_TRANSACTION_CANCELED",
            "DELAYED_TRANSACTION_CAPTURED",
            "DELAYED_TRANSACTION_FAILED",
            "CARD_TOKEN_EXPIRED",
            "CARD_TOKEN_USED",
            "AMOUNT_TOO_HIGH",
            "UNSUPPORTED_INSTRUMENT_TYPE",
            "REFUND_AMOUNT_INVALID",
            "REFUND_ALREADY_PENDING",
            "PAYMENT_NOT_REFUNDABLE",
            "INVALID_CARD_DATA",
            "IDEMPOTENCY_KEY_REUSED",
            "UNEXPECTED_VALUE",
            "SANDBOX_NOT_SUPPORTED",
            "INVALID_EMAIL_ADDRESS",
            "CHECKOUT_EXPIRED",
            "CARD_DECLINED",
            "VERIFY_CVV_FAILURE",
            "VERIFY_AVS_FAILURE",
            "CARD_DECLINED_CALL_ISSUER",
            "NOT_FOUND",
            "REQUEST_TIMEOUT",
            "CONFLICT",
            "REQUEST_ENTITY_TOO_LARGE",
            "UNSUPPORTED_MEDIA_TYPE",
            "RATE_LIMITED",
            "NOT_IMPLEMENTED",
            "SERVICE_UNAVAILABLE"
          ],
          "description": "The error\u0027s specific code. See [ErrorCode](#type-errorcode) for possible\nvalues"
        },
        "detail": {
          "type": "string",
          "description": "A human-readable description of the error for debugging purposes."
        },
        "field": {
          "type": "string",
          "description": "The name of the field provided in the original request that the error\npertains to, if any."
        }
      },
      "description": "Represents an error encountered during a request to the Connect API.\n\nSee [Handling errors](#handlingerrors) for more information."
    },
    "ItemVariationLocationOverrides": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "The ID of the [location][#type-location]."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The price of the [CatalogItemVariation](#type-catalogitemvariation) at the given [location][#type-location], or blank for variable pricing."
        },
        "pricing_type": {
          "type": "string",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "description": "The pricing type (fixed or variable) for the [CatalogItemVariation](#type-catalogitemvariation) at the given [location][#type-location].\nSee [CatalogPricingType](#type-catalogpricingtype) for all possible values."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If `true`, inventory tracking is active for the [CatalogItemVariation](#type-catalogitemvariation) at this [location][#type-location]."
        },
        "inventory_alert_type": {
          "type": "string",
          "enum": [
            "NONE",
            "LOW_QUANTITY"
          ],
          "description": "Indicates whether the [CatalogItemVariation](#type-catalogitemvariation) displays an alert when its inventory\nquantity is less than or equal to its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype)\nfor all possible values."
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "format": "int64",
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer."
        }
      },
      "description": "Price and inventory alerting overrides for a [CatalogItemVariation](#type-catalogitemvariation) at a specific [location][#type-location]."
    },
    "ListCatalogRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Paginating results](#paginatingresults) for more information."
        },
        "types": {
          "type": "string",
          "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/list?types\u003dcategory,tax"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.python",
        "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.csharp",
        "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.php",
        "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.ruby"
      }
    },
    "ListCatalogResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Paginating results](#paginatingresults) for more information."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The [CatalogObject](#type-catalogobject)s returned."
        }
      },
      "description": "",
      "example": {
        "objects": [
          {
            "type": "CATEGORY",
            "id": "5ZYQZZ2IECPVJ2IJ5KQPRDC3",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "L5R47DGBZOOVKCAFIXC56AEN",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.python",
        "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.csharp",
        "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.php",
        "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.ruby"
      }
    },
    "ListCustomersRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the query parameters that can be provided in a request to the\n[ListCustomers](#endpoint-listcustomers) endpoint.",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListCustomers/ListCustomersRequest.python",
        "csharp": "/sdk_samples/ListCustomers/ListCustomersRequest.csharp",
        "php": "/sdk_samples/ListCustomers/ListCustomersRequest.php",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersRequest.ruby"
      }
    },
    "ListCustomersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          },
          "description": "An array of `Customer` objects that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint. This value is present only if the request\nsucceeded and additional results are available.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListCustomers](#endpoint-listcustomers) endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
      "example": {
        "customers": [
          {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2016-03-23T20:21:54.859Z",
            "updated_at": "2016-03-23T20:21:55Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID",
            "note": "a customer",
            "groups": [
              {
                "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
                "name": "Aviation Enthusiasts"
              }
            ]
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListCustomers/ListCustomersResponse.python",
        "csharp": "/sdk_samples/ListCustomers/ListCustomersResponse.csharp",
        "php": "/sdk_samples/ListCustomers/ListCustomersResponse.php",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersResponse.ruby"
      }
    },
    "ListLocationsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListLocations/ListLocationsRequest.python",
        "csharp": "/sdk_samples/ListLocations/ListLocationsRequest.csharp",
        "php": "/sdk_samples/ListLocations/ListLocationsRequest.php",
        "ruby": "/sdk_samples/ListLocations/ListLocationsRequest.ruby"
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "description": "The business\u0027s locations."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListLocations](#endpoint-listlocations) endpoint.\n\nOne of `errors` or `locations` is present in a given response (never both).",
      "example": {
        "locations": [
          {
            "id": "18YC4JDH91E1H",
            "name": "your location name",
            "address": {
              "address_line_1": "123 Main St",
              "locality": "San Francisco",
              "administrative_district_level_1": "CA",
              "postal_code": "94114",
              "country": "US"
            },
            "timezone": "America/Los_Angeles",
            "capabilities": [
              "CREDIT_CARD_PROCESSING"
            ]
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListLocations/ListLocationsResponse.python",
        "csharp": "/sdk_samples/ListLocations/ListLocationsResponse.csharp",
        "php": "/sdk_samples/ListLocations/ListLocationsResponse.php",
        "ruby": "/sdk_samples/ListLocations/ListLocationsResponse.ruby"
      }
    },
    "ListRefundsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/refunds?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListRefunds/ListRefundsRequest.python",
        "csharp": "/sdk_samples/ListRefunds/ListRefundsRequest.csharp",
        "php": "/sdk_samples/ListRefunds/ListRefundsRequest.php",
        "ruby": "/sdk_samples/ListRefunds/ListRefundsRequest.ruby"
      }
    },
    "ListRefundsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "description": "An array of refunds that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both).",
      "example": {
        "refunds": [
          {
            "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
            "location_id": "18YC4JDH91E1H",
            "transaction_id": "TRANSACTION_ID",
            "tender_id": "TENDER_ID",
            "created_at": "2016-02-12T00:28:18Z",
            "reason": "some reason",
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            },
            "status": "APPROVED"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListRefunds/ListRefundsResponse.python",
        "csharp": "/sdk_samples/ListRefunds/ListRefundsResponse.csharp",
        "php": "/sdk_samples/ListRefunds/ListRefundsResponse.php",
        "ruby": "/sdk_samples/ListRefunds/ListRefundsResponse.ruby"
      }
    },
    "ListTransactionsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "enum": [
            "DESC",
            "ASC"
          ],
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListTransactions/ListTransactionsRequest.python",
        "csharp": "/sdk_samples/ListTransactions/ListTransactionsRequest.csharp",
        "php": "/sdk_samples/ListTransactions/ListTransactionsRequest.php",
        "ruby": "/sdk_samples/ListTransactions/ListTransactionsRequest.ruby"
      }
    },
    "ListTransactionsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "description": "An array of transactions that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.\n\nOne of `errors` or `transactions` is present in a given response (never both).",
      "example": {
        "transactions": [
          {
            "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "location_id": "18YC4JDH91E1H",
            "created_at": "2016-03-10T22:57:56Z",
            "tenders": [
              {
                "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "created_at": "2016-03-10T22:57:56Z",
                "note": "some optional note",
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "type": "CARD",
                "card_details": {
                  "status": "CAPTURED",
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111"
                  },
                  "entry_method": "KEYED"
                }
              }
            ],
            "refunds": [
              {
                "id": "7a5RcVI0CxbOcJ2wMOkE",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "created_at": "2016-03-10T22:59:20Z",
                "reason": "some reason why",
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "status": "APPROVED",
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                }
              }
            ],
            "reference_id": "some optional reference id",
            "product": "EXTERNAL_API"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListTransactions/ListTransactionsResponse.python",
        "csharp": "/sdk_samples/ListTransactions/ListTransactionsResponse.csharp",
        "php": "/sdk_samples/ListTransactions/ListTransactionsResponse.php",
        "ruby": "/sdk_samples/ListTransactions/ListTransactionsResponse.ruby"
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The location\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The location\u0027s name."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The location\u0027s physical address."
        },
        "timezone": {
          "type": "string",
          "description": "The [IANA Timezone Database](https://www.iana.org/time-zones)\nidentifier for the location\u0027s timezone."
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CREDIT_CARD_PROCESSING"
            ]
          },
          "description": "Indicates which Square features are enabled for the location.\n\nSee [LocationCapability](#type-locationcapability) for possible values."
        }
      },
      "description": "Represents one of a business\u0027s locations."
    },
    "Money": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the\ncurrency indicated by `currency`. For example, when `currency` is `USD`,\n`amount` is in cents."
        },
        "currency": {
          "type": "string",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "USS",
            "UYI",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMK",
            "ZMW",
            "BTC"
          ],
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](#type-currency) for possible values."
        }
      },
      "description": "Represents an amount of money.\n\n__Important:__ Unlike version 1 of the Connect API, __all monetary amounts\nreturned by v2 endpoints are positive.__ (In v1, monetary amounts are negative\nif they represent money being paid _by_ a merchant, instead of money being\npaid _to_ a merchant.)"
    },
    "Order": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "The ID of the merchant location this order is associated with."
        },
        "reference_id": {
          "type": "string",
          "description": "A client specified identifier to associate an entity in another system\nwith this order."
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItem"
          },
          "description": "The line items included in the order. Every order has at least one\nline item."
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for the order."
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the order."
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the order."
        }
      },
      "description": "Contains all information related to a single order to process with Square,\nincluding line items that specify the products to purchase"
    },
    "OrderLineItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the line item."
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the product to purchase. Currently, this string must\nhave an integer value."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemTax"
          },
          "description": "The taxes applied to this line item."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemDiscount"
          },
          "description": "The discounts applied to this line item."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item."
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the line item."
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the line item."
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for this line item."
        }
      },
      "description": "Represents a line item in an order. Each line item describes a different\nproduct to purchase, with its own quantity and price details."
    },
    "OrderLineItemDiscount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "FIXED_PERCENTAGE",
            "FIXED_AMOUNT",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "description": "The type of the discount. If it is created by API, it would be either `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\n\nVARIABLE_* is not supported in API because the order is created at the time of sale and either\npercentage or amount has to be specified.\n\nSee [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\nThe percentage won\u0027t be set for an amount-based discount."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total monetary amount of the applicable discount.\nIf it is at order level, it is the value of the order level discount.\nIf it is at line item level, it is the value of the line item level discount.\n\nThe amount_money won\u0027t be set for a percentage-based discount."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items."
        },
        "scope": {
          "type": "string",
          "enum": [
            "LINE_ITEM",
            "ORDER"
          ],
          "description": "Indicates the level at which the discount applies.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values."
        }
      },
      "description": "Represents a discount that applies to one or more line items in an\norder.\n\nFixed-amount, order-level discounts are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to that item’s contribution to the order subtotal."
    },
    "OrderLineItemTax": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The tax\u0027s name."
        },
        "type": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Indicates the calculation method used to apply the tax.\n\nSee [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values."
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the money applied by the tax in an order."
        }
      },
      "description": "Represents a tax that applies to one or more line items in an order."
    },
    "Refund": {
      "type": "object",
      "required": [
        "id",
        "location_id",
        "transaction_id",
        "tender_id",
        "reason",
        "amount_money",
        "status"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The refund\u0027s unique ID."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the refund\u0027s associated location."
        },
        "transaction_id": {
          "type": "string",
          "description": "The ID of the transaction that the refunded tender is part of."
        },
        "tender_id": {
          "type": "string",
          "description": "The ID of the refunded tender."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the refund was created, in RFC 3339 format."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund being issued."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money refunded to the buyer."
        },
        "status": {
          "type": "string",
          "enum": [
            "PENDING",
            "APPROVED",
            "REJECTED",
            "FAILED"
          ],
          "description": "The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,\nor `FAILED`)."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of Square processing fee money refunded to the *merchant*."
        }
      },
      "description": "Represents a refund processed for a Square transaction."
    },
    "RetrieveCatalogObjectRequest": {
      "type": "object",
      "properties": {
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`"
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/object/W62UWFY35CWMYGVWK6TWJDNI?include_related_objects\u003dtrue"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.python",
        "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.csharp",
        "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.php",
        "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.ruby"
      }
    },
    "RetrieveCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The [CatalogObject](#type-catalogobject)s returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `object` field."
        }
      },
      "description": "",
      "example": {
        "object": {
          "type": "ITEM",
          "id": "W62UWFY35CWMYGVWK6TWJDNI",
          "updated_at": "2016-11-16T22:25:24.878Z",
          "version": 1479335124878,
          "is_deleted": false,
          "present_at_all_locations": true,
          "item_data": {
            "name": "Tea",
            "description": "Hot Leaf Juice",
            "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "tax_ids": [
              "HURXQOOAIC4IZSI2BEXQRYFY"
            ],
            "variations": [
              {
                "type": "ITEM_VARIATION",
                "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                "updated_at": "2016-11-16T22:25:24.878Z",
                "version": 1479335124878,
                "is_deleted": false,
                "present_at_all_locations": true,
                "item_variation_data": {
                  "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                  "name": "Mug",
                  "ordinal": 0,
                  "pricing_type": "FIXED_PRICING",
                  "price_money": {
                    "amount": 150,
                    "currency": "USD"
                  }
                }
              }
            ]
          }
        },
        "related_objects": [
          {
            "type": "CATEGORY",
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.python",
        "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.csharp",
        "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.php",
        "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.ruby"
      }
    },
    "RetrieveCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers/CUSTOMER_ID"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.python",
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.csharp",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.php",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.ruby"
      }
    },
    "RetrieveCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The requested customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveCustomer](#endpoint-retrievecustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-23T20:21:54.859Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer",
          "groups": [
            {
              "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
              "name": "Aviation Enthusiasts"
            }
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.python",
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.csharp",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.php",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.ruby"
      }
    },
    "RetrieveTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.python",
        "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.csharp",
        "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.php",
        "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.ruby"
      }
    },
    "RetrieveTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The requested transaction."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveTransaction](#endpont-retrievetransaction) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "example": {
        "transaction": {
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "created_at": "2016-03-10T22:57:56Z",
          "tenders": [
            {
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "created_at": "2016-03-10T22:57:56Z",
              "note": "some optional note",
              "amount_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "processing_fee_money": {
                "amount": 138,
                "currency": "USD"
              },
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED"
              }
            }
          ],
          "reference_id": "some optional reference id",
          "product": "EXTERNAL_API"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.python",
        "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.csharp",
        "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.php",
        "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.ruby"
      }
    },
    "SearchCatalogObjectsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Paginating results](#paginatingresults) for more information."
        },
        "object_types": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ITEM",
              "CATEGORY",
              "ITEM_VARIATION",
              "TAX",
              "DISCOUNT",
              "MODIFIER_LIST",
              "MODIFIER"
            ]
          },
          "description": "The desired set of object types to apper in the search results. The legal values are taken from the\n[CatalogObjectType](#type-catalogobjecttype) enumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`,\n`\"DISCOUNT\"`, `\"TAX\"`, `\"MODIFIER\"`, or `\"MODIFIER_LIST\"`."
        },
        "include_deleted_objects": {
          "type": "boolean",
          "description": "If `true`, deleted objects will be included in the results. Deleted objects will have their\n`is_deleted` field set to `true`."
        },
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf a [CatalogItem](#type-catalogitem) is returned in the object field of the response,\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be included in the `related_objects` field of the\nresponse.\n\nIf a [CatalogItemVariation](#type-catalogitemvariation) is returned in the object field of the\nresponse, its parent [CatalogItem](#type-catalogitem) will be included in the `related_objects` field of\nthe response."
        },
        "begin_time": {
          "type": "string",
          "description": "Return only objects that have been modified after this [timestamp](#workingwithdates)\n(in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"). The timestamp is exclusive -\nobjects whose timestamp is equal to `begin_time` will not be included in the response."
        },
        "query": {
          "$ref": "#/definitions/CatalogQuery",
          "description": "A query to be used to filter or sort the results. If no query is specified, the entire catalog will be returned."
        },
        "limit": {
          "type": "integer",
          "description": "A limit on the number of results to be returned in a single page. The limit is advisory -\nthe implementation may return more or fewer results. If the supplied limit is negative, zero, or\nis higher than the maximum limit of 1,000, it will be ignored."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/search",
        "request_body": {
          "object_types": [
            "ITEM"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.php",
        "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.ruby"
      }
    },
    "SearchCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Paginating results](#paginatingresults) for more information."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The [CatalogObject](#type-catalogobject)s returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the objects in the `objects` field."
        }
      },
      "description": "",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "W62UWFY35CWMYGVWK6TWJDNI",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ITEM",
            "id": "AA27W3M2GGTF3H6AVPNB77CK",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Coffee",
              "description": "Hot Bean Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "LBTYIHNHU52WOIHWT7SNRIYH",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Regular",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "PKYIC7HGGKW5CYVSCVDEIMHY",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Large",
                    "ordinal": 1,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.php",
        "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.ruby"
      }
    },
    "Tender": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The tender\u0027s unique ID."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the transaction\u0027s associated location."
        },
        "transaction_id": {
          "type": "string",
          "description": "The ID of the tender\u0027s associated transaction."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the tender was created, in RFC 3339 format."
        },
        "note": {
          "type": "string",
          "description": "An optional note associated with the tender at the time of payment."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the tender."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of any Square processing fees applied to the tender.\n\nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds."
        },
        "customer_id": {
          "type": "string",
          "description": "If the tender is associated with a customer or represents a customer\u0027s card on file,\nthis is the ID of the associated customer."
        },
        "type": {
          "type": "string",
          "enum": [
            "CARD",
            "CASH",
            "THIRD_PARTY_CARD",
            "SQUARE_GIFT_CARD",
            "NO_SALE",
            "OTHER"
          ],
          "description": "The type of tender, such as `CARD` or `CASH`."
        },
        "card_details": {
          "$ref": "#/definitions/TenderCardDetails",
          "description": "The details of the card tender.\n\nThis value is present only if the value of `type` is `CARD`."
        },
        "cash_details": {
          "$ref": "#/definitions/TenderCashDetails",
          "description": "The details of the cash tender.\n\nThis value is present only if the value of `type` is `CASH`."
        }
      },
      "description": "Represents a tender (i.e., a method of payment) used in a Square transaction."
    },
    "TenderCardDetails": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "AUTHORIZED",
            "CAPTURED",
            "VOIDED",
            "FAILED"
          ],
          "description": "The credit card payment\u0027s current state (such as `AUTHORIZED` or\n`CAPTURED`). See [TenderCardDetailsStatus](#type-tendercarddetailsstatus)\nfor possible values."
        },
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The credit card\u0027s non-confidential details."
        },
        "entry_method": {
          "type": "string",
          "enum": [
            "SWIPED",
            "KEYED",
            "EMV",
            "ON_FILE",
            "CONTACTLESS"
          ],
          "description": "The method used to enter the card\u0027s details for the transaction."
        }
      },
      "description": "Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`"
    },
    "TenderCashDetails": {
      "type": "object",
      "properties": {
        "buyer_tendered_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of cash provided by the buyer, before change is given."
        },
        "change_back_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of change returned to the buyer."
        }
      },
      "description": "Represents the details of a tender with `type` `CASH`."
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The transaction\u0027s unique ID, issued by Square payments servers."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the transaction\u0027s associated location."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the transaction was created, in RFC 3339 format."
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tender"
          },
          "description": "The tenders used to pay in the transaction."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "description": "Refunds that have been applied to any tender in the transaction."
        },
        "reference_id": {
          "type": "string",
          "description": "If the transaction was created with the [Charge](#endpoint-charge)\nendpoint, this value is the same as the value provided for the `reference_id`\nparameter in the request to that endpoint. Otherwise, it is not set."
        },
        "product": {
          "type": "string",
          "enum": [
            "REGISTER",
            "EXTERNAL_API",
            "BILLING",
            "APPOINTMENTS",
            "INVOICES",
            "ONLINE_STORE",
            "PAYROLL",
            "OTHER"
          ],
          "description": "The Square product that processed the transaction."
        },
        "client_id": {
          "type": "string",
          "description": "If the transaction was created in the Square Point of Sale app, this value\nis the ID generated for the transaction by Square Point of Sale.\n\nThis ID has no relationship to the transaction\u0027s canonical `id`, which is\ngenerated by Square\u0027s backend servers. This value is generated for bookkeeping\npurposes, in case the transaction cannot immediately be completed (for example,\nif the transaction is processed in offline mode).\n\nIt is not currently possible with the Connect API to perform a transaction\nlookup by this value."
        },
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The order associated with this transaction, if any."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided in the request, if any."
        }
      },
      "description": "Represents a transaction processed with Square, either with the\nConnect API or with Square Point of Sale.\n\nThe `tenders` field of this object lists all methods of payment used to pay in\nthe transaction."
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "properties": {
        "given_name": {
          "type": "string",
          "description": "The customer\u0027s given (i.e., first) name."
        },
        "family_name": {
          "type": "string",
          "description": "The customer\u0027s family (i.e., last) name."
        },
        "company_name": {
          "type": "string",
          "description": "The name of the customer\u0027s company."
        },
        "nickname": {
          "type": "string",
          "description": "A nickname for the customer."
        },
        "email_address": {
          "type": "string",
          "description": "The customer\u0027s email address."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer\u0027s physical address."
        },
        "phone_number": {
          "type": "string",
          "description": "The customer\u0027s phone number."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional second ID you can set to associate the customer with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "An optional note to associate with the customer."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n[UpdateCustomer](#endpoint-updatecustomer) endpoint.",
      "example": {
        "request_url": "/v2/customers/CUSTOMER_ID",
        "request_body": {
          "phone_number": "",
          "email_address": "New.Amelia.Earhart@example.com",
          "note": "updated customer note"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.python",
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.csharp",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.php",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.ruby"
      }
    },
    "UpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The updated customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [UpdateCustomer](#endpoint-updatecustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-25T20:21:55Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "New.Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "updated customer note",
          "groups": [
            {
              "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
              "name": "Aviation Enthusiasts"
            }
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.python",
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.csharp",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.php",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.ruby"
      }
    },
    "UpdateItemModifierListsRequest": {
      "type": "object",
      "required": [
        "item_ids"
      ],
      "properties": {
        "item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The [CatalogItem](#type-catalogitem)s whose [CatalogModifierList](#type-catalogmodifierlist)s are being updated."
        },
        "modifier_lists_to_enable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to enable for the [CatalogItem](#type-catalogitem)."
        },
        "modifier_lists_to_disable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to disable for the [CatalogItem](#type-catalogitem)."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/update-item-taxes",
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "modifier_lists_to_enable": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "modifier_lists_to_disable": [
            "7WRC16CJZDVLSNDQ35PP6YAD"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.php",
        "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.ruby"
      }
    },
    "UpdateItemModifierListsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.php",
        "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.ruby"
      }
    },
    "UpdateItemTaxesRequest": {
      "type": "object",
      "required": [
        "item_ids"
      ],
      "properties": {
        "item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The [CatalogItem](#type-catalogitem)s whose enabled/disabled [CatalogTax](#type-catalogtax)es are being updated."
        },
        "taxes_to_enable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to enable for the [CatalogItem](#type-catalogitem)."
        },
        "taxes_to_disable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to disable for the [CatalogItem](#type-catalogitem)."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/update-item-taxes",
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "taxes_to_enable": [
            "4WRCNHCJZDVLSNDQ35PP6YAD"
          ],
          "taxes_to_disable": [
            "AQCEGCEBBQONINDOHRGZISEX"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.php",
        "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.ruby"
      }
    },
    "UpdateItemTaxesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.php",
        "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.ruby"
      }
    },
    "UpsertCatalogObjectRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "object"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you\u0027re unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "A [CatalogObject](#type-catalogobject) to be created or updated. The object\u0027s `is_deleted` field must not\nbe set to `true`. When creating a new object, the object\u0027s ID must either start with a `#` character or be left\nblank. In either case it will be replaced with a server-generated ID."
        }
      },
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog",
        "request_body": {
          "idempotency_key": "af3d1afc-7212-4300-b463-0bfc5314a5ae",
          "object": {
            "type": "ITEM",
            "id": "#Cocoa",
            "item_data": {
              "name": "Cocoa",
              "description": "Hot chocolate",
              "abbreviation": "Ch"
            }
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.python",
        "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.csharp",
        "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.php",
        "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.ruby"
      }
    },
    "UpsertCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of [Error](#type-error)s encountered."
        },
        "catalog_object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The created [CatalogObject](#type-catalogobject)."
        },
        "id_mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "description": "The mapping between client and server IDs for this Upsert."
        }
      },
      "description": "",
      "example": {
        "catalog_object": {
          "type": "ITEM",
          "id": "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "updated_at": "2016-11-16T22:32:42.996Z",
          "version": 1479335562996,
          "is_deleted": false,
          "item_data": {
            "name": "Cocoa",
            "description": "Hot chocolate",
            "abbreviation": "Ch"
          }
        },
        "id_mappings": [
          {
            "client_object_id": "#Cocoa",
            "object_id": "7SB3ZQYJ5GDMVFL7JK46JCHT"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.python",
        "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.csharp",
        "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.php",
        "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.ruby"
      }
    },
    "VoidTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/void"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/VoidTransaction/VoidTransactionRequest.python",
        "csharp": "/sdk_samples/VoidTransaction/VoidTransactionRequest.csharp",
        "php": "/sdk_samples/VoidTransaction/VoidTransactionRequest.php",
        "ruby": "/sdk_samples/VoidTransaction/VoidTransactionRequest.ruby"
      }
    },
    "VoidTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/VoidTransaction/VoidTransactionResponse.python",
        "csharp": "/sdk_samples/VoidTransaction/VoidTransactionResponse.csharp",
        "php": "/sdk_samples/VoidTransaction/VoidTransactionResponse.php",
        "ruby": "/sdk_samples/VoidTransaction/VoidTransactionResponse.ruby"
      }
    },
    "v1Money": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a \u0027cent\u0027 concept)."
        },
        "currency_code": {
          "type": "string",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "USS",
            "UYI",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMK",
            "ZMW",
            "BTC"
          ],
          "description": ""
        }
      },
      "description": ""
    },
    "v1PhoneNumber": {
      "type": "object",
      "required": [
        "calling_code",
        "number"
      ],
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-phonenumber"
      },
      "description": "Represents a phone number.",
      "properties": {
        "calling_code": {
          "type": "string",
          "description": "The phone number\u0027s international calling code. For US phone numbers, this value is +1.",
          "readOnly": false
        },
        "number": {
          "type": "string",
          "description": "The phone number.",
          "readOnly": false
        }
      }
    },
    "v1Merchant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The merchant account\u0027s unique identifier."
        },
        "name": {
          "type": "string",
          "description": "The name associated with the merchant account."
        },
        "email": {
          "type": "string",
          "description": "The email address associated with the merchant account."
        },
        "account_type": {
          "type": "string",
          "enum": [
            "LOCATION",
            "BUSINESS"
          ],
          "description": "Indicates whether the merchant account corresponds to a single-location account (LOCATION) or a business account (BUSINESS). This value is almost always LOCATION."
        },
        "account_capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Capabilities that are enabled for the merchant\u0027s Square account. Capabilities that are not listed in this array are not enabled for the account."
        },
        "country_code": {
          "type": "string",
          "description": "The country associated with the merchant account, in ISO 3166-1-alpha-2 format."
        },
        "language_code": {
          "type": "string",
          "description": "The language associated with the merchant account, in BCP 47 format."
        },
        "currency_code": {
          "type": "string",
          "description": "The currency associated with the merchant account, in ISO 4217 format. For example, the currency code for US dollars is USD."
        },
        "business_name": {
          "type": "string",
          "description": "The name of the merchant\u0027s business."
        },
        "business_address": {
          "$ref": "#/definitions/Address",
          "description": "The address of the merchant\u0027s business."
        },
        "business_phone": {
          "$ref": "#/definitions/v1PhoneNumber",
          "description": "The phone number of the merchant\u0027s business."
        },
        "business_type": {
          "type": "string",
          "enum": [
            "ACCOUNTING",
            "APPAREL_AND_ACCESSORY_SHOPS",
            "ART_DEALERS_GALLERIES",
            "ART_DESIGN_AND_PHOTOGRAPHY",
            "BAR_CLUB_LOUNGE",
            "BEAUTY_AND_BARBER_SHOPS",
            "BOOK_STORES",
            "BUSINESS_SERVICES",
            "CATERING",
            "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
            "CHARITIBLE_ORGS",
            "CLEANING_SERVICES",
            "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
            "CONSULTANT",
            "CONTRACTORS",
            "DELIVERY_SERVICES",
            "DENTISTRY",
            "EDUCATION",
            "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
            "FOOD_TRUCK_CART",
            "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
            "FURNITURE_HOME_GOODS",
            "HOTELS_AND_LODGING",
            "INDIVIDUAL_USE",
            "JEWELRY_AND_WATCHES",
            "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
            "LANGUAGE_SCHOOLS",
            "LEGAL_SERVICES",
            "MEDICAL_PRACTITIONERS",
            "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
            "MEMBERSHIP_ORGANIZATIONS",
            "MUSIC_AND_ENTERTAINMENT",
            "OTHER",
            "OUTDOOR_MARKETS",
            "PERSONAL_SERVICES",
            "POLITICAL_ORGANIZATIONS",
            "PROFESSIONAL_SERVICES",
            "REAL_ESTATE",
            "RECREATION_SERVICES",
            "REPAIR_SHOPS_AND_RELATED_SERVICES",
            "RESTAURANTS",
            "RETAIL_SHOPS",
            "SCHOOLS_AND_EDUCATIONAL_SERVICES",
            "SPORTING_GOODS",
            "TAXICABS_AND_LIMOUSINES",
            "TICKET_SALES",
            "TOURISM",
            "TRAVEL_TOURISM",
            "VETERINARY_SERVICES",
            "WEB_DEV_DESIGN"
          ],
          "description": "The type of business operated by the merchant."
        },
        "shipping_address ": {
          "$ref": "#/definitions/Address",
          "description": "The merchant\u0027s shipping address."
        },
        "location_details": {
          "type": "object",
          "properties": {
            "nickname": {
              "type": "string",
              "description": "The nickname assigned to the single-location account by the parent business. This value appears in the parent business\u0027s multi-location dashboard."
            }
          },
          "description": "Additional information for a single-location account specified by its associated business account, if it has one."
        },
        "market_url": {
          "type": "string",
          "description": "The URL of the merchant\u0027s online store."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the **RetrieveBusiness** endpoint."
    },
    "v1Employee": {
      "type": "object",
      "required": [
        "first_name",
        "last_name"
      ],
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-employee"
      },
      "description": "Represents one of a business\u0027s employees.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The employee\u0027s unique ID.",
          "readOnly": true
        },
        "first_name": {
          "type": "string",
          "description": "The employee\u0027s first name."
        },
        "last_name": {
          "type": "string",
          "description": "The employee\u0027s last name."
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ids of the employee\u0027s associated roles. Currently, you can specify only one or zero roles per employee."
        },
        "authorized_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the locations the employee is allowed to clock in at.",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "description": "The employee\u0027s email address."
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "CWhether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard. ",
          "readOnly": true
        },
        "external_id": {
          "type": "string",
          "description": "An ID the merchant can set to associate the employee with an entity in another system.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "description": "The time when the employee entity was created, in ISO 8601 format.",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format.",
          "readOnly": true
        }
      }
    },
    "v1EmployeeRole": {
      "type": "object",
      "required": [
        "name",
        "permissions"
      ],
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-employeerole"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "The role\u0027s unique ID, Can only be set by Square.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The role\u0027s merchant-defined name."
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "REGISTER_ACCESS_SALES_HISTORY",
              "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
              "REGISTER_CHANGE_SETTINGS",
              "REGISTER_EDIT_ITEM",
              "REGISTER_ISSUE_REFUNDS",
              "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
              "REGISTER_VIEW_SUMMARY_REPORTS"
            ]
          },
          "description": "The role\u0027s permissions."
        },
        "is_owner": {
          "type": "boolean",
          "description": "If true, employees with this role have all permissions, regardless of the values indicated in permissions."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created.",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated.",
          "readOnly": true
        }
      }
    },
    "v1Timecard": {
      "type": "object",
      "required": [
        "employee_id"
      ],
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-timecard"
      },
      "description": "Represents a timecard for an employee.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The timecard\u0027s unique ID.",
          "readOnly": true
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee the timecard is associated with."
        },
        "deleted": {
          "type": "boolean",
          "description": "If true, the timecard was deleted by the merchant, and it is no longer valid.",
          "readOnly": true
        },
        "clockin_time": {
          "type": "string",
          "description": "The clock-in time for the timecard, in ISO 8601 format."
        },
        "clockout_time": {
          "type": "string",
          "description": "The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system."
        },
        "clockin_location_id": {
          "type": "string",
          "description": "The ID of the location the employee clocked in from, if any."
        },
        "clockout_location_id": {
          "type": "string",
          "description": "The ID of the location the employee clocked out from. Provide this value only if importing timecard information from another system."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the timecard was created, in ISO 8601 format.",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the timecard was most recently updated, in ISO 8601 format.",
          "readOnly": true
        }
      }
    },
    "v1TimecardEvent": {
      "type": "object",
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-timecardevent"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "The event\u0027s unique ID."
        },
        "event_type": {
          "type": "string",
          "enum": [
            "API_CREATE",
            "API_EDIT",
            "API_DELETE",
            "REGISTER_CLOCKIN",
            "REGISTER_CLOCKOUT",
            "DASHBOARD_SUPERVISOR_CLOSE",
            "DASHBOARD_EDIT",
            "DASHBOARD_DELETE"
          ],
          "description": "The ID of the timecard to list events for."
        },
        "clockin_time": {
          "type": "string",
          "description": "The time the employee clocked in, in ISO 8601 format."
        },
        "clockout_time": {
          "type": "string",
          "description": "The time the employee clocked out, in ISO 8601 format."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the event was created, in ISO 8601 format."
        }
      }
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The device\u0027s Square-issued ID."
        },
        "name": {
          "type": "string",
          "description": "The device\u0027s merchant-specified name."
        }
      }
    },
    "v1CashDrawerEvent": {
      "type": "object",
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-cashdrawerevent"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "The event\u0027s unique ID."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee that created the event."
        },
        "event_type": {
          "type": "string",
          "description": "The type of event that occurred.",
          "enum": [
            "NO_SALE",
            "CASH_TENDER_PAYMENT",
            "OTHER_TENDER_PAYMENT",
            "CASH_TENDER_CANCELED_PAYMENT",
            "OTHER_TENDER_CANCELED_PAYMENT",
            "CASH_TENDER_REFUND",
            "OTHER_TENDER_REFUND",
            "PAID_IN",
            "PAID_OUT"
          ]
        },
        "event_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that was added to or removed from the cash drawer because of the event. This value can be positive (for added money) or negative (for removed money)."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the event occurred, in ISO 8601 format."
        },
        "description": {
          "type": "string",
          "description": "An optional description of the event, entered by the employee that created it."
        }
      }
    },
    "v1CashDrawerShift": {
      "type": "object",
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "The shift\u0027s unique ID."
        },
        "event_type": {
          "type": "string",
          "enum": [
            "OPEN",
            "ENDED",
            "CLOSED"
          ],
          "description": "The shift\u0027s current state."
        },
        "opened_at": {
          "type": "string",
          "description": "The time when the shift began, in ISO 8601 format."
        },
        "ended_at": {
          "type": "boolean",
          "description": "The time when the shift ended, in ISO 8601 format."
        },
        "closed_at": {
          "type": "string",
          "description": "The time when the shift was closed, in ISO 8601 format."
        },
        "employee_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all employees that were logged into Square Register at some point during the cash drawer shift."
        },
        "opening_employee_id": {
          "type": "string",
          "description": "The ID of the employee that started the cash drawer shift."
        },
        "ending_employee_id": {
          "type": "string",
          "description": "The ID of the employee that ended the cash drawer shift."
        },
        "closing_employee_id": {
          "type": "string",
          "description": "The ID of the employee that closed the cash drawer shift by auditing the cash drawer\u0027s contents."
        },
        "description": {
          "type": "string",
          "description": "The time when the timecard was created, in ISO 8601 format."
        },
        "starting_cash_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money in the cash drawer at the start of the shift."
        },
        "cash_payment_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money added to the cash drawer from cash payments."
        },
        "cash_refunds_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money removed from the cash drawer from cash refunds. This value is always negative or zero."
        },
        "cash_paid_in_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money added to the cash drawer for reasons other than cash payments."
        },
        "cash_paid_out_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money removed from the cash drawer for reasons other than cash refunds."
        },
        "expected_cash_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that should be in the cash drawer at the end of the shift, based on the shift\u0027s other money amounts."
        },
        "closed_cash_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money found in the cash drawer at the end of the shift by an auditing employee."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device running Square Register that was connected to the cash drawer."
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CashDrawerEvent"
          },
          "description": "All of the events (payments, refunds, and so on) that involved the cash drawer during the shift."
        }
      }
    },
    "v1Payment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The payment\u0027s unique identifier."
        },
        "merchant_id": {
          "type": "string",
          "description": "The unique identifier of the merchant that took the payment."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the payment was created, in ISO 8601 format."
        },
        "creator_id": {
          "type": "string",
          "description": "The unique identifier of the Square account that took the payment."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device that took the payment."
        },
        "payment_url": {
          "type": "string",
          "description": "The URL of the payment\u0027s detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page."
        },
        "receipt_url": {
          "type": "string",
          "description": "The URL of the receipt for the payment. Note that for split tender payments, this URL corresponds to the receipt for the first tender listed in the payment\u0027s tender field. Each Tender object has its own receipt_url field you can use to get the other receipts associated with a split tender payment."
        },
        "inclusive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The sum of all inclusive taxes associated with the payment."
        },
        "additive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The sum of all additive taxes associated with the payment."
        },
        "tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all taxes applied to the payment. This is always the sum of inclusive_tax_money and additive_tax_money."
        },
        "tip_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all tips applied to the payment."
        },
        "discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the payment."
        },
        "total_collected_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the payment."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all processing fees collected by Square for the payment."
        },
        "net_total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount to be deposited into the merchant\u0027s bank account for the payment."
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all refunds applied to the payment."
        },
        "swedish_rounding_money": {
          "$ref": "#/definitions/v1Money"
        },
        "gross_sales_money": {
          "$ref": "#/definitions/v1Money"
        },
        "net_sales_money": {
          "$ref": "#/definitions/v1Money"
        },
        "inclusive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentTax"
          },
          "description": "All of the inclusive taxes associated with the payment."
        },
        "additive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentTax"
          },
          "description": "All of the additive taxes associated with the payment."
        },
        "tender": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Tender"
          },
          "description": "All of the additive taxes associated with the payment."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Refund"
          },
          "description": "All of the refunds applied to the payment."
        },
        "itemizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentItemization"
          },
          "description": "The items purchased in the payment."
        }
      }
    },
    "v1PaymentItemization": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The item\u0027s name."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the item purchased. This can be a decimal value."
        },
        "itemization_type": {
          "type": "string",
          "enum": [
            "ITEM",
            "CUSTOM_AMOUNT",
            "GIFT_CARD_ACTIVATION",
            "GIFT_CARD_RELOAD",
            "GIFT_CARD_UNKNOWN",
            "OTHER"
          ],
          "description": "The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT"
        },
        "item_detail": {
          "$ref": "#/definitions/v1PaymentItemDetail",
          "description": "Details of the item, including its unique identifier and the identifier of the item variation purchased."
        },
        "notes": {
          "type": "string",
          "description": "Notes entered by the merchant about the item at the time of payment, if any."
        },
        "item_variation_name": {
          "type": "string",
          "description": "The name of the item variation purchased, if any."
        },
        "total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total cost of the item, including all taxes and discounts."
        },
        "single_quantity_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The cost of a single unit of this item."
        },
        "gross_sales_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total cost of the itemization and its modifiers, not including taxes or discounts."
        },
        "discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the itemization. This value is always negative or zero."
        },
        "net_sales_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The sum of gross_sales_money and discount_money."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentTax"
          },
          "description": "All taxes applied to this itemization."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentDiscount"
          },
          "description": "All discounts applied to this itemization."
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PaymentModifier"
          },
          "description": "All modifier options applied to this itemization."
        }
      }
    },
    "v1PaymentModifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The modifier option\u0027s name."
        },
        "applied_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that this modifier option adds to the payment."
        },
        "modifier_option_id": {
          "type": "string",
          "description": "TThe ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID."
        }
      }
    },
    "v1PaymentDiscount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "applied_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that this discount adds to the payment (note that this value is always negative or zero)."
        },
        "discount_id": {
          "type": "string",
          "description": "The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID."
        }
      }
    },
    "v1PaymentItemDetail": {
      "type": "object",
      "properties": {
        "category_name": {
          "type": "string",
          "description": "The name of the item\u0027s merchant-defined category, if any."
        },
        "sku": {
          "type": "number",
          "description": " The item\u0027s merchant-defined SKU, if any."
        },
        "item_id": {
          "type": "string",
          "description": "The unique ID of the item purchased, if any."
        },
        "item_variation_id": {
          "type": "string",
          "description": "The unique ID of the item variation purchased, if any."
        }
      }
    },
    "v1Refund": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ],
          "description": "The type of refund "
        },
        "reason": {
          "type": "string",
          "description": "The merchant-specified reason for the refund."
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money refunded. This amount is always negative."
        },
        "refunded_processing_fee_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of processing fee money refunded."
        },
        "refunded_additive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of additive tax money refunded."
        },
        "refunded_inclusive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of inclusive tax money refunded."
        },
        "refunded_tip_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of tip money refunded."
        },
        "refunded_discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of discount money refunded."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the merchant initiated the refund for Square to process, in ISO 8601 format.."
        },
        "processed_at": {
          "type": "string",
          "description": "The time when Square processed the refund on behalf of the merchant, in ISO 8601 format."
        },
        "payment_id": {
          "type": "string",
          "description": "The Square-issued ID of the payment the refund is applied to."
        },
        "merchant_id": {
          "type": "string",
          "description": ""
        }
      }
    },
    "v1Settlement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The settlement\u0027s unique identifier."
        },
        "status": {
          "type": "string",
          "enum": [
            "FAILED",
            "SENT"
          ],
          "description": "The settlement\u0027s current status."
        },
        "total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money involved in the settlement. A positive amount indicates a deposit, and a negative amount indicates a withdrawal. This amount is never zero."
        },
        "initiated_at": {
          "type": "string",
          "description": "The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format."
        },
        "bank_account_id": {
          "type": "string",
          "description": "The Square-issued unique identifier for the bank account associated with the settlement."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SettlementEntry"
          },
          "description": "The entries included in this settlement."
        }
      }
    },
    "v1SettlementEntry": {
      "type": "object",
      "properties": {
        "payment_id": {
          "type": "string",
          "description": "The settlement\u0027s unique identifier."
        },
        "type": {
          "type": "string",
          "enum": [
            "ADJUSTMENT",
            "BALANCE_CHARGE",
            "CHARGE",
            "FREE_PROCESSING",
            "HOLD_ADJUSTMENT",
            "PAID_SERVICE_FEE",
            "PAID_SERVICE_FEE_REFUND",
            "REDEMPTION_CODE",
            "REFUND",
            "RETURNED_PAYOUT",
            "SQUARE_CAPITAL_ADVANCE",
            "SQUARE_CAPITAL_PAYMENT",
            "SQUARE_CAPITAL_REVERSED_PAYMENT",
            "SUBSCRIPTION_FEE",
            "SUBSCRIPTION_FEE_REFUND",
            "INCENTED_PAYMENT",
            "RETURNED_ACH_ENTRY",
            "RETURNED_SQUARE_275",
            "SQUARE_275"
          ],
          "description": "The settlement\u0027s current status."
        },
        "amount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total amount of money this entry contributes to the total settlement amount."
        },
        "fee_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of all Square fees associated with this settlement entry. This value is always negative or zero."
        }
      }
    },
    "v1Tender": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The tender\u0027s unique ID."
        },
        "type": {
          "type": "string",
          "enum": [
            "CREDIT_CARD",
            "CASH",
            "THIRD_PARTY_CARD",
            "NO_SALE",
            "SQUARE_WALLET",
            "SQUARE_GIFT_CARD",
            "UNKNOWN",
            "OTHER"
          ],
          "description": "The type of tender."
        },
        "name": {
          "type": "string",
          "description": "A human-readable description of the tender."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee that processed the tender."
        },
        "receipt_url": {
          "type": "string",
          "description": "The URL of the receipt for the tender."
        },
        "card_brand": {
          "type": "string",
          "enum": [
            "OTHER_BRAND",
            "VISA",
            "MASTER_CARD",
            "AMERICAN_EXPRESS",
            "DISCOVER",
            "DISCOVER_DINERS",
            "JCB",
            "CHINA_UNIONPAY",
            "SQUARE_GIFT_CARD"
          ],
          "description": "The brand of credit card provided."
        },
        "pan_suffix": {
          "type": "string",
          "description": "The last four digits of the provided credit card\u0027s account number."
        },
        "entry_method": {
          "type": "string",
          "enum": [
            "MANUAL",
            "SCANNED",
            "SQUARE_CASH",
            "SQUARE_WALLET",
            "SWIPED",
            "WEB_FORM",
            "OTHER"
          ],
          "description": "The tender\u0027s unique ID."
        },
        "payment_note": {
          "type": "string",
          "description": "Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER."
        },
        "total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total amount of money provided in this form of tender."
        },
        "tendered_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of total_money applied to the payment."
        },
        "change_back_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of total_money returned to the buyer as change."
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all refunds applied to this tender. This amount is always negative or zero."
        }
      }
    },
    "v1PaymentTax": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "name": {
          "type": "string",
          "description": "The merchant-defined name of the tax."
        },
        "applied_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that this tax adds to the payment."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the tax, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
        },
        "inclusion_type": {
          "type": "string",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax."
        },
        "fee_id": {
          "type": "string",
          "description": "The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID."
        }
      }
    },
    "v1Order": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "id": {
          "type": "string",
          "description": "The order\u0027s unique identifier."
        },
        "buyer_email": {
          "type": "string",
          "description": "The email address of the order\u0027s buyer."
        },
        "recipient_name": {
          "type": "string",
          "description": "The name of the order\u0027s buyer."
        },
        "recipient_phone_number": {
          "type": "string",
          "description": "The phone number to use for the order\u0027s delivery."
        },
        "state": {
          "type": "string",
          "enum": [
            "PENDING",
            "OPEN",
            "COMPLETED",
            "CANCELED",
            "REFUNDED",
            "REJECTED"
          ],
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The address to ship the order to."
        },
        "subtotal_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of all items purchased in the order, before taxes and shipping."
        },
        "total_shipping_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The shipping cost for the order."
        },
        "total_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all taxes applied to the order."
        },
        "total_price_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total cost of the order."
        },
        "total_discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the order."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the order was created, in ISO 8601 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the order was last modified, in ISO 8601 format."
        },
        "expires_at": {
          "type": "string",
          "description": "The time when the order expires if no action is taken, in ISO 8601 format."
        },
        "payment_id": {
          "type": "string",
          "description": "The unique identifier of the payment associated with the order."
        },
        "buyer_note": {
          "type": "string",
          "description": "A note provided by the buyer when the order was created, if any."
        },
        "completed_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to COMPLETED, if any"
        },
        "refunded_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to REFUNDED, if any."
        },
        "canceled_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to CANCELED, if any."
        },
        "tender": {
          "$ref": "#/definitions/v1Tender",
          "description": "The tender used to pay for the order."
        },
        "order_history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OrderHistoryEntry"
          },
          "description": "The history of actions associated with the order."
        },
        "promo_code": {
          "type": "string",
          "description": "The promo code provided by the buyer, if any."
        },
        "btc_receive_address": {
          "type": "string",
          "description": "For Bitcoin transactions, the address that the buyer sent Bitcoin to."
        },
        "btc_price_satoshi": {
          "type": "number",
          "description": "For Bitcoin transactions, the price of the buyer\u0027s order in satoshi (100 million satoshi equals 1 BTC)."
        }
      }
    },
    "v1OrderHistoryEntry": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "ORDER_PLACED",
            "DECLINED",
            "PAYMENT_RECEIVED",
            "CANCELED",
            "COMPLETED",
            "REFUNDED",
            "EXPIRED"
          ],
          "description": "The type of action performed on the order."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the action was performed, in ISO 8601 format."
        }
      }
    },
    "v1BankAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The bank account\u0027s Square-issued ID."
        },
        "merchant_id": {
          "type": "string",
          "description": "The Square-issued ID of the merchant associated with the bank account."
        },
        "bank_name": {
          "type": "string",
          "description": "The name of the bank that manages the account."
        },
        "name": {
          "type": "string",
          "description": "The name associated with the bank account."
        },
        "routing_number": {
          "type": "string",
          "description": "The bank account\u0027s routing number."
        },
        "account_number_suffix": {
          "type": "string",
          "description": "The last few digits of the bank account number."
        },
        "currency_code": {
          "type": "string",
          "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD."
        },
        "type": {
          "type": "string",
          "enum": [
            "BUSINESS_CHECKING",
            "CHECKING",
            "INVESTMENT",
            "LOAN",
            "SAVINGS",
            "OTHER"
          ],
          "description": "The bank account\u0027s type (for example, savings or checking)."
        }
      }
    },
    "v1Variation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The item variation\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The item variation\u0027s name."
        },
        "item_id": {
          "type": "string",
          "description": "The ID of the variation\u0027s associated item."
        },
        "ordinal": {
          "type": "interger",
          "description": "Indicates the variation\u0027s list position when displayed in Square Register and the merchant dashboard. If more than one variation for the same item has the same ordinal value, those variations are displayed in alphabetical order"
        },
        "pricing_type": {
          "type": "string",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "description": "Indicates whether the item variation\u0027s price is fixed or determined at the time of sale."
        },
        "price_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The item variation\u0027s price, if any."
        },
        "sku": {
          "type": "string",
          "description": "The item variation\u0027s SKU, if any."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If true, inventory tracking is active for the variation."
        },
        "inventory_alert_type": {
          "type": "string",
          "enum": [
            "LOW_QUANTITY",
            "NONE",
            "INVESTMENT",
            "LOAN",
            "SAVINGS",
            "OTHER"
          ],
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its inventory_alert_threshold."
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "description": "If the inventory quantity for the variation is less than or equal to this value and inventory_alert_type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard."
        },
        "user_data": {
          "type": "string",
          "description": "Arbitrary metadata associated with the variation. Cannot exceed 255 characters."
        }
      }
    },
    "v1Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The item\u0027s ID. Must be unique among all entity IDs ever provided on behalf of the merchant. You can never reuse an ID. This value can include alphanumeric characters, dashes (-), and underscores (_)."
        },
        "name": {
          "type": "string",
          "description": "The item\u0027s name."
        },
        "description": {
          "type": "string",
          "description": "The item\u0027s description."
        },
        "type": {
          "type": "string",
          "enum": [
            "NORMAL",
            "GIFT_CARD",
            "OTHER"
          ],
          "description": "The item\u0027s type. This value is NORMAL for almost all items."
        },
        "color": {
          "type": "string",
          "enum": [
            "9da2a6",
            "4ab200",
            "0b8000",
            "2952cc",
            "a82ee5",
            "e5457a",
            "b21212",
            "593c00",
            "e5BF00"
          ],
          "description": "The color of the discount\u0027s display label in Square Register, if not the default color. The default color is 9da2a6."
        },
        "abbreviation": {
          "type": "string",
          "description": "The text of the item\u0027s display label in Square Register. Only up to the first five characters of the string are used."
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ],
          "description": "Indicates whether the item is viewable from the merchant\u0027s online store (PUBLIC) or PRIVATE."
        },
        "available_online": {
          "type": "boolean",
          "description": "If true, the item can be added to shipping orders from the merchant\u0027s online store."
        },
        "master_image": {
          "$ref": "#/definitions/v1ItemImage",
          "description": "The item\u0027s master image, if any."
        },
        "category": {
          "$ref": "#/definitions/v1Category",
          "description": "The category the item belongs to, if any."
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Variation"
          },
          "description": "The item\u0027s variations. You must specify at least one variation."
        },
        "modifier_lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Variation"
          },
          "description": "The modifier lists that apply to the item, if any."
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Fee"
          },
          "description": "The fees that apply to the item, if any."
        },
        "taxable": {
          "type": "boolean",
          "description": "Deprecated. This field is not used."
        }
      }
    },
    "v1Fee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fee\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The fee\u0027s name."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the fee, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
        },
        "calculation_phase": {
          "type": "string",
          "enum": [
            "FEE_SUBTOTAL_PHASE",
            "OTHER",
            "FEE_TOTAL_PHASE"
          ],
          "description": "Forthcoming"
        },
        "adjustment_type": {
          "type": "string",
          "enum": [
            "TAX"
          ],
          "description": "The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees."
        },
        "applies_to_custom_amounts": {
          "type": "boolean",
          "description": "If true, the fee applies to custom amounts entered into Square Register that are not associated with a particular item."
        },
        "enabled": {
          "type": "boolean",
          "description": "If true, the fee is applied to all appropriate items. If false, the fee is not applied at all."
        },
        "inclusion_type": {
          "type": "string",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "description": "Whether the fee is ADDITIVE or INCLUSIVE."
        },
        "type": {
          "type": "string",
          "enum": [
            "CA_GST",
            "CA_HST",
            "CA_PST",
            "CA_QST",
            "JP_CONSUMPTION_TAX",
            "CA_PEI_PST",
            "US_SALES_TAX",
            "OTHER"
          ],
          "description": "In countries with multiple classifications for sales taxes, indicates which classification the fee falls under. Currently relevant only to Canadian merchants."
        }
      }
    },
    "v1ModifierList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The modifier list\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The modifier list\u0027s name."
        },
        "selection_type": {
          "type": "string",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "description": "Indicates whether MULTIPLE options or a SINGLE option from the modifier list can be applied to a single item."
        },
        "modifier_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ModifierOption"
          },
          "description": "The options included in the modifier list."
        }
      }
    },
    "v1ModifierOption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The modifier option\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The modifier option\u0027s name."
        },
        "price_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The modifier option\u0027s price."
        },
        "on_by_default": {
          "type": "boolean",
          "description": "If true, the modifier option is the default option in a modifier list for which selection_type is SINGLE."
        },
        "ordinal": {
          "type": "integer",
          "description": "Indicates the modifier option\u0027s list position when displayed in Square Register and the merchant dashboard. If more than one modifier option in the same modifier list has the same ordinal value, those options are displayed in alphabetical order."
        },
        "modifier_list_id": {
          "type": "string",
          "description": "The ID of the modifier list the option belongs to."
        }
      }
    },
    "v1Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The category\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The category\u0027s name."
        }
      }
    },
    "v1ItemImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The image\u0027s unique ID."
        },
        "url": {
          "type": "string",
          "description": "The image\u0027s publicly accessible URL."
        }
      }
    },
    "v1InventoryEntry": {
      "type": "object",
      "properties": {
        "variation_id": {
          "type": "string",
          "description": "The variation that the entry corresponds to."
        },
        "quantity_on_hand": {
          "type": "number",
          "description": "The current available quantity of the item variation."
        }
      }
    },
    "v1AdjustInventoryRequest": {
      "type": "object",
      "properties": {
        "quantity_delta": {
          "type": "number",
          "description": "The number to adjust the variation\u0027s quantity by."
        },
        "adjustment_type": {
          "type": "number",
          "enum": [
            "SALE",
            "RECEIVE_STOCK",
            "MANUAL_ADJUST"
          ],
          "description": "The reason for the inventory adjustment."
        },
        "memo": {
          "type": "string",
          "description": "A note about the inventory adjustment."
        }
      }
    },
    "v1Discount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The discount\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE."
        },
        "amount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of the discount. This amount is 0 if discount_type is VARIABLE_AMOUNT. This field is not included for rate-based discounts."
        },
        "discount_type": {
          "type": "string",
          "enum": [
            "FIXED",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "description": "Indicates whether the discount is a FIXED value or entered at the time of sale."
        },
        "pin_required": {
          "type": "boolean",
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the discount to a payment."
        },
        "color": {
          "type": "string",
          "enum": [
            "9da2a6",
            "4ab200",
            "0b8000",
            "2952cc",
            "a82ee5",
            "e5457a",
            "b21212",
            "593c00",
            "e5BF00"
          ],
          "description": "The color of the discount\u0027s display label in Square Register, if not the default color. The default color is 9da2a6."
        }
      }
    },
    "v1Page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The page\u0027s unique identifier."
        },
        "name": {
          "type": "string",
          "description": "The page\u0027s name, if any."
        },
        "page_index": {
          "type": "integer",
          "description": "The page\u0027s position in the merchant\u0027s list of pages. Always an integer between 0 and 4, inclusive."
        },
        "cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PageCell"
          },
          "description": "The cells included on the page."
        }
      }
    },
    "v1PageCell": {
      "type": "object",
      "properties": {
        "page_id": {
          "type": "string",
          "description": "The unique identifier of the page the cell is included on."
        },
        "row": {
          "type": "integer",
          "description": "The row of the cell. Always an integer between 0 and 4, inclusive."
        },
        "column": {
          "type": "integer",
          "description": "The column of the cell. Always an integer between 0 and 4, inclusive."
        },
        "object_type": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ITEM",
              "DISCOUNT",
              "CATEGORY",
              "PLACEHOLDER"
            ]
          },
          "description": "The type of entity represented in the cell (ITEM, DISCOUNT, CATEGORY, or PLACEHOLDER)."
        },
        "object_id": {
          "type": "string",
          "description": "The unique identifier of the entity represented in the cell. Not present for cells with an object_type of PLACEHOLDER."
        },
        "placeholder_type": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ALL_ITEMS",
              "DISCOUNTS_CATEGORY",
              "REWARDS_FINDER"
            ]
          },
          "description": "For a cell with an object_type of PLACEHOLDER, this value indicates the cell\u0027s special behavior."
        }
      }
    },
    "v1CreateRefundRequest": {
      "type": "object",
      "required": [
        "payment_id",
        "type",
        "reason"
      ],
      "properties": {
        "payment_id": {
          "type": "string",
          "description": "The ID of the payment to refund. If you\u0027re creating a PARTIAL refund for a split tender payment, instead provide the id of the particular tender you want to refund. See Split Tender Payments for details."
        },
        "type": {
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ],
          "description": "TThe type of refund (FULL or PARTIAL)."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund."
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money to refund. Required only for PARTIAL refunds."
        },
        "request_idempotence_key": {
          "type": "string",
          "description": "An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once."
        }
      }
    },
    "v1UpdateOrderRequest": {
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "COMPLETE",
            "CANCEL",
            "REFUND"
          ],
          "description": "The action to perform on the order (COMPLETE, CANCEL, or REFUND)."
        },
        "shipped_tracking_number": {
          "type": "string",
          "description": "The tracking number of the shipment associated with the order. Only valid if action is COMPLETE."
        },
        "completed_note": {
          "type": "string",
          "description": "A merchant-specified note about the completion of the order. Only valid if action is COMPLETE."
        },
        "refunded_note": {
          "type": "string",
          "description": "A merchant-specified note about the refunding of the order. Only valid if action is REFUND."
        },
        "canceled_note": {
          "type": "string",
          "description": "A merchant-specified note about the canceling of the order. Only valid if action is CANCEL."
        }
      }
    },
    "v1UpdateModifierListRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The modifier list\u0027s name."
        },
        "selection_type": {
          "type": "string",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "description": "Indicates whether multiple options from the modifier list can be applied to a single item."
        }
      }
    }
  }
}
